Search.setIndex({"alltitles": {"Acquisition Function Values": [[454, "acquisition-function-values"]], "Acquisition function": [[409, "acquisition-function"]], "AcquisitionFunction": [[24, null]], "Active Learning": [[452, null]], "Added": [[448, "added"], [448, "id6"], [448, "id15"], [448, "id25"], [448, "id29"], [448, "id35"], [448, "id42"], [448, "id51"], [448, "id57"], [448, "id61"], [448, "id68"], [448, "id73"], [448, "id79"], [448, "id85"], [448, "id89"], [448, "id93"], [448, "id97"], [448, "id102"], [448, "id106"], [448, "id109"], [448, "id113"], [448, "id117"], [448, "id121"], [448, "id124"], [448, "id128"], [448, "id132"], [448, "id136"], [448, "id140"], [448, "id146"], [448, "id149"]], "Addendum: Description of transformation functions": [[431, "addendum-description-of-transformation-functions"]], "Adding Fake Target Measurements and Parameter Noise": [[469, "adding-fake-target-measurements-and-parameter-noise"]], "Adding Irrelevant Data": [[467, null]], "Adding Measurements": [[454, "adding-measurements"]], "Adding Partial Results": [[453, "adding-partial-results"]], "AdditiveKernel": [[117, null]], "Advanced Example: Chemical Substances": [[446, "advanced-example-chemical-substances"]], "An Imaginary Use Case": [[429, "an-imaginary-use-case"]], "Array-Based Callables": [[464, null]], "Asynchronous Workflows": [[453, null]], "Auto-Replication": [[465, "auto-replication"]], "Automatic field conversion": [[463, "automatic-field-conversion"]], "Available Models": [[465, "available-models"]], "Available recommenders suitable for initial recommendation": [[409, "available-recommenders-suitable-for-initial-recommendation"]], "Available surrogate models": [[409, "available-surrogate-models"]], "Backtesting": [[402, null], [442, null]], "BaseSequentialMetaRecommender": [[183, null]], "Basic Creation": [[454, "basic-creation"]], "Basic Instructions": [[456, "basic-instructions"]], "Basic Usage": [[458, "basic-usage"]], "Basic example for using BayBE": [[408, null]], "Basic string assembly": [[463, "basic-string-assembly"]], "BasicKernel": [[104, null]], "Basics": [[407, null], [454, "basics"]], "Batch Optimization": [[454, null]], "BayBE \u2014 A Bayesian Back End for Design of Experiments": [[446, null]], "Bayesian Recommenders": [[461, "bayesian-recommenders"]], "BayesianLinearSurrogate": [[280, null]], "BayesianRecommender": [[194, null]], "Bernoulli Multi Armed Bandit": [[429, null]], "BetaBernoulliMultiArmedBanditSurrogate": [[253, null]], "BetaPrior": [[169, null]], "BinaryTarget": [[299, null]], "BotorchRecommender": [[196, null]], "Bound methods": [[419, "bound-methods"]], "Breaking Changes": [[448, "breaking-changes"], [448, "id34"], [448, "id41"]], "Building from the Product of Parameter Values": [[462, "building-from-the-product-of-parameter-values"], [462, "id2"]], "Building the Model": [[429, "building-the-model"]], "CPUs without AVX support \u2013 Installation of polars": [[447, "cpus-without-avx-support-installation-of-polars"]], "Caching of Recommendations": [[454, "caching-of-recommendations"]], "Campaign": [[31, null]], "Campaign Setup": [[432, "campaign-setup"]], "Campaign Stopping": [[420, null]], "Campaigns": [[454, null]], "Candidate Control in Discrete Spaces": [[454, "candidate-control-in-discrete-spaces"]], "Candidate Toggling vs. Applying Constraints": [[457, null]], "CardinalityConstraint": [[34, null]], "CategoricalEncoding": [[146, null]], "CategoricalParameter": [[141, null], [460, "categoricalparameter"]], "Caution": [[457, null]], "Changed": [[448, "changed"], [448, "id3"], [448, "id7"], [448, "id11"], [448, "id13"], [448, "id16"], [448, "id20"], [448, "id26"], [448, "id30"], [448, "id36"], [448, "id43"], [448, "id48"], [448, "id52"], [448, "id58"], [448, "id62"], [448, "id65"], [448, "id69"], [448, "id74"], [448, "id80"], [448, "id86"], [448, "id90"], [448, "id94"], [448, "id98"], [448, "id103"], [448, "id107"], [448, "id110"], [448, "id114"], [448, "id118"], [448, "id122"], [448, "id125"], [448, "id129"], [448, "id133"], [448, "id137"], [448, "id141"]], "Changelog": [[448, null]], "Clustering Recommenders": [[461, "clustering-recommenders"]], "Code Design": [[449, "code-design"]], "ColumnTransformer": [[391, null]], "Comparing recommendations in both objects": [[438, "comparing-recommendations-in-both-objects"]], "Composite Surrogates": [[465, "composite-surrogates"]], "CompositeKernel": [[105, null]], "CompositeSurrogate": [[260, null]], "Computational Challenges": [[455, null]], "Condition": [[40, null]], "Conditions": [[455, "conditions"]], "Constraint": [[35, null]], "Constraint Setup": [[426, "constraint-setup"]], "Constraints": [[455, null]], "Constraints Continuous": [[410, null]], "Constraints Discrete": [[413, null]], "Constraints Setup": [[427, "constraints-setup"]], "Construct the campaign and run some iterations": [[411, "construct-the-campaign-and-run-some-iterations"], [412, "construct-the-campaign-and-run-some-iterations"]], "Constructing Full Search Spaces": [[462, "constructing-full-search-spaces"]], "Constructing campaigns for the simulation loop": [[404, "constructing-campaigns-for-the-simulation-loop"], [405, "constructing-campaigns-for-the-simulation-loop"], [406, "constructing-campaigns-for-the-simulation-loop"]], "Constructing from a Dataframe": [[462, "constructing-from-a-dataframe"], [462, "id1"], [462, "id3"]], "Constructing hybrid recommenders": [[436, "constructing-hybrid-recommenders"]], "Constructing the campaign and performing a recommendation": [[435, "constructing-the-campaign-and-performing-a-recommendation"], [436, "constructing-the-campaign-and-performing-a-recommendation"]], "Constructing the hybrid searchspace": [[436, "constructing-the-hybrid-searchspace"]], "Continuous Constraints": [[455, "continuous-constraints"]], "Continuous Parameters": [[460, "continuous-parameters"]], "Continuous Subspaces": [[462, "continuous-subspaces"]], "ContinuousCardinalityConstraint": [[44, null], [455, "continuouscardinalityconstraint"]], "ContinuousConstraint": [[36, null]], "ContinuousLinearConstraint": [[45, null], [455, "continuouslinearconstraint"]], "ContinuousNonlinearConstraint": [[37, null]], "ContinuousParameter": [[137, null]], "Contributing to BayBE": [[449, null]], "Contributors": [[450, null], [450, "id1"]], "Convenience Construction and Implicit Conversion": [[459, null]], "Convenience Multi-Output Casting": [[459, null]], "Conventions for attrs classes": [[449, "conventions-for-attrs-classes"]], "Convert model to onnx": [[423, "convert-model-to-onnx"]], "Create a surrogate model with a pretrained model": [[423, "create-a-surrogate-model-with-a-pretrained-model"]], "Create a surrogate model with custom model parameters": [[424, "create-a-surrogate-model-with-custom-model-parameters"]], "Create campaign": [[423, "create-campaign"]], "Creating Continuous Search Spaces": [[434, null]], "Creating a Campaign": [[454, "creating-a-campaign"]], "Creating a Simplex-Bound Discrete Subspace": [[462, "creating-a-simplex-bound-discrete-subspace"]], "Creating a campaign from the configuration file": [[439, "creating-a-campaign-from-the-configuration-file"]], "Creating and printing the campaign": [[414, "creating-and-printing-the-campaign"], [415, "creating-and-printing-the-campaign"], [417, "creating-and-printing-the-campaign"], [431, "creating-and-printing-the-campaign"]], "Creating the Campaigns": [[403, "creating-the-campaigns"]], "Creating the Objective": [[405, "creating-the-objective"]], "Creating the Optimization Objective": [[442, "creating-the-optimization-objective"], [443, "creating-the-optimization-objective"]], "Creating the Search Space": [[442, "creating-the-search-space"]], "Creating the Searchspace": [[443, "creating-the-searchspace"]], "Creating the campaign": [[409, "creating-the-campaign"], [424, "creating-the-campaign"], [438, "creating-the-campaign"]], "Creating the constraint": [[414, "creating-the-constraint"], [416, "creating-the-constraint"]], "Creating the constraints": [[415, "creating-the-constraints"], [417, "creating-the-constraints"]], "Creating the objective": [[431, "creating-the-objective"]], "Creating the recommender object": [[409, "creating-the-recommender-object"]], "Creating the searchspace and the objective": [[404, "creating-the-searchspace-and-the-objective"], [406, "creating-the-searchspace-and-the-objective"], [411, "creating-the-searchspace-and-the-objective"], [412, "creating-the-searchspace-and-the-objective"], [414, "creating-the-searchspace-and-the-objective"], [415, "creating-the-searchspace-and-the-objective"], [416, "creating-the-searchspace-and-the-objective"], [417, "creating-the-searchspace-and-the-objective"], [435, "creating-the-searchspace-and-the-objective"]], "Creation From a JSON Config": [[454, "creation-from-a-json-config"]], "Current Scalarization Limitations": [[465, null]], "Custom Hooks": [[418, null]], "Custom Surrogates": [[422, null]], "CustomDiscreteParameter": [[144, null], [460, "customdiscreteparameter"]], "CustomEncoding": [[147, null]], "CustomONNXSurrogate": [[262, null]], "Dataframe deserialization": [[463, "dataframe-deserialization"]], "DefaultKernelFactory": [[276, null]], "Defining config dictionaries": [[440, "defining-config-dictionaries"]], "Defining the Campaign-Stopping Hook": [[420, "defining-the-campaign-stopping-hook"]], "Defining the Hook": [[421, "defining-the-hook"]], "Defining the Hooks": [[419, "defining-the-hooks"]], "Defining the Optimization Objective": [[446, "defining-the-optimization-objective"]], "Defining the Optimization Problem": [[403, "defining-the-optimization-problem"], [432, "defining-the-optimization-problem"]], "Defining the Search Space": [[446, "defining-the-search-space"]], "Defining the Tasks": [[442, "defining-the-tasks"], [443, "defining-the-tasks"]], "Defining the targets": [[431, "defining-the-targets"]], "Defining the test function": [[411, "defining-the-test-function"], [412, "defining-the-test-function"], [435, "defining-the-test-function"]], "Defining the test function and the hybrid dimensions": [[436, "defining-the-test-function-and-the-hybrid-dimensions"]], "Deprecations": [[448, "deprecations"], [448, "id32"], [448, "id39"], [448, "id46"], [448, "id55"], [448, "id71"], [448, "id77"], [448, "id83"], [448, "id100"]], "Deserialization from configuration strings": [[463, "deserialization-from-configuration-strings"]], "DesirabilityObjective": [[125, null], [459, "desirabilityobjective"]], "Developer Tools": [[449, "developer-tools"]], "Discrete Constraints": [[455, "discrete-constraints"]], "Discrete Parameters": [[460, "discrete-parameters"]], "Discrete Subspaces": [[462, "discrete-subspaces"]], "Discrete vs. Continuous Modeling": [[426, null]], "DiscreteCardinalityConstraint": [[51, null], [455, "discretecardinalityconstraint"]], "DiscreteConstraint": [[38, null]], "DiscreteCustomConstraint": [[52, null], [455, "discretecustomconstraint"]], "DiscreteDependenciesConstraint": [[53, null], [455, "discretedependenciesconstraint"]], "DiscreteExcludeConstraint": [[54, null], [455, "discreteexcludeconstraint"]], "DiscreteLinkedParametersConstraint": [[55, null], [455, "discretelinkedparametersconstraint"]], "DiscreteNoLabelDuplicatesConstraint": [[56, null], [455, "discretenolabelduplicatesconstraint"]], "DiscreteParameter": [[138, null]], "DiscretePermutationInvarianceConstraint": [[57, null], [455, "discretepermutationinvarianceconstraint"]], "DiscreteProductConstraint": [[58, null]], "DiscreteSamplingMethod": [[387, null]], "DiscreteSumConstraint": [[59, null]], "DiscreteSumConstraint and DiscreteProductConstraint": [[455, "discretesumconstraint-and-discreteproductconstraint"]], "Discussion": [[429, "discussion"]], "Disk Caching": [[456, "disk-caching"]], "Dummy": [[320, null]], "Duplicate Substances": [[426, "duplicate-substances"]], "Dynamic Exclusion": [[457, "dynamic-exclusion"]], "EDBOKernelFactory": [[278, null]], "EXPERIMENTAL: Floating Point Precision": [[456, "experimental-floating-point-precision"]], "Efficient Search Space Creation": [[469, null]], "Environment Variables": [[456, null]], "Equivalent copies": [[463, null]], "Estimation with Constraints": [[469, null]], "Example Searchspace and objective parameters": [[409, "example-searchspace-and-objective-parameters"]], "Example for constraints in a hybrid searchspace": [[411, null]], "Example for creating campaigns from configs": [[439, null]], "Example for custom parameter passing in surrogate models": [[424, null]], "Example for full simulation loop using a table-based lookup mechanism": [[405, null]], "Example for full simulation loop using a table-based lookup mechanism with incomplete": [[406, null]], "Example for full simulation loop using a table-based lookup mechanism with initial": [[404, null]], "Example for linear constraints in a continuous searchspace": [[412, null]], "Example for surrogate model with a custom pretrained model": [[423, null]], "Example for the serialization of a campaign": [[438, null]], "Example for using a synthetic BoTorch test function in a discrete searchspace": [[435, null]], "Example for using custom constraints in discrete searchspaces": [[414, null]], "Example for using dependency constraints in discrete searchspaces": [[415, null]], "Example for using different strategies": [[409, null]], "Example for using exclusion constraints in discrete searchspaces": [[416, null]], "Example for using exclusion constraints incorporating sums and products": [[417, null]], "Example for using synthetic test functions in hybrid spaces": [[436, null]], "Example for using the multi target mode for the objective": [[431, null]], "Example for validation of a config file": [[440, null]], "Examples": [[444, null]], "Examples On This Page": [[458, null]], "Excluding Configurations": [[457, "excluding-configurations"]], "Expectations": [[467, null]], "ExpectedImprovement": [[3, null]], "Experiment Setup": [[423, "experiment-setup"], [424, "experiment-setup"]], "Experiment setup": [[414, "experiment-setup"], [415, "experiment-setup"], [416, "experiment-setup"], [417, "experiment-setup"], [438, "experiment-setup"]], "Experiment setup and creating the searchspace": [[431, "experiment-setup-and-creating-the-searchspace"]], "Experimental Feature": [[456, null]], "Experimental Feature \u2013>": [[456, null]], "Experimental Representation Limits": [[458, null]], "Experimental and Computational Representations": [[458, "experimental-and-computational-representations"]], "Expired Deprecations (from 0.6.*)": [[448, "expired-deprecations-from-0-6"]], "Expired Deprecations (from 0.7.*)": [[448, "expired-deprecations-from-0-7"]], "Expired Deprecations (from 0.9.*)": [[448, "expired-deprecations-from-0-9"]], "Explainers": [[458, "explainers"]], "Extending BayBE\u2019s Functionality": [[449, "extending-baybe-s-functionality"]], "Extracting the Model for Advanced Study": [[465, "extracting-the-model-for-advanced-study"]], "FAQ": [[445, null]], "FPSInitialization": [[208, null]], "FPSRecommender": [[209, null]], "Fixed": [[448, "fixed"], [448, "id4"], [448, "id8"], [448, "id17"], [448, "id21"], [448, "id23"], [448, "id27"], [448, "id31"], [448, "id37"], [448, "id45"], [448, "id49"], [448, "id54"], [448, "id59"], [448, "id63"], [448, "id70"], [448, "id75"], [448, "id81"], [448, "id87"], [448, "id95"], [448, "id99"], [448, "id104"], [448, "id111"], [448, "id115"], [448, "id119"], [448, "id126"], [448, "id130"], [448, "id134"], [448, "id138"], [448, "id142"], [448, "id144"], [448, "id147"]], "For Label-Like Parameters: Values and Active Values": [[460, "label-like"]], "From GitHub": [[446, "from-github"]], "From Local Clone": [[446, "from-local-clone"]], "From Package Index": [[446, "from-package-index"]], "From the Default Constructor": [[462, "from-the-default-constructor"]], "Further Information": [[454, "further-information"]], "GammaPrior": [[170, null]], "GaussianMixtureClusteringRecommender": [[203, null]], "GaussianProcessPreset": [[273, null]], "GaussianProcessSurrogate": [[266, null]], "General Information": [[461, "general-information"]], "General Workflow": [[449, "general-workflow"]], "Generating Lookup Tables": [[442, "generating-lookup-tables"], [443, "generating-lookup-tables"]], "Getting Recommendations": [[454, "getting-recommendations"], [457, null]], "Getting a recommendation and adding measurements": [[408, "getting-a-recommendation-and-adding-measurements"]], "Global Uncertainty Reduction": [[452, "global-uncertainty-reduction"]], "HalfCauchyPrior": [[171, null]], "HalfNormalPrior": [[172, null]], "Hook instance vs. target instance": [[419, null]], "Hybrid constraints": [[455, null]], "Imports": [[403, "imports"], [419, "imports"], [421, "imports"], [426, "imports"], [427, "imports"], [429, "imports"], [432, "imports"], [434, "imports"], [442, "imports"], [443, "imports"]], "Inclusion of initial data": [[404, "inclusion-of-initial-data"]], "IndependentGaussianSurrogate": [[255, null]], "Indices and Tables": [[446, "indices-and-tables"]], "Influence of Continuous Parameters": [[469, null]], "Insights": [[458, null]], "Installation Related Issues": [[447, "installation-related-issues"]], "Interval": [[371, null]], "Invoking alternative constructors": [[463, "invoking-alternative-constructors"]], "Iterate with recommendations and measurements": [[423, "iterate-with-recommendations-and-measurements"], [424, "iterate-with-recommendations-and-measurements"]], "JSON (de-)serialization": [[463, "json-de-serialization"]], "KMeansClusteringRecommender": [[204, null]], "KMedoids": [[347, null]], "Kernel": [[106, null]], "KernelFactory": [[268, null]], "Known Issues": [[447, null]], "License": [[451, null]], "Limitations": [[453, null], [466, "limitations"]], "LinearKernel": [[108, null]], "Links for documentation": [[424, "links-for-documentation"]], "Local Uncertainty Reduction": [[452, "local-uncertainty-reduction"]], "LogExpectedImprovement": [[4, null]], "LogNormalPrior": [[173, null]], "Lookup functionality and data creation": [[404, "lookup-functionality-and-data-creation"], [405, "lookup-functionality-and-data-creation"], [406, "lookup-functionality-and-data-creation"]], "MATCH mode": [[466, "match-mode"]], "MIN and MAX mode": [[466, "min-and-max-mode"]], "Maintainers": [[450, "maintainers"]], "Mandatory Target Bounds": [[459, null]], "Manual verification of the constraint": [[414, "manual-verification-of-the-constraint"]], "Manual verification of the constraints": [[415, "manual-verification-of-the-constraints"], [416, "manual-verification-of-the-constraints"], [417, "manual-verification-of-the-constraints"]], "Marking Experiments as Pending": [[453, "marking-experiments-as-pending"]], "MaternKernel": [[109, null]], "MeanPredictionSurrogate": [[282, null]], "Memory During Optimization": [[469, null]], "MemorySize": [[220, null]], "Meta Recommenders": [[457, null], [461, "meta-recommenders"]], "MetaRecommender": [[181, null]], "Method overrides": [[449, "method-overrides"]], "Missing Lookup Values": [[464, null]], "Mixtures": [[425, null]], "Model Interpretation in BO": [[458, null]], "Model Outputs": [[423, "model-outputs"], [424, "model-outputs"]], "Modeling a Mixture in Slot-Based Representation": [[426, null]], "Modeling a Mixture in Traditional Representation": [[427, null]], "Monitoring the Probability of Improvement": [[421, null]], "Monkeypatching": [[419, "monkeypatching"], [420, null], [421, "monkeypatching"]], "Multi Target": [[430, null]], "Multi-Armed Bandit": [[428, null]], "Multi-Output Modeling": [[465, "multi-output-modeling"]], "Multi-Output Surrogate Models": [[458, "multi-output-surrogate-models"]], "NGBoostSurrogate": [[284, null]], "NaiveHybridSpaceRecommender": [[188, null]], "Necessary imports": [[423, "necessary-imports"], [424, "necessary-imports"], [438, "necessary-imports"], [439, "necessary-imports"], [440, "necessary-imports"]], "Necessary imports for this example": [[404, "necessary-imports-for-this-example"], [405, "necessary-imports-for-this-example"], [406, "necessary-imports-for-this-example"], [408, "necessary-imports-for-this-example"], [409, "necessary-imports-for-this-example"], [411, "necessary-imports-for-this-example"], [412, "necessary-imports-for-this-example"], [414, "necessary-imports-for-this-example"], [415, "necessary-imports-for-this-example"], [416, "necessary-imports-for-this-example"], [417, "necessary-imports-for-this-example"], [431, "necessary-imports-for-this-example"], [435, "necessary-imports-for-this-example"], [436, "necessary-imports-for-this-example"]], "Nesting objects": [[463, "nesting-objects"]], "Non-Dominated Configurations": [[459, null]], "NonPredictiveRecommender": [[201, null]], "NormalPrior": [[174, null]], "NumericalContinuousParameter": [[151, null], [460, "numericalcontinuousparameter"]], "NumericalDiscreteParameter": [[152, null], [460, "numericaldiscreteparameter"]], "NumericalTarget": [[305, null], [466, "numericaltarget"]], "Objective": [[122, null], [459, null]], "Optimizing a Custom Black-Box Function": [[403, null]], "Optional Dependencies": [[446, "optional-dependencies"]], "Optional Dependency": [[460, null]], "Optional: Defining the Optimization Strategy": [[446, "optional-defining-the-optimization-strategy"]], "Order of Addition": [[426, null]], "PAMClusteringRecommender": [[205, null]], "Parallel Runs in Scenario Simulations": [[456, "parallel-runs-in-scenario-simulations"]], "Parameter": [[139, null]], "Parameter Encoding": [[460, null]], "Parameter Importance via SHAP": [[458, "parameter-importance-via-shap"]], "Parameter Names": [[460, null]], "Parameter Setup": [[426, "parameter-setup"], [427, "parameter-setup"]], "Parameter tolerances": [[454, null]], "ParameterEncoding": [[148, null]], "Parameters": [[460, null]], "Parameters for a full simulation loop": [[404, "parameters-for-a-full-simulation-loop"], [405, "parameters-for-a-full-simulation-loop"], [406, "parameters-for-a-full-simulation-loop"]], "ParetoObjective": [[130, null], [459, "paretoobjective"]], "PartialAcquisitionFunction": [[26, null]], "Performing some iterations": [[431, "performing-some-iterations"]], "Performing the simulation loop": [[404, "performing-the-simulation-loop"]], "PeriodicKernel": [[110, null]], "Permanent Exclusion": [[457, "permanent-exclusion"]], "Permutation Invariance": [[426, "permutation-invariance"]], "PiecewisePolynomialKernel": [[111, null]], "PlainKernelFactory": [[269, null]], "Plots": [[458, "plots"]], "Plotting the Results": [[403, "plotting-the-results"], [420, "plotting-the-results"], [421, "plotting-the-results"]], "Polars": [[456, "polars"]], "PolynomialKernel": [[112, null]], "Posterior Statistics with Desirability Objectives": [[454, null]], "PosteriorMean": [[5, null]], "PosteriorStandardDeviation": [[6, null]], "Predictive Statistics": [[454, "predictive-statistics"]], "Prior": [[167, null]], "ProbabilityOfImprovement": [[7, null]], "Problem Definition and Lookup Functionality": [[420, "problem-definition-and-lookup-functionality"]], "ProductKernel": [[118, null]], "Pure Recommenders": [[461, "pure-recommenders"]], "PureRecommender": [[191, null]], "Purely Continuous Search Spaces": [[452, null]], "PyCharm vs. exceptiongroup": [[447, "pycharm-vs-exceptiongroup"]], "RBFKernel": [[113, null]], "RFFKernel": [[114, null]], "RQKernel": [[115, null]], "RandomForestSurrogate": [[286, null]], "RandomRecommender": [[210, null]], "RecommenderProtocol": [[178, null]], "Recommenders": [[461, null]], "Registering Custom Hooks": [[419, null]], "Removed": [[448, "removed"], [448, "id9"], [448, "id18"], [448, "id38"], [448, "id44"], [448, "id53"], [448, "id66"], [448, "id76"], [448, "id82"], [448, "id91"]], "Representation of Data within Discrete Subspaces": [[462, "representation-of-data-within-discrete-subspaces"]], "Reproducibility": [[469, "reproducibility"]], "Restricting Search Spaces Using Constraints": [[462, "restricting-search-spaces-using-constraints"]], "Row Order": [[456, null]], "Running the Simulation": [[429, "running-the-simulation"]], "Running the Simulation Loop": [[403, "running-the-simulation-loop"]], "SHAPInsight": [[97, null]], "SKLearnClusteringRecommender": [[206, null]], "Sampling Recommenders": [[461, "sampling-recommenders"]], "Scalarizer": [[128, null]], "ScaleKernel": [[119, null]], "Search Space Creation": [[426, "search-space-creation"], [427, "search-space-creation"]], "Search Space Memory Estimation": [[469, "search-space-memory-estimation"]], "Search Spaces": [[462, null]], "SearchSpace": [[215, null]], "SearchSpaceType": [[216, null]], "Searchspaces": [[433, null]], "Seeing Transfer Learning in Action": [[467, "seeing-transfer-learning-in-action"]], "Sequential vs. Parallel Experimentation": [[454, null]], "SequentialMetaRecommender": [[184, null]], "SerialMixin": [[238, null]], "Serialization": [[437, null], [454, "serialization"], [463, null]], "Serialization and de-serialization": [[438, "serialization-and-de-serialization"]], "Settings": [[403, "settings"], [420, "settings"], [421, "settings"], [432, "settings"], [434, "settings"], [442, "settings"], [443, "settings"]], "Setup": [[408, "setup"], [429, "setup"]], "Signature components": [[419, null]], "Simplex Construction": [[426, null]], "Simulating Multiple Scenarios": [[464, "simulating-multiple-scenarios"]], "Simulating Transfer Learning": [[464, "simulating-transfer-learning"]], "Simulating a Single Experiment": [[464, "simulating-a-single-experiment"]], "Simulating the Interrupted Campaigns": [[420, "simulating-the-interrupted-campaigns"]], "Simulating the Uninterrupted Campaigns": [[420, "simulating-the-uninterrupted-campaigns"]], "Simulation": [[464, null]], "Simulation Loop": [[442, "simulation-loop"], [443, "simulation-loop"]], "Single-Target vs. Pareto Optimization": [[432, null]], "SingleTargetObjective": [[132, null], [459, "singletargetobjective"]], "Slot-based Representation": [[427, null]], "SmoothedBoxPrior": [[175, null]], "StreamingSequentialMetaRecommender": [[185, null]], "Sub-Sampling Method": [[452, null]], "SubSelectionCondition": [[41, null], [455, "subselectioncondition"]], "SubspaceContinuous": [[213, null]], "SubspaceDiscrete": [[221, null]], "Substance Amounts": [[426, "substance-amounts"]], "SubstanceEncoding": [[149, null]], "SubstanceParameter": [[155, null], [460, "substanceparameter"]], "Suggested Fix": [[447, null], [447, null], [447, null], [447, null]], "Supported Acquisition Functions": [[453, null]], "Supported Recommenders": [[453, null]], "Surrogate": [[257, null]], "Surrogate Replication": [[465, "surrogate-replication"]], "SurrogateProtocol": [[258, null]], "Surrogates": [[465, null]], "Synchronizing Pull Requests": [[449, "synchronizing-pull-requests"]], "Target": [[297, null]], "TargetMode": [[302, null]], "TargetTransformation": [[303, null]], "Targets": [[466, null]], "TaskParameter": [[142, null], [460, "taskparameter"]], "Technology": [[467, null]], "Telemetry": [[456, "telemetry"]], "Telemetry Scope": [[456, null]], "Terminology": [[426, "terminology"], [463, null], [467, null]], "Terminology Continued": [[467, null]], "Terminology: What do we mean by \u201cSimulation\u201d?": [[464, "terminology-what-do-we-mean-by-simulation"]], "The Black Box Model": [[429, "the-black-box-model"]], "The Lookup Mechanism": [[464, "the-lookup-mechanism"]], "The Optimization Loop": [[446, "the-optimization-loop"]], "The Role of the TaskParameter": [[467, "the-role-of-the-taskparameter"]], "The configuration dictionary as a string": [[439, "the-configuration-dictionary-as-a-string"]], "The recommend Call": [[457, "the-recommend-call"]], "The type field": [[463, "the-type-field"]], "Theoretical Span": [[426, null]], "ThresholdCondition": [[42, null], [455, "thresholdcondition"]], "Trajectory-Based Control": [[457, null]], "Transfer Learning": [[441, null], [443, null], [467, null]], "Triggering the Hook": [[421, "triggering-the-hook"]], "Triggering the Hooks": [[419, "triggering-the-hooks"]], "TwoPhaseMetaRecommender": [[186, null]], "Uninstalling Internet Packages": [[456, null]], "Unlocking Data Treasures Through Transfer Learning": [[467, "unlocking-data-treasures-through-transfer-learning"]], "UnspecifiedType": [[322, null]], "UpperConfidenceBound": [[8, null]], "User Guide": [[468, null]], "Using Custom Models": [[465, "using-custom-models"]], "Using Explicit Bounds": [[462, "using-explicit-bounds"]], "Using None": [[464, "using-none"]], "Using a Callable": [[464, "using-a-callable"]], "Using a Dataframe": [[464, "using-a-dataframe"]], "Using abbreviations": [[463, "using-abbreviations"]], "Using configuration instead": [[423, "using-configuration-instead"], [424, "using-configuration-instead"]], "Using default values": [[463, "using-default-values"]], "Utilities": [[469, null]], "Validation of model parameters": [[424, "validation-of-model-parameters"]], "Verification of Constraints": [[426, "verification-of-constraints"], [427, "verification-of-constraints"]], "Verification of Span": [[426, "verification-of-span"]], "Verification of the two dictionaries": [[440, "verification-of-the-two-dictionaries"]], "Verify the constraints": [[412, "verify-the-constraints"]], "Visualization": [[432, "visualization"]], "Windows \u2013 Torch Problems": [[447, "windows-torch-problems"]], "Wrap the test function as a dataframe-based lookup callable": [[411, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [412, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"], [436, "wrap-the-test-function-as-a-dataframe-based-lookup-callable"]], "Writing Docstrings": [[449, "writing-docstrings"]], "Writing classes": [[449, "writing-classes"]], "[0.1.0] - 2022-10-01": [[448, "id148"]], "[0.10.0] - 2024-08-02": [[448, "id40"]], "[0.11.0] - 2024-09-09": [[448, "id33"]], "[0.11.1] - 2024-10-01": [[448, "id28"]], "[0.11.2] - 2024-10-11": [[448, "id24"]], "[0.11.3] - 2024-11-06": [[448, "id22"]], "[0.11.4] - 2025-01-27": [[448, "id19"]], "[0.12.0] - 2025-01-28": [[448, "id14"]], "[0.12.1] - 2025-01-29": [[448, "id12"]], "[0.12.2] - 2025-01-31": [[448, "id10"]], "[0.13.0] - 2025-04-16": [[448, "id5"]], "[0.13.1] - 2025-06-06": [[448, "id2"]], "[0.13.2] - 2025-07-09": [[448, "id1"]], "[0.2.0] - 2022-11-10": [[448, "id145"]], "[0.2.1] - 2022-12-01": [[448, "id143"]], "[0.2.2] - 2023-01-13": [[448, "id139"]], "[0.2.3] - 2023-03-14": [[448, "id135"]], "[0.2.4] - 2023-03-24": [[448, "id131"]], "[0.3.0] - 2023-06-27": [[448, "id127"]], "[0.3.1] - 2023-07-17": [[448, "id123"]], "[0.3.2] - 2023-07-24": [[448, "id120"]], "[0.4.0] - 2023-08-16": [[448, "id116"]], "[0.4.1] - 2023-08-23": [[448, "id112"]], "[0.4.2] - 2023-08-29": [[448, "id108"]], "[0.5.0] - 2023-09-15": [[448, "id105"]], "[0.5.1] - 2023-10-19": [[448, "id101"]], "[0.6.0] - 2023-11-17": [[448, "id96"]], "[0.6.1] - 2023-11-27": [[448, "id92"]], "[0.7.0] - 2023-12-04": [[448, "id88"]], "[0.7.1] - 2023-12-07": [[448, "id84"]], "[0.7.2] - 2024-01-24": [[448, "id78"]], "[0.7.3] - 2024-02-09": [[448, "id72"]], "[0.7.4] - 2024-02-28": [[448, "id67"]], "[0.8.0] - 2024-02-29": [[448, "id64"]], "[0.8.1] - 2024-03-11": [[448, "id60"]], "[0.8.2] - 2024-03-27": [[448, "id56"]], "[0.9.0] - 2024-05-21": [[448, "id50"]], "[0.9.1] - 2024-06-04": [[448, "id47"]], "baybe": [[0, null]], "baybe.acquisition": [[1, null]], "baybe.acquisition.acqfs": [[2, null]], "baybe.acquisition.base": [[23, null]], "baybe.acquisition.partial": [[25, null]], "baybe.acquisition.utils": [[27, null]], "baybe.acquisition.utils.convert_acqf": [[28, null]], "baybe.acquisition.utils.str_to_acqf": [[29, null]], "baybe.campaign": [[30, null]], "baybe.constraints": [[32, null]], "baybe.constraints.base": [[33, null]], "baybe.constraints.conditions": [[39, null]], "baybe.constraints.continuous": [[43, null]], "baybe.constraints.deprecation": [[46, null]], "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint": [[47, null]], "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint": [[48, null]], "baybe.constraints.deprecation.structure_constraints": [[49, null]], "baybe.constraints.discrete": [[50, null]], "baybe.constraints.utils": [[60, null]], "baybe.constraints.utils.is_cardinality_fulfilled": [[61, null]], "baybe.constraints.validation": [[62, null]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds": [[63, null]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping": [[64, null]], "baybe.constraints.validation.validate_constraints": [[65, null]], "baybe.exceptions": [[66, null]], "baybe.exceptions.DeprecationError": [[67, null]], "baybe.exceptions.EmptySearchSpaceError": [[68, null]], "baybe.exceptions.IncompatibilityError": [[69, null]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, null]], "baybe.exceptions.IncompatibleArgumentError": [[71, null]], "baybe.exceptions.IncompatibleExplainerError": [[72, null]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, null]], "baybe.exceptions.IncompatibleSurrogateError": [[74, null]], "baybe.exceptions.IncompleteMeasurementsError": [[75, null]], "baybe.exceptions.InfeasibilityError": [[76, null]], "baybe.exceptions.InputDataTypeWarning": [[77, null]], "baybe.exceptions.InvalidSurrogateModelError": [[78, null]], "baybe.exceptions.InvalidTargetValueError": [[79, null]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[80, null]], "baybe.exceptions.ModelNotTrainedError": [[81, null]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[82, null]], "baybe.exceptions.NoMeasurementsError": [[83, null]], "baybe.exceptions.NoRecommendersLeftError": [[84, null]], "baybe.exceptions.NotEnoughPointsLeftError": [[85, null]], "baybe.exceptions.NothingToSimulateError": [[86, null]], "baybe.exceptions.NumericalUnderflowError": [[87, null]], "baybe.exceptions.OptionalImportError": [[88, null]], "baybe.exceptions.SearchSpaceMatchWarning": [[89, null]], "baybe.exceptions.UnidentifiedSubclassError": [[90, null]], "baybe.exceptions.UnmatchedAttributeError": [[91, null]], "baybe.exceptions.UnusedObjectWarning": [[92, null]], "baybe.insights": [[93, null]], "baybe.insights.shap": [[94, null]], "baybe.insights.shap.EXPLAINERS": [[95, null]], "baybe.insights.shap.NON_SHAP_EXPLAINERS": [[96, null]], "baybe.insights.shap.SHAP_EXPLAINERS": [[98, null]], "baybe.insights.shap.SHAP_PLOTS": [[99, null]], "baybe.insights.shap.is_shap_explainer": [[100, null]], "baybe.insights.shap.make_explainer_for_surrogate": [[101, null]], "baybe.kernels": [[102, null]], "baybe.kernels.base": [[103, null]], "baybe.kernels.basic": [[107, null]], "baybe.kernels.composite": [[116, null]], "baybe.objectives": [[120, null]], "baybe.objectives.base": [[121, null]], "baybe.objectives.base.to_objective": [[123, null]], "baybe.objectives.desirability": [[124, null]], "baybe.objectives.desirability.scalarize": [[126, null]], "baybe.objectives.enum": [[127, null]], "baybe.objectives.pareto": [[129, null]], "baybe.objectives.single": [[131, null]], "baybe.objectives.validation": [[133, null]], "baybe.objectives.validation.validate_target_names": [[134, null]], "baybe.parameters": [[135, null]], "baybe.parameters.base": [[136, null]], "baybe.parameters.categorical": [[140, null]], "baybe.parameters.custom": [[143, null]], "baybe.parameters.enum": [[145, null]], "baybe.parameters.numerical": [[150, null]], "baybe.parameters.substance": [[153, null]], "baybe.parameters.substance.Smiles": [[154, null]], "baybe.parameters.utils": [[156, null]], "baybe.parameters.utils.activate_parameter": [[157, null]], "baybe.parameters.utils.get_parameters_from_dataframe": [[158, null]], "baybe.parameters.utils.is_inactive": [[159, null]], "baybe.parameters.utils.sort_parameters": [[160, null]], "baybe.parameters.validation": [[161, null]], "baybe.parameters.validation.validate_decorrelation": [[162, null]], "baybe.parameters.validation.validate_is_finite": [[163, null]], "baybe.parameters.validation.validate_unique_values": [[164, null]], "baybe.priors": [[165, null]], "baybe.priors.base": [[166, null]], "baybe.priors.basic": [[168, null]], "baybe.recommenders": [[176, null]], "baybe.recommenders.base": [[177, null]], "baybe.recommenders.meta": [[179, null]], "baybe.recommenders.meta.base": [[180, null]], "baybe.recommenders.meta.sequential": [[182, null]], "baybe.recommenders.naive": [[187, null]], "baybe.recommenders.pure": [[189, null]], "baybe.recommenders.pure.base": [[190, null]], "baybe.recommenders.pure.bayesian": [[192, null]], "baybe.recommenders.pure.bayesian.base": [[193, null]], "baybe.recommenders.pure.bayesian.botorch": [[195, null]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[197, null]], "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender": [[198, null]], "baybe.recommenders.pure.nonpredictive": [[199, null]], "baybe.recommenders.pure.nonpredictive.base": [[200, null]], "baybe.recommenders.pure.nonpredictive.clustering": [[202, null]], "baybe.recommenders.pure.nonpredictive.sampling": [[207, null]], "baybe.searchspace": [[211, null]], "baybe.searchspace.continuous": [[212, null]], "baybe.searchspace.core": [[214, null]], "baybe.searchspace.core.to_searchspace": [[217, null]], "baybe.searchspace.core.validate_searchspace_from_config": [[218, null]], "baybe.searchspace.discrete": [[219, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas": [[222, null]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars": [[223, null]], "baybe.searchspace.discrete.validate_simplex_subspace_from_config": [[224, null]], "baybe.searchspace.validation": [[225, null]], "baybe.searchspace.validation.get_transform_parameters": [[226, null]], "baybe.searchspace.validation.validate_parameter_names": [[227, null]], "baybe.searchspace.validation.validate_parameters": [[228, null]], "baybe.serialization": [[229, null]], "baybe.serialization.core": [[230, null]], "baybe.serialization.core.block_deserialization_hook": [[231, null]], "baybe.serialization.core.block_serialization_hook": [[232, null]], "baybe.serialization.core.converter": [[233, null]], "baybe.serialization.core.get_base_structure_hook": [[234, null]], "baybe.serialization.core.select_constructor_hook": [[235, null]], "baybe.serialization.core.unstructure_base": [[236, null]], "baybe.serialization.mixin": [[237, null]], "baybe.serialization.utils": [[239, null]], "baybe.serialization.utils.deserialize_dataframe": [[240, null]], "baybe.serialization.utils.serialize_dataframe": [[241, null]], "baybe.simulation": [[242, null]], "baybe.simulation.core": [[243, null]], "baybe.simulation.core.simulate_experiment": [[244, null]], "baybe.simulation.lookup": [[245, null]], "baybe.simulation.lookup.look_up_targets": [[246, null]], "baybe.simulation.scenarios": [[247, null]], "baybe.simulation.scenarios.simulate_scenarios": [[248, null]], "baybe.simulation.transfer_learning": [[249, null]], "baybe.simulation.transfer_learning.simulate_transfer_learning": [[250, null]], "baybe.surrogates": [[251, null]], "baybe.surrogates.bandit": [[252, null]], "baybe.surrogates.base": [[254, null]], "baybe.surrogates.base.PosteriorStatistic": [[256, null]], "baybe.surrogates.composite": [[259, null]], "baybe.surrogates.custom": [[261, null]], "baybe.surrogates.custom.register_custom_architecture": [[263, null]], "baybe.surrogates.gaussian_process": [[264, null]], "baybe.surrogates.gaussian_process.core": [[265, null]], "baybe.surrogates.gaussian_process.kernel_factory": [[267, null]], "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory": [[270, null]], "baybe.surrogates.gaussian_process.presets": [[271, null]], "baybe.surrogates.gaussian_process.presets.core": [[272, null]], "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset": [[274, null]], "baybe.surrogates.gaussian_process.presets.default": [[275, null]], "baybe.surrogates.gaussian_process.presets.edbo": [[277, null]], "baybe.surrogates.linear": [[279, null]], "baybe.surrogates.naive": [[281, null]], "baybe.surrogates.ngboost": [[283, null]], "baybe.surrogates.random_forest": [[285, null]], "baybe.surrogates.utils": [[287, null]], "baybe.surrogates.utils.batchify_ensemble_predictor": [[288, null]], "baybe.surrogates.utils.batchify_mean_var_prediction": [[289, null]], "baybe.surrogates.utils.catch_constant_targets": [[290, null]], "baybe.surrogates.validation": [[291, null]], "baybe.surrogates.validation.make_dict_validator": [[292, null]], "baybe.surrogates.validation.type_validation_converter": [[293, null]], "baybe.surrogates.validation.validate_custom_architecture_cls": [[294, null]], "baybe.targets": [[295, null]], "baybe.targets.base": [[296, null]], "baybe.targets.binary": [[298, null]], "baybe.targets.binary.ChoiceValue": [[300, null]], "baybe.targets.enum": [[301, null]], "baybe.targets.numerical": [[304, null]], "baybe.targets.transforms": [[306, null]], "baybe.targets.transforms.bell_transform": [[307, null]], "baybe.targets.transforms.linear_transform": [[308, null]], "baybe.targets.transforms.triangular_transform": [[309, null]], "baybe.telemetry": [[310, null]], "baybe.telemetry.get_user_details": [[311, null]], "baybe.telemetry.is_enabled": [[312, null]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage": [[313, null]], "baybe.telemetry.telemetry_record_value": [[314, null]], "baybe.utils": [[315, null]], "baybe.utils.augmentation": [[316, null]], "baybe.utils.augmentation.df_apply_dependency_augmentation": [[317, null]], "baybe.utils.augmentation.df_apply_permutation_augmentation": [[318, null]], "baybe.utils.basic": [[319, null]], "baybe.utils.basic.UNSPECIFIED": [[321, null]], "baybe.utils.basic.convert_to_float": [[324, null]], "baybe.utils.basic.find_subclass": [[325, null]], "baybe.utils.basic.get_baseclasses": [[326, null]], "baybe.utils.basic.get_subclasses": [[327, null]], "baybe.utils.basic.group_duplicate_values": [[328, null]], "baybe.utils.basic.hilberts_factory": [[329, null]], "baybe.utils.basic.is_all_instance": [[330, null]], "baybe.utils.basic.match_attributes": [[331, null]], "baybe.utils.basic.refers_to": [[332, null]], "baybe.utils.basic.register_hooks": [[333, null]], "baybe.utils.basic.to_tuple": [[334, null]], "baybe.utils.boolean": [[335, null]], "baybe.utils.boolean.check_if_in": [[336, null]], "baybe.utils.boolean.is_abstract": [[337, null]], "baybe.utils.boolean.strtobool": [[338, null]], "baybe.utils.chemistry": [[339, null]], "baybe.utils.chemistry.get_canonical_smiles": [[340, null]], "baybe.utils.chemistry.get_fingerprint_class": [[341, null]], "baybe.utils.chemistry.name_to_smiles": [[342, null]], "baybe.utils.chemistry.smiles_to_fingerprint_features": [[343, null]], "baybe.utils.clustering_algorithms": [[344, null]], "baybe.utils.clustering_algorithms.third_party": [[345, null]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[346, null]], "baybe.utils.conversion": [[348, null]], "baybe.utils.conversion.fraction_to_float": [[349, null]], "baybe.utils.conversion.nonstring_to_tuple": [[350, null]], "baybe.utils.conversion.to_string": [[351, null]], "baybe.utils.dataframe": [[352, null]], "baybe.utils.dataframe.add_fake_measurements": [[353, null]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows": [[354, null]], "baybe.utils.dataframe.add_parameter_noise": [[355, null]], "baybe.utils.dataframe.arrays_to_dataframes": [[356, null]], "baybe.utils.dataframe.create_fake_input": [[357, null]], "baybe.utils.dataframe.df_drop_single_value_columns": [[358, null]], "baybe.utils.dataframe.df_drop_string_columns": [[359, null]], "baybe.utils.dataframe.df_uncorrelated_features": [[360, null]], "baybe.utils.dataframe.filter_df": [[361, null]], "baybe.utils.dataframe.fuzzy_row_match": [[362, null]], "baybe.utils.dataframe.get_transform_objects": [[363, null]], "baybe.utils.dataframe.handle_missing_values": [[364, null]], "baybe.utils.dataframe.normalize_input_dtypes": [[365, null]], "baybe.utils.dataframe.pretty_print_df": [[366, null]], "baybe.utils.dataframe.to_tensor": [[367, null]], "baybe.utils.dataframe.transform_target_columns": [[368, null]], "baybe.utils.interval": [[369, null]], "baybe.utils.interval.InfiniteIntervalError": [[370, null]], "baybe.utils.interval.convert_bounds": [[372, null]], "baybe.utils.interval.use_fallback_constructor_hook": [[373, null]], "baybe.utils.memory": [[374, null]], "baybe.utils.memory.bytes_to_human_readable": [[375, null]], "baybe.utils.numerical": [[376, null]], "baybe.utils.numerical.DTypeFloatNumpy": [[377, null]], "baybe.utils.numerical.DTypeFloatONNX": [[378, null]], "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION": [[379, null]], "baybe.utils.numerical.closer_element": [[380, null]], "baybe.utils.numerical.closest_element": [[381, null]], "baybe.utils.numerical.geom_mean": [[382, null]], "baybe.utils.random": [[383, null]], "baybe.utils.random.set_random_seed": [[384, null]], "baybe.utils.random.temporary_seed": [[385, null]], "baybe.utils.sampling_algorithms": [[386, null]], "baybe.utils.sampling_algorithms.farthest_point_sampling": [[388, null]], "baybe.utils.sampling_algorithms.sample_numerical_df": [[389, null]], "baybe.utils.scaling": [[390, null]], "baybe.utils.torch": [[392, null]], "baybe.utils.torch.DTypeFloatTorch": [[393, null]], "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION": [[394, null]], "baybe.utils.validation": [[395, null]], "baybe.utils.validation.finite_float": [[396, null]], "baybe.utils.validation.non_inf_float": [[397, null]], "baybe.utils.validation.non_nan_float": [[398, null]], "baybe.utils.validation.validate_not_nan": [[399, null]], "baybe.utils.validation.validate_parameter_input": [[400, null]], "baybe.utils.validation.validate_target_input": [[401, null]], "classproperty": [[323, null]], "macOS-arm64 \u2013 Leaked Semaphore": [[447, "macos-arm64-leaked-semaphore"]], "qExpectedImprovement": [[9, null]], "qKnowledgeGradient": [[10, null]], "qLogExpectedImprovement": [[11, null]], "qLogNParEGO": [[12, null]], "qLogNoisyExpectedHypervolumeImprovement": [[13, null]], "qLogNoisyExpectedImprovement": [[14, null]], "qNegIntegratedPosteriorVariance": [[15, null]], "qNoisyExpectedHypervolumeImprovement": [[16, null]], "qNoisyExpectedImprovement": [[17, null]], "qPosteriorStandardDeviation": [[18, null]], "qProbabilityOfImprovement": [[19, null]], "qSimpleRegret": [[20, null]], "qThompsonSampling": [[21, null]], "qUpperConfidenceBound": [[22, null]], "\u201cPre-training\u201d stage": [[423, "pre-training-stage"]], "\u26a1 Quick Start": [[446, "quick-start"]], "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27 Maintainers": [[446, "maintainers"]], "\ud83d\udcbb Installation": [[446, "installation"]], "\ud83d\udcc4 License": [[446, "license"]], "\ud83d\udce1 Telemetry": [[446, "telemetry"]], "\ud83d\udd0b Batteries Included": [[446, "batteries-included"]], "\ud83d\udee0\ufe0f Known Issues": [[446, "known-issues"]]}, "docnames": ["_autosummary/baybe", "_autosummary/baybe.acquisition", "_autosummary/baybe.acquisition.acqfs", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.PosteriorMean", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound", "_autosummary/baybe.acquisition.base", "_autosummary/baybe.acquisition.base.AcquisitionFunction", "_autosummary/baybe.acquisition.partial", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction", "_autosummary/baybe.acquisition.utils", "_autosummary/baybe.acquisition.utils.convert_acqf", "_autosummary/baybe.acquisition.utils.str_to_acqf", "_autosummary/baybe.campaign", "_autosummary/baybe.campaign.Campaign", "_autosummary/baybe.constraints", "_autosummary/baybe.constraints.base", "_autosummary/baybe.constraints.base.CardinalityConstraint", "_autosummary/baybe.constraints.base.Constraint", "_autosummary/baybe.constraints.base.ContinuousConstraint", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint", "_autosummary/baybe.constraints.base.DiscreteConstraint", "_autosummary/baybe.constraints.conditions", "_autosummary/baybe.constraints.conditions.Condition", "_autosummary/baybe.constraints.conditions.SubSelectionCondition", "_autosummary/baybe.constraints.conditions.ThresholdCondition", "_autosummary/baybe.constraints.continuous", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint", "_autosummary/baybe.constraints.deprecation", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "_autosummary/baybe.constraints.deprecation.structure_constraints", "_autosummary/baybe.constraints.discrete", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint", "_autosummary/baybe.constraints.utils", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled", "_autosummary/baybe.constraints.validation", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "_autosummary/baybe.constraints.validation.validate_constraints", "_autosummary/baybe.exceptions", "_autosummary/baybe.exceptions.DeprecationError", "_autosummary/baybe.exceptions.EmptySearchSpaceError", "_autosummary/baybe.exceptions.IncompatibilityError", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError", "_autosummary/baybe.exceptions.IncompatibleArgumentError", "_autosummary/baybe.exceptions.IncompatibleExplainerError", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError", "_autosummary/baybe.exceptions.IncompatibleSurrogateError", "_autosummary/baybe.exceptions.IncompleteMeasurementsError", "_autosummary/baybe.exceptions.InfeasibilityError", "_autosummary/baybe.exceptions.InputDataTypeWarning", "_autosummary/baybe.exceptions.InvalidSurrogateModelError", "_autosummary/baybe.exceptions.InvalidTargetValueError", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning", "_autosummary/baybe.exceptions.ModelNotTrainedError", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError", "_autosummary/baybe.exceptions.NoMeasurementsError", "_autosummary/baybe.exceptions.NoRecommendersLeftError", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError", "_autosummary/baybe.exceptions.NothingToSimulateError", "_autosummary/baybe.exceptions.NumericalUnderflowError", "_autosummary/baybe.exceptions.OptionalImportError", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning", "_autosummary/baybe.exceptions.UnidentifiedSubclassError", "_autosummary/baybe.exceptions.UnmatchedAttributeError", "_autosummary/baybe.exceptions.UnusedObjectWarning", "_autosummary/baybe.insights", "_autosummary/baybe.insights.shap", "_autosummary/baybe.insights.shap.EXPLAINERS", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAPInsight", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS", "_autosummary/baybe.insights.shap.SHAP_PLOTS", "_autosummary/baybe.insights.shap.is_shap_explainer", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate", "_autosummary/baybe.kernels", "_autosummary/baybe.kernels.base", "_autosummary/baybe.kernels.base.BasicKernel", "_autosummary/baybe.kernels.base.CompositeKernel", "_autosummary/baybe.kernels.base.Kernel", "_autosummary/baybe.kernels.basic", "_autosummary/baybe.kernels.basic.LinearKernel", "_autosummary/baybe.kernels.basic.MaternKernel", "_autosummary/baybe.kernels.basic.PeriodicKernel", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel", "_autosummary/baybe.kernels.basic.PolynomialKernel", "_autosummary/baybe.kernels.basic.RBFKernel", "_autosummary/baybe.kernels.basic.RFFKernel", "_autosummary/baybe.kernels.basic.RQKernel", "_autosummary/baybe.kernels.composite", "_autosummary/baybe.kernels.composite.AdditiveKernel", "_autosummary/baybe.kernels.composite.ProductKernel", "_autosummary/baybe.kernels.composite.ScaleKernel", "_autosummary/baybe.objectives", "_autosummary/baybe.objectives.base", "_autosummary/baybe.objectives.base.Objective", "_autosummary/baybe.objectives.base.to_objective", "_autosummary/baybe.objectives.desirability", "_autosummary/baybe.objectives.desirability.DesirabilityObjective", "_autosummary/baybe.objectives.desirability.scalarize", "_autosummary/baybe.objectives.enum", "_autosummary/baybe.objectives.enum.Scalarizer", "_autosummary/baybe.objectives.pareto", "_autosummary/baybe.objectives.pareto.ParetoObjective", "_autosummary/baybe.objectives.single", "_autosummary/baybe.objectives.single.SingleTargetObjective", "_autosummary/baybe.objectives.validation", "_autosummary/baybe.objectives.validation.validate_target_names", "_autosummary/baybe.parameters", "_autosummary/baybe.parameters.base", "_autosummary/baybe.parameters.base.ContinuousParameter", "_autosummary/baybe.parameters.base.DiscreteParameter", "_autosummary/baybe.parameters.base.Parameter", "_autosummary/baybe.parameters.categorical", "_autosummary/baybe.parameters.categorical.CategoricalParameter", "_autosummary/baybe.parameters.categorical.TaskParameter", "_autosummary/baybe.parameters.custom", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter", "_autosummary/baybe.parameters.enum", "_autosummary/baybe.parameters.enum.CategoricalEncoding", "_autosummary/baybe.parameters.enum.CustomEncoding", "_autosummary/baybe.parameters.enum.ParameterEncoding", "_autosummary/baybe.parameters.enum.SubstanceEncoding", "_autosummary/baybe.parameters.numerical", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter", "_autosummary/baybe.parameters.substance", "_autosummary/baybe.parameters.substance.Smiles", "_autosummary/baybe.parameters.substance.SubstanceParameter", "_autosummary/baybe.parameters.utils", "_autosummary/baybe.parameters.utils.activate_parameter", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe", "_autosummary/baybe.parameters.utils.is_inactive", "_autosummary/baybe.parameters.utils.sort_parameters", "_autosummary/baybe.parameters.validation", "_autosummary/baybe.parameters.validation.validate_decorrelation", "_autosummary/baybe.parameters.validation.validate_is_finite", "_autosummary/baybe.parameters.validation.validate_unique_values", "_autosummary/baybe.priors", "_autosummary/baybe.priors.base", "_autosummary/baybe.priors.base.Prior", "_autosummary/baybe.priors.basic", "_autosummary/baybe.priors.basic.BetaPrior", "_autosummary/baybe.priors.basic.GammaPrior", "_autosummary/baybe.priors.basic.HalfCauchyPrior", "_autosummary/baybe.priors.basic.HalfNormalPrior", "_autosummary/baybe.priors.basic.LogNormalPrior", "_autosummary/baybe.priors.basic.NormalPrior", "_autosummary/baybe.priors.basic.SmoothedBoxPrior", "_autosummary/baybe.recommenders", "_autosummary/baybe.recommenders.base", "_autosummary/baybe.recommenders.base.RecommenderProtocol", "_autosummary/baybe.recommenders.meta", "_autosummary/baybe.recommenders.meta.base", "_autosummary/baybe.recommenders.meta.base.MetaRecommender", "_autosummary/baybe.recommenders.meta.sequential", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", "_autosummary/baybe.recommenders.naive", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender", "_autosummary/baybe.recommenders.pure", "_autosummary/baybe.recommenders.pure.base", "_autosummary/baybe.recommenders.pure.base.PureRecommender", "_autosummary/baybe.recommenders.pure.bayesian", "_autosummary/baybe.recommenders.pure.bayesian.base", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender", "_autosummary/baybe.recommenders.pure.bayesian.botorch", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive", "_autosummary/baybe.recommenders.pure.nonpredictive.base", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", "_autosummary/baybe.searchspace", "_autosummary/baybe.searchspace.continuous", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous", "_autosummary/baybe.searchspace.core", "_autosummary/baybe.searchspace.core.SearchSpace", "_autosummary/baybe.searchspace.core.SearchSpaceType", "_autosummary/baybe.searchspace.core.to_searchspace", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config", "_autosummary/baybe.searchspace.discrete", "_autosummary/baybe.searchspace.discrete.MemorySize", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config", "_autosummary/baybe.searchspace.validation", "_autosummary/baybe.searchspace.validation.get_transform_parameters", "_autosummary/baybe.searchspace.validation.validate_parameter_names", "_autosummary/baybe.searchspace.validation.validate_parameters", "_autosummary/baybe.serialization", "_autosummary/baybe.serialization.core", "_autosummary/baybe.serialization.core.block_deserialization_hook", "_autosummary/baybe.serialization.core.block_serialization_hook", "_autosummary/baybe.serialization.core.converter", "_autosummary/baybe.serialization.core.get_base_structure_hook", "_autosummary/baybe.serialization.core.select_constructor_hook", "_autosummary/baybe.serialization.core.unstructure_base", "_autosummary/baybe.serialization.mixin", "_autosummary/baybe.serialization.mixin.SerialMixin", "_autosummary/baybe.serialization.utils", "_autosummary/baybe.serialization.utils.deserialize_dataframe", "_autosummary/baybe.serialization.utils.serialize_dataframe", "_autosummary/baybe.simulation", "_autosummary/baybe.simulation.core", "_autosummary/baybe.simulation.core.simulate_experiment", "_autosummary/baybe.simulation.lookup", "_autosummary/baybe.simulation.lookup.look_up_targets", "_autosummary/baybe.simulation.scenarios", "_autosummary/baybe.simulation.scenarios.simulate_scenarios", "_autosummary/baybe.simulation.transfer_learning", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning", "_autosummary/baybe.surrogates", "_autosummary/baybe.surrogates.bandit", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", "_autosummary/baybe.surrogates.base", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate", "_autosummary/baybe.surrogates.base.PosteriorStatistic", "_autosummary/baybe.surrogates.base.Surrogate", "_autosummary/baybe.surrogates.base.SurrogateProtocol", "_autosummary/baybe.surrogates.composite", "_autosummary/baybe.surrogates.composite.CompositeSurrogate", "_autosummary/baybe.surrogates.custom", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate", "_autosummary/baybe.surrogates.custom.register_custom_architecture", "_autosummary/baybe.surrogates.gaussian_process", "_autosummary/baybe.surrogates.gaussian_process.core", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "_autosummary/baybe.surrogates.gaussian_process.presets", "_autosummary/baybe.surrogates.gaussian_process.presets.core", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "_autosummary/baybe.surrogates.gaussian_process.presets.default", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", "_autosummary/baybe.surrogates.linear", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate", "_autosummary/baybe.surrogates.naive", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate", "_autosummary/baybe.surrogates.ngboost", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate", "_autosummary/baybe.surrogates.random_forest", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate", "_autosummary/baybe.surrogates.utils", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction", "_autosummary/baybe.surrogates.utils.catch_constant_targets", "_autosummary/baybe.surrogates.validation", "_autosummary/baybe.surrogates.validation.make_dict_validator", "_autosummary/baybe.surrogates.validation.type_validation_converter", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls", "_autosummary/baybe.targets", "_autosummary/baybe.targets.base", "_autosummary/baybe.targets.base.Target", "_autosummary/baybe.targets.binary", "_autosummary/baybe.targets.binary.BinaryTarget", "_autosummary/baybe.targets.binary.ChoiceValue", "_autosummary/baybe.targets.enum", "_autosummary/baybe.targets.enum.TargetMode", "_autosummary/baybe.targets.enum.TargetTransformation", "_autosummary/baybe.targets.numerical", "_autosummary/baybe.targets.numerical.NumericalTarget", "_autosummary/baybe.targets.transforms", "_autosummary/baybe.targets.transforms.bell_transform", "_autosummary/baybe.targets.transforms.linear_transform", "_autosummary/baybe.targets.transforms.triangular_transform", "_autosummary/baybe.telemetry", "_autosummary/baybe.telemetry.get_user_details", "_autosummary/baybe.telemetry.is_enabled", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage", "_autosummary/baybe.telemetry.telemetry_record_value", "_autosummary/baybe.utils", "_autosummary/baybe.utils.augmentation", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation", "_autosummary/baybe.utils.basic", "_autosummary/baybe.utils.basic.Dummy", "_autosummary/baybe.utils.basic.UNSPECIFIED", "_autosummary/baybe.utils.basic.UnspecifiedType", "_autosummary/baybe.utils.basic.classproperty", "_autosummary/baybe.utils.basic.convert_to_float", "_autosummary/baybe.utils.basic.find_subclass", "_autosummary/baybe.utils.basic.get_baseclasses", "_autosummary/baybe.utils.basic.get_subclasses", "_autosummary/baybe.utils.basic.group_duplicate_values", "_autosummary/baybe.utils.basic.hilberts_factory", "_autosummary/baybe.utils.basic.is_all_instance", "_autosummary/baybe.utils.basic.match_attributes", "_autosummary/baybe.utils.basic.refers_to", "_autosummary/baybe.utils.basic.register_hooks", "_autosummary/baybe.utils.basic.to_tuple", "_autosummary/baybe.utils.boolean", "_autosummary/baybe.utils.boolean.check_if_in", "_autosummary/baybe.utils.boolean.is_abstract", "_autosummary/baybe.utils.boolean.strtobool", "_autosummary/baybe.utils.chemistry", "_autosummary/baybe.utils.chemistry.get_canonical_smiles", "_autosummary/baybe.utils.chemistry.get_fingerprint_class", "_autosummary/baybe.utils.chemistry.name_to_smiles", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features", "_autosummary/baybe.utils.clustering_algorithms", "_autosummary/baybe.utils.clustering_algorithms.third_party", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", "_autosummary/baybe.utils.conversion", "_autosummary/baybe.utils.conversion.fraction_to_float", "_autosummary/baybe.utils.conversion.nonstring_to_tuple", "_autosummary/baybe.utils.conversion.to_string", "_autosummary/baybe.utils.dataframe", "_autosummary/baybe.utils.dataframe.add_fake_measurements", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "_autosummary/baybe.utils.dataframe.add_parameter_noise", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes", "_autosummary/baybe.utils.dataframe.create_fake_input", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns", "_autosummary/baybe.utils.dataframe.df_drop_string_columns", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features", "_autosummary/baybe.utils.dataframe.filter_df", "_autosummary/baybe.utils.dataframe.fuzzy_row_match", "_autosummary/baybe.utils.dataframe.get_transform_objects", "_autosummary/baybe.utils.dataframe.handle_missing_values", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes", "_autosummary/baybe.utils.dataframe.pretty_print_df", "_autosummary/baybe.utils.dataframe.to_tensor", "_autosummary/baybe.utils.dataframe.transform_target_columns", "_autosummary/baybe.utils.interval", "_autosummary/baybe.utils.interval.InfiniteIntervalError", "_autosummary/baybe.utils.interval.Interval", "_autosummary/baybe.utils.interval.convert_bounds", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook", "_autosummary/baybe.utils.memory", "_autosummary/baybe.utils.memory.bytes_to_human_readable", "_autosummary/baybe.utils.numerical", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy", "_autosummary/baybe.utils.numerical.DTypeFloatONNX", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.numerical.closer_element", "_autosummary/baybe.utils.numerical.closest_element", "_autosummary/baybe.utils.numerical.geom_mean", "_autosummary/baybe.utils.random", "_autosummary/baybe.utils.random.set_random_seed", "_autosummary/baybe.utils.random.temporary_seed", "_autosummary/baybe.utils.sampling_algorithms", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df", "_autosummary/baybe.utils.scaling", "_autosummary/baybe.utils.scaling.ColumnTransformer", "_autosummary/baybe.utils.torch", "_autosummary/baybe.utils.torch.DTypeFloatTorch", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "_autosummary/baybe.utils.validation", "_autosummary/baybe.utils.validation.finite_float", "_autosummary/baybe.utils.validation.non_inf_float", "_autosummary/baybe.utils.validation.non_nan_float", "_autosummary/baybe.utils.validation.validate_not_nan", "_autosummary/baybe.utils.validation.validate_parameter_input", "_autosummary/baybe.utils.validation.validate_target_input", "examples/Backtesting/Backtesting", "examples/Backtesting/custom_blackbox", "examples/Backtesting/full_initial_data", "examples/Backtesting/full_lookup", "examples/Backtesting/impute_mode", "examples/Basics/Basics", "examples/Basics/campaign", "examples/Basics/recommenders", "examples/Constraints_Continuous/Constraints_Continuous", "examples/Constraints_Continuous/hybrid_space", "examples/Constraints_Continuous/linear_constraints", "examples/Constraints_Discrete/Constraints_Discrete", "examples/Constraints_Discrete/custom_constraints", "examples/Constraints_Discrete/dependency_constraints", "examples/Constraints_Discrete/exclusion_constraints", "examples/Constraints_Discrete/prodsum_constraints", "examples/Custom_Hooks/Custom_Hooks", "examples/Custom_Hooks/basics", "examples/Custom_Hooks/campaign_stopping", "examples/Custom_Hooks/probability_of_improvement", "examples/Custom_Surrogates/Custom_Surrogates", "examples/Custom_Surrogates/custom_pretrained", "examples/Custom_Surrogates/surrogate_params", "examples/Mixtures/Mixtures", "examples/Mixtures/slot_based", "examples/Mixtures/traditional", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit", "examples/Multi_Target/Multi_Target", "examples/Multi_Target/desirability", "examples/Multi_Target/pareto", "examples/Searchspaces/Searchspaces", "examples/Searchspaces/continuous_space", "examples/Searchspaces/discrete_space", "examples/Searchspaces/hybrid_space", "examples/Serialization/Serialization", "examples/Serialization/basic_serialization", "examples/Serialization/create_from_config", "examples/Serialization/validate_config", "examples/Transfer_Learning/Transfer_Learning", "examples/Transfer_Learning/backtesting", "examples/Transfer_Learning/basic_transfer_learning", "examples/examples", "faq", "index", "known_issues", "misc/changelog_link", "misc/contributing_link", "misc/contributors_link", "misc/license_link", "userguide/active_learning", "userguide/async", "userguide/campaigns", "userguide/constraints", "userguide/envvars", "userguide/getting_recommendations", "userguide/insights", "userguide/objectives", "userguide/parameters", "userguide/recommenders", "userguide/searchspace", "userguide/serialization", "userguide/simulation", "userguide/surrogates", "userguide/targets", "userguide/transfer_learning", "userguide/userguide", "userguide/utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/baybe.rst", "_autosummary/baybe.acquisition.rst", "_autosummary/baybe.acquisition.acqfs.rst", "_autosummary/baybe.acquisition.acqfs.ExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.LogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorMean.rst", "_autosummary/baybe.acquisition.acqfs.PosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.ProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.UpperConfidenceBound.rst", "_autosummary/baybe.acquisition.acqfs.qExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qKnowledgeGradient.rst", "_autosummary/baybe.acquisition.acqfs.qLogExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNParEGO.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qNoisyExpectedImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qPosteriorStandardDeviation.rst", "_autosummary/baybe.acquisition.acqfs.qProbabilityOfImprovement.rst", "_autosummary/baybe.acquisition.acqfs.qSimpleRegret.rst", "_autosummary/baybe.acquisition.acqfs.qThompsonSampling.rst", "_autosummary/baybe.acquisition.acqfs.qUpperConfidenceBound.rst", "_autosummary/baybe.acquisition.base.rst", "_autosummary/baybe.acquisition.base.AcquisitionFunction.rst", "_autosummary/baybe.acquisition.partial.rst", "_autosummary/baybe.acquisition.partial.PartialAcquisitionFunction.rst", "_autosummary/baybe.acquisition.utils.rst", "_autosummary/baybe.acquisition.utils.convert_acqf.rst", "_autosummary/baybe.acquisition.utils.str_to_acqf.rst", "_autosummary/baybe.campaign.rst", "_autosummary/baybe.campaign.Campaign.rst", "_autosummary/baybe.constraints.rst", "_autosummary/baybe.constraints.base.rst", "_autosummary/baybe.constraints.base.CardinalityConstraint.rst", "_autosummary/baybe.constraints.base.Constraint.rst", "_autosummary/baybe.constraints.base.ContinuousConstraint.rst", "_autosummary/baybe.constraints.base.ContinuousNonlinearConstraint.rst", "_autosummary/baybe.constraints.base.DiscreteConstraint.rst", "_autosummary/baybe.constraints.conditions.rst", "_autosummary/baybe.constraints.conditions.Condition.rst", "_autosummary/baybe.constraints.conditions.SubSelectionCondition.rst", "_autosummary/baybe.constraints.conditions.ThresholdCondition.rst", "_autosummary/baybe.constraints.continuous.rst", "_autosummary/baybe.constraints.continuous.ContinuousCardinalityConstraint.rst", "_autosummary/baybe.constraints.continuous.ContinuousLinearConstraint.rst", "_autosummary/baybe.constraints.deprecation.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearEqualityConstraint.rst", "_autosummary/baybe.constraints.deprecation.ContinuousLinearInequalityConstraint.rst", "_autosummary/baybe.constraints.deprecation.structure_constraints.rst", "_autosummary/baybe.constraints.discrete.rst", "_autosummary/baybe.constraints.discrete.DiscreteCardinalityConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteCustomConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteDependenciesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteExcludeConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteLinkedParametersConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteProductConstraint.rst", "_autosummary/baybe.constraints.discrete.DiscreteSumConstraint.rst", "_autosummary/baybe.constraints.utils.rst", "_autosummary/baybe.constraints.utils.is_cardinality_fulfilled.rst", "_autosummary/baybe.constraints.validation.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.rst", "_autosummary/baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.rst", "_autosummary/baybe.constraints.validation.validate_constraints.rst", "_autosummary/baybe.exceptions.rst", "_autosummary/baybe.exceptions.DeprecationError.rst", "_autosummary/baybe.exceptions.EmptySearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibilityError.rst", "_autosummary/baybe.exceptions.IncompatibleAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.IncompatibleArgumentError.rst", "_autosummary/baybe.exceptions.IncompatibleExplainerError.rst", "_autosummary/baybe.exceptions.IncompatibleSearchSpaceError.rst", "_autosummary/baybe.exceptions.IncompatibleSurrogateError.rst", "_autosummary/baybe.exceptions.IncompleteMeasurementsError.rst", "_autosummary/baybe.exceptions.InfeasibilityError.rst", "_autosummary/baybe.exceptions.InputDataTypeWarning.rst", "_autosummary/baybe.exceptions.InvalidSurrogateModelError.rst", "_autosummary/baybe.exceptions.InvalidTargetValueError.rst", "_autosummary/baybe.exceptions.MinimumCardinalityViolatedWarning.rst", "_autosummary/baybe.exceptions.ModelNotTrainedError.rst", "_autosummary/baybe.exceptions.NoMCAcquisitionFunctionError.rst", "_autosummary/baybe.exceptions.NoMeasurementsError.rst", "_autosummary/baybe.exceptions.NoRecommendersLeftError.rst", "_autosummary/baybe.exceptions.NotEnoughPointsLeftError.rst", "_autosummary/baybe.exceptions.NothingToSimulateError.rst", "_autosummary/baybe.exceptions.NumericalUnderflowError.rst", "_autosummary/baybe.exceptions.OptionalImportError.rst", "_autosummary/baybe.exceptions.SearchSpaceMatchWarning.rst", "_autosummary/baybe.exceptions.UnidentifiedSubclassError.rst", "_autosummary/baybe.exceptions.UnmatchedAttributeError.rst", "_autosummary/baybe.exceptions.UnusedObjectWarning.rst", "_autosummary/baybe.insights.rst", "_autosummary/baybe.insights.shap.rst", "_autosummary/baybe.insights.shap.EXPLAINERS.rst", "_autosummary/baybe.insights.shap.NON_SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAPInsight.rst", "_autosummary/baybe.insights.shap.SHAP_EXPLAINERS.rst", "_autosummary/baybe.insights.shap.SHAP_PLOTS.rst", "_autosummary/baybe.insights.shap.is_shap_explainer.rst", "_autosummary/baybe.insights.shap.make_explainer_for_surrogate.rst", "_autosummary/baybe.kernels.rst", "_autosummary/baybe.kernels.base.rst", "_autosummary/baybe.kernels.base.BasicKernel.rst", "_autosummary/baybe.kernels.base.CompositeKernel.rst", "_autosummary/baybe.kernels.base.Kernel.rst", "_autosummary/baybe.kernels.basic.rst", "_autosummary/baybe.kernels.basic.LinearKernel.rst", "_autosummary/baybe.kernels.basic.MaternKernel.rst", "_autosummary/baybe.kernels.basic.PeriodicKernel.rst", "_autosummary/baybe.kernels.basic.PiecewisePolynomialKernel.rst", "_autosummary/baybe.kernels.basic.PolynomialKernel.rst", "_autosummary/baybe.kernels.basic.RBFKernel.rst", "_autosummary/baybe.kernels.basic.RFFKernel.rst", "_autosummary/baybe.kernels.basic.RQKernel.rst", "_autosummary/baybe.kernels.composite.rst", "_autosummary/baybe.kernels.composite.AdditiveKernel.rst", "_autosummary/baybe.kernels.composite.ProductKernel.rst", "_autosummary/baybe.kernels.composite.ScaleKernel.rst", "_autosummary/baybe.objectives.rst", "_autosummary/baybe.objectives.base.rst", "_autosummary/baybe.objectives.base.Objective.rst", "_autosummary/baybe.objectives.base.to_objective.rst", "_autosummary/baybe.objectives.desirability.rst", "_autosummary/baybe.objectives.desirability.DesirabilityObjective.rst", "_autosummary/baybe.objectives.desirability.scalarize.rst", "_autosummary/baybe.objectives.enum.rst", "_autosummary/baybe.objectives.enum.Scalarizer.rst", "_autosummary/baybe.objectives.pareto.rst", "_autosummary/baybe.objectives.pareto.ParetoObjective.rst", "_autosummary/baybe.objectives.single.rst", "_autosummary/baybe.objectives.single.SingleTargetObjective.rst", "_autosummary/baybe.objectives.validation.rst", "_autosummary/baybe.objectives.validation.validate_target_names.rst", "_autosummary/baybe.parameters.rst", "_autosummary/baybe.parameters.base.rst", "_autosummary/baybe.parameters.base.ContinuousParameter.rst", "_autosummary/baybe.parameters.base.DiscreteParameter.rst", "_autosummary/baybe.parameters.base.Parameter.rst", "_autosummary/baybe.parameters.categorical.rst", "_autosummary/baybe.parameters.categorical.CategoricalParameter.rst", "_autosummary/baybe.parameters.categorical.TaskParameter.rst", "_autosummary/baybe.parameters.custom.rst", "_autosummary/baybe.parameters.custom.CustomDiscreteParameter.rst", "_autosummary/baybe.parameters.enum.rst", "_autosummary/baybe.parameters.enum.CategoricalEncoding.rst", "_autosummary/baybe.parameters.enum.CustomEncoding.rst", "_autosummary/baybe.parameters.enum.ParameterEncoding.rst", "_autosummary/baybe.parameters.enum.SubstanceEncoding.rst", "_autosummary/baybe.parameters.numerical.rst", "_autosummary/baybe.parameters.numerical.NumericalContinuousParameter.rst", "_autosummary/baybe.parameters.numerical.NumericalDiscreteParameter.rst", "_autosummary/baybe.parameters.substance.rst", "_autosummary/baybe.parameters.substance.Smiles.rst", "_autosummary/baybe.parameters.substance.SubstanceParameter.rst", "_autosummary/baybe.parameters.utils.rst", "_autosummary/baybe.parameters.utils.activate_parameter.rst", "_autosummary/baybe.parameters.utils.get_parameters_from_dataframe.rst", "_autosummary/baybe.parameters.utils.is_inactive.rst", "_autosummary/baybe.parameters.utils.sort_parameters.rst", "_autosummary/baybe.parameters.validation.rst", "_autosummary/baybe.parameters.validation.validate_decorrelation.rst", "_autosummary/baybe.parameters.validation.validate_is_finite.rst", "_autosummary/baybe.parameters.validation.validate_unique_values.rst", "_autosummary/baybe.priors.rst", "_autosummary/baybe.priors.base.rst", "_autosummary/baybe.priors.base.Prior.rst", "_autosummary/baybe.priors.basic.rst", "_autosummary/baybe.priors.basic.BetaPrior.rst", "_autosummary/baybe.priors.basic.GammaPrior.rst", "_autosummary/baybe.priors.basic.HalfCauchyPrior.rst", "_autosummary/baybe.priors.basic.HalfNormalPrior.rst", "_autosummary/baybe.priors.basic.LogNormalPrior.rst", "_autosummary/baybe.priors.basic.NormalPrior.rst", "_autosummary/baybe.priors.basic.SmoothedBoxPrior.rst", "_autosummary/baybe.recommenders.rst", "_autosummary/baybe.recommenders.base.rst", "_autosummary/baybe.recommenders.base.RecommenderProtocol.rst", "_autosummary/baybe.recommenders.meta.rst", "_autosummary/baybe.recommenders.meta.base.rst", "_autosummary/baybe.recommenders.meta.base.MetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.rst", "_autosummary/baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.SequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.rst", "_autosummary/baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.rst", "_autosummary/baybe.recommenders.naive.rst", "_autosummary/baybe.recommenders.naive.NaiveHybridSpaceRecommender.rst", "_autosummary/baybe.recommenders.pure.rst", "_autosummary/baybe.recommenders.pure.base.rst", "_autosummary/baybe.recommenders.pure.base.PureRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.rst", "_autosummary/baybe.recommenders.pure.bayesian.base.BayesianRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.rst", "_autosummary/baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.rst", "_autosummary/baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.rst", "_autosummary/baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.rst", "_autosummary/baybe.searchspace.rst", "_autosummary/baybe.searchspace.continuous.rst", "_autosummary/baybe.searchspace.continuous.SubspaceContinuous.rst", "_autosummary/baybe.searchspace.core.rst", "_autosummary/baybe.searchspace.core.SearchSpace.rst", "_autosummary/baybe.searchspace.core.SearchSpaceType.rst", "_autosummary/baybe.searchspace.core.to_searchspace.rst", "_autosummary/baybe.searchspace.core.validate_searchspace_from_config.rst", "_autosummary/baybe.searchspace.discrete.rst", "_autosummary/baybe.searchspace.discrete.MemorySize.rst", "_autosummary/baybe.searchspace.discrete.SubspaceDiscrete.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_pandas.rst", "_autosummary/baybe.searchspace.discrete.parameter_cartesian_prod_polars.rst", "_autosummary/baybe.searchspace.discrete.validate_simplex_subspace_from_config.rst", "_autosummary/baybe.searchspace.validation.rst", "_autosummary/baybe.searchspace.validation.get_transform_parameters.rst", "_autosummary/baybe.searchspace.validation.validate_parameter_names.rst", "_autosummary/baybe.searchspace.validation.validate_parameters.rst", "_autosummary/baybe.serialization.rst", "_autosummary/baybe.serialization.core.rst", "_autosummary/baybe.serialization.core.block_deserialization_hook.rst", "_autosummary/baybe.serialization.core.block_serialization_hook.rst", "_autosummary/baybe.serialization.core.converter.rst", "_autosummary/baybe.serialization.core.get_base_structure_hook.rst", "_autosummary/baybe.serialization.core.select_constructor_hook.rst", "_autosummary/baybe.serialization.core.unstructure_base.rst", "_autosummary/baybe.serialization.mixin.rst", "_autosummary/baybe.serialization.mixin.SerialMixin.rst", "_autosummary/baybe.serialization.utils.rst", "_autosummary/baybe.serialization.utils.deserialize_dataframe.rst", "_autosummary/baybe.serialization.utils.serialize_dataframe.rst", "_autosummary/baybe.simulation.rst", "_autosummary/baybe.simulation.core.rst", "_autosummary/baybe.simulation.core.simulate_experiment.rst", "_autosummary/baybe.simulation.lookup.rst", "_autosummary/baybe.simulation.lookup.look_up_targets.rst", "_autosummary/baybe.simulation.scenarios.rst", "_autosummary/baybe.simulation.scenarios.simulate_scenarios.rst", "_autosummary/baybe.simulation.transfer_learning.rst", "_autosummary/baybe.simulation.transfer_learning.simulate_transfer_learning.rst", "_autosummary/baybe.surrogates.rst", "_autosummary/baybe.surrogates.bandit.rst", "_autosummary/baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.rst", "_autosummary/baybe.surrogates.base.rst", "_autosummary/baybe.surrogates.base.IndependentGaussianSurrogate.rst", "_autosummary/baybe.surrogates.base.PosteriorStatistic.rst", "_autosummary/baybe.surrogates.base.Surrogate.rst", "_autosummary/baybe.surrogates.base.SurrogateProtocol.rst", "_autosummary/baybe.surrogates.composite.rst", "_autosummary/baybe.surrogates.composite.CompositeSurrogate.rst", "_autosummary/baybe.surrogates.custom.rst", "_autosummary/baybe.surrogates.custom.CustomONNXSurrogate.rst", "_autosummary/baybe.surrogates.custom.register_custom_architecture.rst", "_autosummary/baybe.surrogates.gaussian_process.rst", "_autosummary/baybe.surrogates.gaussian_process.core.rst", "_autosummary/baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.rst", "_autosummary/baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.rst", "_autosummary/baybe.surrogates.linear.rst", "_autosummary/baybe.surrogates.linear.BayesianLinearSurrogate.rst", "_autosummary/baybe.surrogates.naive.rst", "_autosummary/baybe.surrogates.naive.MeanPredictionSurrogate.rst", "_autosummary/baybe.surrogates.ngboost.rst", "_autosummary/baybe.surrogates.ngboost.NGBoostSurrogate.rst", "_autosummary/baybe.surrogates.random_forest.rst", "_autosummary/baybe.surrogates.random_forest.RandomForestSurrogate.rst", "_autosummary/baybe.surrogates.utils.rst", "_autosummary/baybe.surrogates.utils.batchify_ensemble_predictor.rst", "_autosummary/baybe.surrogates.utils.batchify_mean_var_prediction.rst", "_autosummary/baybe.surrogates.utils.catch_constant_targets.rst", "_autosummary/baybe.surrogates.validation.rst", "_autosummary/baybe.surrogates.validation.make_dict_validator.rst", "_autosummary/baybe.surrogates.validation.type_validation_converter.rst", "_autosummary/baybe.surrogates.validation.validate_custom_architecture_cls.rst", "_autosummary/baybe.targets.rst", "_autosummary/baybe.targets.base.rst", "_autosummary/baybe.targets.base.Target.rst", "_autosummary/baybe.targets.binary.rst", "_autosummary/baybe.targets.binary.BinaryTarget.rst", "_autosummary/baybe.targets.binary.ChoiceValue.rst", "_autosummary/baybe.targets.enum.rst", "_autosummary/baybe.targets.enum.TargetMode.rst", "_autosummary/baybe.targets.enum.TargetTransformation.rst", "_autosummary/baybe.targets.numerical.rst", "_autosummary/baybe.targets.numerical.NumericalTarget.rst", "_autosummary/baybe.targets.transforms.rst", "_autosummary/baybe.targets.transforms.bell_transform.rst", "_autosummary/baybe.targets.transforms.linear_transform.rst", "_autosummary/baybe.targets.transforms.triangular_transform.rst", "_autosummary/baybe.telemetry.rst", "_autosummary/baybe.telemetry.get_user_details.rst", "_autosummary/baybe.telemetry.is_enabled.rst", "_autosummary/baybe.telemetry.telemetry_record_recommended_measurement_percentage.rst", "_autosummary/baybe.telemetry.telemetry_record_value.rst", "_autosummary/baybe.utils.rst", "_autosummary/baybe.utils.augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_dependency_augmentation.rst", "_autosummary/baybe.utils.augmentation.df_apply_permutation_augmentation.rst", "_autosummary/baybe.utils.basic.rst", "_autosummary/baybe.utils.basic.Dummy.rst", "_autosummary/baybe.utils.basic.UNSPECIFIED.rst", "_autosummary/baybe.utils.basic.UnspecifiedType.rst", "_autosummary/baybe.utils.basic.classproperty.rst", "_autosummary/baybe.utils.basic.convert_to_float.rst", "_autosummary/baybe.utils.basic.find_subclass.rst", "_autosummary/baybe.utils.basic.get_baseclasses.rst", "_autosummary/baybe.utils.basic.get_subclasses.rst", "_autosummary/baybe.utils.basic.group_duplicate_values.rst", "_autosummary/baybe.utils.basic.hilberts_factory.rst", "_autosummary/baybe.utils.basic.is_all_instance.rst", "_autosummary/baybe.utils.basic.match_attributes.rst", "_autosummary/baybe.utils.basic.refers_to.rst", "_autosummary/baybe.utils.basic.register_hooks.rst", "_autosummary/baybe.utils.basic.to_tuple.rst", "_autosummary/baybe.utils.boolean.rst", "_autosummary/baybe.utils.boolean.check_if_in.rst", "_autosummary/baybe.utils.boolean.is_abstract.rst", "_autosummary/baybe.utils.boolean.strtobool.rst", "_autosummary/baybe.utils.chemistry.rst", "_autosummary/baybe.utils.chemistry.get_canonical_smiles.rst", "_autosummary/baybe.utils.chemistry.get_fingerprint_class.rst", "_autosummary/baybe.utils.chemistry.name_to_smiles.rst", "_autosummary/baybe.utils.chemistry.smiles_to_fingerprint_features.rst", "_autosummary/baybe.utils.clustering_algorithms.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.rst", "_autosummary/baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.rst", "_autosummary/baybe.utils.conversion.rst", "_autosummary/baybe.utils.conversion.fraction_to_float.rst", "_autosummary/baybe.utils.conversion.nonstring_to_tuple.rst", "_autosummary/baybe.utils.conversion.to_string.rst", "_autosummary/baybe.utils.dataframe.rst", "_autosummary/baybe.utils.dataframe.add_fake_measurements.rst", "_autosummary/baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.rst", "_autosummary/baybe.utils.dataframe.add_parameter_noise.rst", "_autosummary/baybe.utils.dataframe.arrays_to_dataframes.rst", "_autosummary/baybe.utils.dataframe.create_fake_input.rst", "_autosummary/baybe.utils.dataframe.df_drop_single_value_columns.rst", "_autosummary/baybe.utils.dataframe.df_drop_string_columns.rst", "_autosummary/baybe.utils.dataframe.df_uncorrelated_features.rst", "_autosummary/baybe.utils.dataframe.filter_df.rst", "_autosummary/baybe.utils.dataframe.fuzzy_row_match.rst", "_autosummary/baybe.utils.dataframe.get_transform_objects.rst", "_autosummary/baybe.utils.dataframe.handle_missing_values.rst", "_autosummary/baybe.utils.dataframe.normalize_input_dtypes.rst", "_autosummary/baybe.utils.dataframe.pretty_print_df.rst", "_autosummary/baybe.utils.dataframe.to_tensor.rst", "_autosummary/baybe.utils.dataframe.transform_target_columns.rst", "_autosummary/baybe.utils.interval.rst", "_autosummary/baybe.utils.interval.InfiniteIntervalError.rst", "_autosummary/baybe.utils.interval.Interval.rst", "_autosummary/baybe.utils.interval.convert_bounds.rst", "_autosummary/baybe.utils.interval.use_fallback_constructor_hook.rst", "_autosummary/baybe.utils.memory.rst", "_autosummary/baybe.utils.memory.bytes_to_human_readable.rst", "_autosummary/baybe.utils.numerical.rst", "_autosummary/baybe.utils.numerical.DTypeFloatNumpy.rst", "_autosummary/baybe.utils.numerical.DTypeFloatONNX.rst", "_autosummary/baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.numerical.closer_element.rst", "_autosummary/baybe.utils.numerical.closest_element.rst", "_autosummary/baybe.utils.numerical.geom_mean.rst", "_autosummary/baybe.utils.random.rst", "_autosummary/baybe.utils.random.set_random_seed.rst", "_autosummary/baybe.utils.random.temporary_seed.rst", "_autosummary/baybe.utils.sampling_algorithms.rst", "_autosummary/baybe.utils.sampling_algorithms.DiscreteSamplingMethod.rst", "_autosummary/baybe.utils.sampling_algorithms.farthest_point_sampling.rst", "_autosummary/baybe.utils.sampling_algorithms.sample_numerical_df.rst", "_autosummary/baybe.utils.scaling.rst", "_autosummary/baybe.utils.scaling.ColumnTransformer.rst", "_autosummary/baybe.utils.torch.rst", "_autosummary/baybe.utils.torch.DTypeFloatTorch.rst", "_autosummary/baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION.rst", "_autosummary/baybe.utils.validation.rst", "_autosummary/baybe.utils.validation.finite_float.rst", "_autosummary/baybe.utils.validation.non_inf_float.rst", "_autosummary/baybe.utils.validation.non_nan_float.rst", "_autosummary/baybe.utils.validation.validate_not_nan.rst", "_autosummary/baybe.utils.validation.validate_parameter_input.rst", "_autosummary/baybe.utils.validation.validate_target_input.rst", "examples/Backtesting/Backtesting.md", "examples/Backtesting/custom_blackbox.md", "examples/Backtesting/full_initial_data.md", "examples/Backtesting/full_lookup.md", "examples/Backtesting/impute_mode.md", "examples/Basics/Basics.md", "examples/Basics/campaign.md", "examples/Basics/recommenders.md", "examples/Constraints_Continuous/Constraints_Continuous.md", "examples/Constraints_Continuous/hybrid_space.md", "examples/Constraints_Continuous/linear_constraints.md", "examples/Constraints_Discrete/Constraints_Discrete.md", "examples/Constraints_Discrete/custom_constraints.md", "examples/Constraints_Discrete/dependency_constraints.md", "examples/Constraints_Discrete/exclusion_constraints.md", "examples/Constraints_Discrete/prodsum_constraints.md", "examples/Custom_Hooks/Custom_Hooks.md", "examples/Custom_Hooks/basics.md", "examples/Custom_Hooks/campaign_stopping.md", "examples/Custom_Hooks/probability_of_improvement.md", "examples/Custom_Surrogates/Custom_Surrogates.md", "examples/Custom_Surrogates/custom_pretrained.md", "examples/Custom_Surrogates/surrogate_params.md", "examples/Mixtures/Mixtures.md", "examples/Mixtures/slot_based.md", "examples/Mixtures/traditional.md", "examples/Multi_Armed_Bandit/Multi_Armed_Bandit.md", "examples/Multi_Armed_Bandit/bernoulli_multi_armed_bandit.md", "examples/Multi_Target/Multi_Target.md", "examples/Multi_Target/desirability.md", "examples/Multi_Target/pareto.md", "examples/Searchspaces/Searchspaces.md", "examples/Searchspaces/continuous_space.md", "examples/Searchspaces/discrete_space.md", "examples/Searchspaces/hybrid_space.md", "examples/Serialization/Serialization.md", "examples/Serialization/basic_serialization.md", "examples/Serialization/create_from_config.md", "examples/Serialization/validate_config.md", "examples/Transfer_Learning/Transfer_Learning.md", "examples/Transfer_Learning/backtesting.md", "examples/Transfer_Learning/basic_transfer_learning.md", "examples/examples.md", "faq.md", "index.md", "known_issues.md", "misc/changelog_link.md", "misc/contributing_link.md", "misc/contributors_link.md", "misc/license_link.md", "userguide/active_learning.md", "userguide/async.md", "userguide/campaigns.md", "userguide/constraints.md", "userguide/envvars.md", "userguide/getting_recommendations.md", "userguide/insights.md", "userguide/objectives.md", "userguide/parameters.md", "userguide/recommenders.md", "userguide/searchspace.md", "userguide/serialization.md", "userguide/simulation.md", "userguide/surrogates.md", "userguide/targets.md", "userguide/transfer_learning.md", "userguide/userguide.md", "userguide/utils.md"], "indexentries": {"__init__() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.__init__", false]], "__init__() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.__init__", false]], "__init__() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.__init__", false]], "__init__() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.__init__", false]], "__init__() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.__init__", false]], "__init__() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.__init__", false]], "__init__() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.__init__", false]], "__init__() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.__init__", false]], "__init__() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.__init__", false]], "__init__() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.__init__", false]], "__init__() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.__init__", false]], "__init__() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.__init__", false]], "__init__() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.__init__", false]], "__init__() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.__init__", false]], "__init__() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.__init__", false]], "__init__() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.__init__", false]], "__init__() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.__init__", false]], "__init__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__init__", false]], "__init__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__init__", false]], "__init__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__init__", false]], "__init__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__init__", false]], "__init__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__init__", false]], "__init__() (baybe.exceptions.incompletemeasurementserror method)": [[75, "baybe.exceptions.IncompleteMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.infeasibilityerror method)": [[76, "baybe.exceptions.InfeasibilityError.__init__", false]], "__init__() (baybe.exceptions.inputdatatypewarning method)": [[77, "baybe.exceptions.InputDataTypeWarning.__init__", false]], "__init__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[78, "baybe.exceptions.InvalidSurrogateModelError.__init__", false]], "__init__() (baybe.exceptions.invalidtargetvalueerror method)": [[79, "baybe.exceptions.InvalidTargetValueError.__init__", false]], "__init__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[80, "baybe.exceptions.MinimumCardinalityViolatedWarning.__init__", false]], "__init__() (baybe.exceptions.modelnottrainederror method)": [[81, "baybe.exceptions.ModelNotTrainedError.__init__", false]], "__init__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[82, "baybe.exceptions.NoMCAcquisitionFunctionError.__init__", false]], "__init__() (baybe.exceptions.nomeasurementserror method)": [[83, "baybe.exceptions.NoMeasurementsError.__init__", false]], "__init__() (baybe.exceptions.norecommenderslefterror method)": [[84, "baybe.exceptions.NoRecommendersLeftError.__init__", false]], "__init__() (baybe.exceptions.notenoughpointslefterror method)": [[85, "baybe.exceptions.NotEnoughPointsLeftError.__init__", false]], "__init__() (baybe.exceptions.nothingtosimulateerror method)": [[86, "baybe.exceptions.NothingToSimulateError.__init__", false]], "__init__() (baybe.exceptions.numericalunderflowerror method)": [[87, "baybe.exceptions.NumericalUnderflowError.__init__", false]], "__init__() (baybe.exceptions.optionalimporterror method)": [[88, "baybe.exceptions.OptionalImportError.__init__", false]], "__init__() (baybe.exceptions.searchspacematchwarning method)": [[89, "baybe.exceptions.SearchSpaceMatchWarning.__init__", false]], "__init__() (baybe.exceptions.unidentifiedsubclasserror method)": [[90, "baybe.exceptions.UnidentifiedSubclassError.__init__", false]], "__init__() (baybe.exceptions.unmatchedattributeerror method)": [[91, "baybe.exceptions.UnmatchedAttributeError.__init__", false]], "__init__() (baybe.exceptions.unusedobjectwarning method)": [[92, "baybe.exceptions.UnusedObjectWarning.__init__", false]], "__init__() (baybe.insights.shap.shapinsight method)": [[97, "baybe.insights.shap.SHAPInsight.__init__", false]], "__init__() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.__init__", false]], "__init__() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.__init__", false]], "__init__() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.__init__", false]], "__init__() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.__init__", false]], "__init__() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.__init__", false]], "__init__() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.__init__", false]], "__init__() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.__init__", false]], "__init__() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.__init__", false]], "__init__() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.__init__", false]], "__init__() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.__init__", false]], "__init__() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.__init__", false]], "__init__() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.__init__", false]], "__init__() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.__init__", false]], "__init__() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.__init__", false]], "__init__() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.__init__", false]], "__init__() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.__init__", false]], "__init__() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.__init__", false]], "__init__() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.__init__", false]], "__init__() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.__init__", false]], "__init__() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.__init__", false]], "__init__() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.__init__", false]], "__init__() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.__init__", false]], "__init__() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.__init__", false]], "__init__() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.__init__", false]], "__init__() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.__init__", false]], "__init__() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.__init__", false]], "__init__() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.__init__", false]], "__init__() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.__init__", false]], "__init__() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.__init__", false]], "__init__() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.__init__", false]], "__init__() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.__init__", false]], "__init__() (baybe.recommenders.base.recommenderprotocol method)": [[178, "baybe.recommenders.base.RecommenderProtocol.__init__", false]], "__init__() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.__init__", false]], "__init__() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.base.purerecommender method)": [[191, "baybe.recommenders.pure.base.PureRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.__init__", false]], "__init__() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.__init__", false]], "__init__() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.__init__", false]], "__init__() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.__init__", false]], "__init__() (baybe.searchspace.discrete.memorysize method)": [[220, "baybe.searchspace.discrete.MemorySize.__init__", false]], "__init__() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.__init__", false]], "__init__() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.__init__", false]], "__init__() (baybe.surrogates.base.surrogateprotocol method)": [[258, "baybe.surrogates.base.SurrogateProtocol.__init__", false]], "__init__() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.__init__", false]], "__init__() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.kernelfactory method)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.default.defaultkernelfactory method)": [[276, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory.__init__", false]], "__init__() (baybe.surrogates.gaussian_process.presets.edbo.edbokernelfactory method)": [[278, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory.__init__", false]], "__init__() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.__init__", false]], "__init__() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.__init__", false]], "__init__() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.__init__", false]], "__init__() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.__init__", false]], "__init__() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.__init__", false]], "__init__() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.__init__", false]], "__init__() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.__init__", false]], "__init__() (baybe.utils.basic.classproperty method)": [[323, "baybe.utils.basic.classproperty.__init__", false]], "__init__() (baybe.utils.basic.dummy method)": [[320, "baybe.utils.basic.Dummy.__init__", false]], "__init__() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.__init__", false]], "__init__() (baybe.utils.interval.infiniteintervalerror method)": [[370, "baybe.utils.interval.InfiniteIntervalError.__init__", false]], "__init__() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.__init__", false]], "__init__() (baybe.utils.scaling.columntransformer method)": [[391, "baybe.utils.scaling.ColumnTransformer.__init__", false]], "__new__() (baybe.exceptions.deprecationerror method)": [[67, "baybe.exceptions.DeprecationError.__new__", false]], "__new__() (baybe.exceptions.emptysearchspaceerror method)": [[68, "baybe.exceptions.EmptySearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatibilityerror method)": [[69, "baybe.exceptions.IncompatibilityError.__new__", false]], "__new__() (baybe.exceptions.incompatibleacquisitionfunctionerror method)": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.incompatibleargumenterror method)": [[71, "baybe.exceptions.IncompatibleArgumentError.__new__", false]], "__new__() (baybe.exceptions.incompatibleexplainererror method)": [[72, "baybe.exceptions.IncompatibleExplainerError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesearchspaceerror method)": [[73, "baybe.exceptions.IncompatibleSearchSpaceError.__new__", false]], "__new__() (baybe.exceptions.incompatiblesurrogateerror method)": [[74, "baybe.exceptions.IncompatibleSurrogateError.__new__", false]], "__new__() (baybe.exceptions.incompletemeasurementserror method)": [[75, "baybe.exceptions.IncompleteMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.infeasibilityerror method)": [[76, "baybe.exceptions.InfeasibilityError.__new__", false]], "__new__() (baybe.exceptions.inputdatatypewarning method)": [[77, "baybe.exceptions.InputDataTypeWarning.__new__", false]], "__new__() (baybe.exceptions.invalidsurrogatemodelerror method)": [[78, "baybe.exceptions.InvalidSurrogateModelError.__new__", false]], "__new__() (baybe.exceptions.invalidtargetvalueerror method)": [[79, "baybe.exceptions.InvalidTargetValueError.__new__", false]], "__new__() (baybe.exceptions.minimumcardinalityviolatedwarning method)": [[80, "baybe.exceptions.MinimumCardinalityViolatedWarning.__new__", false]], "__new__() (baybe.exceptions.modelnottrainederror method)": [[81, "baybe.exceptions.ModelNotTrainedError.__new__", false]], "__new__() (baybe.exceptions.nomcacquisitionfunctionerror method)": [[82, "baybe.exceptions.NoMCAcquisitionFunctionError.__new__", false]], "__new__() (baybe.exceptions.nomeasurementserror method)": [[83, "baybe.exceptions.NoMeasurementsError.__new__", false]], "__new__() (baybe.exceptions.norecommenderslefterror method)": [[84, "baybe.exceptions.NoRecommendersLeftError.__new__", false]], "__new__() (baybe.exceptions.notenoughpointslefterror method)": [[85, "baybe.exceptions.NotEnoughPointsLeftError.__new__", false]], "__new__() (baybe.exceptions.nothingtosimulateerror method)": [[86, "baybe.exceptions.NothingToSimulateError.__new__", false]], "__new__() (baybe.exceptions.numericalunderflowerror method)": [[87, "baybe.exceptions.NumericalUnderflowError.__new__", false]], "__new__() (baybe.exceptions.optionalimporterror method)": [[88, "baybe.exceptions.OptionalImportError.__new__", false]], "__new__() (baybe.exceptions.searchspacematchwarning method)": [[89, "baybe.exceptions.SearchSpaceMatchWarning.__new__", false]], "__new__() (baybe.exceptions.unidentifiedsubclasserror method)": [[90, "baybe.exceptions.UnidentifiedSubclassError.__new__", false]], "__new__() (baybe.exceptions.unmatchedattributeerror method)": [[91, "baybe.exceptions.UnmatchedAttributeError.__new__", false]], "__new__() (baybe.exceptions.unusedobjectwarning method)": [[92, "baybe.exceptions.UnusedObjectWarning.__new__", false]], "__new__() (baybe.parameters.enum.categoricalencoding method)": [[146, "baybe.parameters.enum.CategoricalEncoding.__new__", false]], "__new__() (baybe.parameters.enum.customencoding method)": [[147, "baybe.parameters.enum.CustomEncoding.__new__", false]], "__new__() (baybe.parameters.enum.substanceencoding method)": [[149, "baybe.parameters.enum.SubstanceEncoding.__new__", false]], "__new__() (baybe.utils.interval.infiniteintervalerror method)": [[370, "baybe.utils.interval.InfiniteIntervalError.__new__", false]], "a (baybe.priors.basic.smoothedboxprior attribute)": [[175, "baybe.priors.basic.SmoothedBoxPrior.a", false]], "abbreviation (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.abbreviation", false]], "abbreviation (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.abbreviation", false]], "acquisition_function (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_function", false]], "acquisition_function (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_function", false]], "acquisition_values() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values", false]], "acquisition_values() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values", false]], "acquisitionfunction (class in baybe.acquisition.base)": [[24, "baybe.acquisition.base.AcquisitionFunction", false]], "activate_parameter() (in module baybe.parameters.utils)": [[157, "baybe.parameters.utils.activate_parameter", false]], "active_values (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.active_values", false]], "active_values (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.active_values", false]], "active_values (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.active_values", false]], "active_values (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.active_values", false]], "active_values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.active_values", false]], "active_values (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.active_values", false]], "add_fake_measurements() (in module baybe.utils.dataframe)": [[353, "baybe.utils.dataframe.add_fake_measurements", false]], "add_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.add_measurements", false]], "add_noise_to_perturb_degenerate_rows() (in module baybe.utils.dataframe)": [[354, "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", false]], "add_parameter_noise() (in module baybe.utils.dataframe)": [[355, "baybe.utils.dataframe.add_parameter_noise", false]], "additivekernel (class in baybe.kernels.composite)": [[117, "baybe.kernels.composite.AdditiveKernel", false]], "affected_parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.affected_parameters", false]], "allow_recommending_already_measured (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.naive.naivehybridspacerecommender property)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.base.purerecommender property)": [[191, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_measured (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_already_measured", false]], "allow_recommending_already_recommended (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_already_recommended", false]], "allow_recommending_pending_experiments (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.naive.naivehybridspacerecommender property)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.base.purerecommender property)": [[191, "baybe.recommenders.pure.base.PureRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_recommending_pending_experiments", false]], "allow_recommending_pending_experiments (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_recommending_pending_experiments", false]], "allow_repeated_recommendations (baybe.recommenders.naive.naivehybridspacerecommender property)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.base.purerecommender property)": [[191, "baybe.recommenders.pure.base.PureRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender property)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender property)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender property)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender property)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender property)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender property)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.allow_repeated_recommendations", false]], "allow_repeated_recommendations (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender property)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.allow_repeated_recommendations", false]], "alpha (baybe.priors.basic.betaprior attribute)": [[169, "baybe.priors.basic.BetaPrior.alpha", false]], "arrays_to_dataframes() (in module baybe.utils.dataframe)": [[356, "baybe.utils.dataframe.arrays_to_dataframes", false]], "atompair (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ATOMPAIR", false]], "autocorr (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.AUTOCORR", false]], "avalon (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.AVALON", false]], "b (baybe.priors.basic.smoothedboxprior attribute)": [[175, "baybe.priors.basic.SmoothedBoxPrior.b", false]], "background_data (baybe.insights.shap.shapinsight attribute)": [[97, "baybe.insights.shap.SHAPInsight.background_data", false]], "base_kernel (baybe.kernels.composite.scalekernel attribute)": [[119, "baybe.kernels.composite.ScaleKernel.base_kernel", false]], "base_kernels (baybe.kernels.composite.additivekernel attribute)": [[117, "baybe.kernels.composite.AdditiveKernel.base_kernels", false]], "base_kernels (baybe.kernels.composite.productkernel attribute)": [[118, "baybe.kernels.composite.ProductKernel.base_kernels", false]], "basesequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender", false]], "basickernel (class in baybe.kernels.base)": [[104, "baybe.kernels.base.BasicKernel", false]], "batchify_ensemble_predictor() (in module baybe.surrogates.utils)": [[288, "baybe.surrogates.utils.batchify_ensemble_predictor", false]], "batchify_mean_var_prediction() (in module baybe.surrogates.utils)": [[289, "baybe.surrogates.utils.batchify_mean_var_prediction", false]], "baybe": [[0, "module-baybe", false]], "baybe (baybe.surrogates.gaussian_process.presets.core.gaussianprocesspreset attribute)": [[273, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset.BAYBE", false]], "baybe.acquisition": [[1, "module-baybe.acquisition", false]], "baybe.acquisition.acqfs": [[2, "module-baybe.acquisition.acqfs", false]], "baybe.acquisition.base": [[23, "module-baybe.acquisition.base", false]], "baybe.acquisition.partial": [[25, "module-baybe.acquisition.partial", false]], "baybe.acquisition.utils": [[27, "module-baybe.acquisition.utils", false]], "baybe.campaign": [[30, "module-baybe.campaign", false]], "baybe.constraints": [[32, "module-baybe.constraints", false]], "baybe.constraints.base": [[33, "module-baybe.constraints.base", false]], "baybe.constraints.conditions": [[39, "module-baybe.constraints.conditions", false]], "baybe.constraints.continuous": [[43, "module-baybe.constraints.continuous", false]], "baybe.constraints.deprecation": [[46, "module-baybe.constraints.deprecation", false]], "baybe.constraints.discrete": [[50, "module-baybe.constraints.discrete", false]], "baybe.constraints.utils": [[60, "module-baybe.constraints.utils", false]], "baybe.constraints.validation": [[62, "module-baybe.constraints.validation", false]], "baybe.exceptions": [[66, "module-baybe.exceptions", false]], "baybe.insights": [[93, "module-baybe.insights", false]], "baybe.insights.shap": [[94, "module-baybe.insights.shap", false]], "baybe.kernels": [[102, "module-baybe.kernels", false]], "baybe.kernels.base": [[103, "module-baybe.kernels.base", false]], "baybe.kernels.basic": [[107, "module-baybe.kernels.basic", false]], "baybe.kernels.composite": [[116, "module-baybe.kernels.composite", false]], "baybe.objectives": [[120, "module-baybe.objectives", false]], "baybe.objectives.base": [[121, "module-baybe.objectives.base", false]], "baybe.objectives.desirability": [[124, "module-baybe.objectives.desirability", false]], "baybe.objectives.enum": [[127, "module-baybe.objectives.enum", false]], "baybe.objectives.pareto": [[129, "module-baybe.objectives.pareto", false]], "baybe.objectives.single": [[131, "module-baybe.objectives.single", false]], "baybe.objectives.validation": [[133, "module-baybe.objectives.validation", false]], "baybe.parameters": [[135, "module-baybe.parameters", false]], "baybe.parameters.base": [[136, "module-baybe.parameters.base", false]], "baybe.parameters.categorical": [[140, "module-baybe.parameters.categorical", false]], "baybe.parameters.custom": [[143, "module-baybe.parameters.custom", false]], "baybe.parameters.enum": [[145, "module-baybe.parameters.enum", false]], "baybe.parameters.numerical": [[150, "module-baybe.parameters.numerical", false]], "baybe.parameters.substance": [[153, "module-baybe.parameters.substance", false]], "baybe.parameters.utils": [[156, "module-baybe.parameters.utils", false]], "baybe.parameters.validation": [[161, "module-baybe.parameters.validation", false]], "baybe.priors": [[165, "module-baybe.priors", false]], "baybe.priors.base": [[166, "module-baybe.priors.base", false]], "baybe.priors.basic": [[168, "module-baybe.priors.basic", false]], "baybe.recommenders": [[176, "module-baybe.recommenders", false]], "baybe.recommenders.base": [[177, "module-baybe.recommenders.base", false]], "baybe.recommenders.meta": [[179, "module-baybe.recommenders.meta", false]], "baybe.recommenders.meta.base": [[180, "module-baybe.recommenders.meta.base", false]], "baybe.recommenders.meta.sequential": [[182, "module-baybe.recommenders.meta.sequential", false]], "baybe.recommenders.naive": [[187, "module-baybe.recommenders.naive", false]], "baybe.recommenders.pure": [[189, "module-baybe.recommenders.pure", false]], "baybe.recommenders.pure.base": [[190, "module-baybe.recommenders.pure.base", false]], "baybe.recommenders.pure.bayesian": [[192, "module-baybe.recommenders.pure.bayesian", false]], "baybe.recommenders.pure.bayesian.base": [[193, "module-baybe.recommenders.pure.bayesian.base", false]], "baybe.recommenders.pure.bayesian.botorch": [[195, "module-baybe.recommenders.pure.bayesian.botorch", false]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[197, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false]], "baybe.recommenders.pure.nonpredictive": [[199, "module-baybe.recommenders.pure.nonpredictive", false]], "baybe.recommenders.pure.nonpredictive.base": [[200, "module-baybe.recommenders.pure.nonpredictive.base", false]], "baybe.recommenders.pure.nonpredictive.clustering": [[202, "module-baybe.recommenders.pure.nonpredictive.clustering", false]], "baybe.recommenders.pure.nonpredictive.sampling": [[207, "module-baybe.recommenders.pure.nonpredictive.sampling", false]], "baybe.searchspace": [[211, "module-baybe.searchspace", false]], "baybe.searchspace.continuous": [[212, "module-baybe.searchspace.continuous", false]], "baybe.searchspace.core": [[214, "module-baybe.searchspace.core", false]], "baybe.searchspace.discrete": [[219, "module-baybe.searchspace.discrete", false]], "baybe.searchspace.validation": [[225, "module-baybe.searchspace.validation", false]], "baybe.serialization": [[229, "module-baybe.serialization", false]], "baybe.serialization.core": [[230, "module-baybe.serialization.core", false]], "baybe.serialization.mixin": [[237, "module-baybe.serialization.mixin", false]], "baybe.serialization.utils": [[239, "module-baybe.serialization.utils", false]], "baybe.simulation": [[242, "module-baybe.simulation", false]], "baybe.simulation.core": [[243, "module-baybe.simulation.core", false]], "baybe.simulation.lookup": [[245, "module-baybe.simulation.lookup", false]], "baybe.simulation.scenarios": [[247, "module-baybe.simulation.scenarios", false]], "baybe.simulation.transfer_learning": [[249, "module-baybe.simulation.transfer_learning", false]], "baybe.surrogates": [[251, "module-baybe.surrogates", false]], "baybe.surrogates.bandit": [[252, "module-baybe.surrogates.bandit", false]], "baybe.surrogates.base": [[254, "module-baybe.surrogates.base", false]], "baybe.surrogates.composite": [[259, "module-baybe.surrogates.composite", false]], "baybe.surrogates.custom": [[261, "module-baybe.surrogates.custom", false]], "baybe.surrogates.gaussian_process": [[264, "module-baybe.surrogates.gaussian_process", false]], "baybe.surrogates.gaussian_process.core": [[265, "module-baybe.surrogates.gaussian_process.core", false]], "baybe.surrogates.gaussian_process.kernel_factory": [[267, "module-baybe.surrogates.gaussian_process.kernel_factory", false]], "baybe.surrogates.gaussian_process.presets": [[271, "module-baybe.surrogates.gaussian_process.presets", false]], "baybe.surrogates.gaussian_process.presets.core": [[272, "module-baybe.surrogates.gaussian_process.presets.core", false]], "baybe.surrogates.gaussian_process.presets.default": [[275, "module-baybe.surrogates.gaussian_process.presets.default", false]], "baybe.surrogates.gaussian_process.presets.edbo": [[277, "module-baybe.surrogates.gaussian_process.presets.edbo", false]], "baybe.surrogates.linear": [[279, "module-baybe.surrogates.linear", false]], "baybe.surrogates.naive": [[281, "module-baybe.surrogates.naive", false]], "baybe.surrogates.ngboost": [[283, "module-baybe.surrogates.ngboost", false]], "baybe.surrogates.random_forest": [[285, "module-baybe.surrogates.random_forest", false]], "baybe.surrogates.utils": [[287, "module-baybe.surrogates.utils", false]], "baybe.surrogates.validation": [[291, "module-baybe.surrogates.validation", false]], "baybe.targets": [[295, "module-baybe.targets", false]], "baybe.targets.base": [[296, "module-baybe.targets.base", false]], "baybe.targets.binary": [[298, "module-baybe.targets.binary", false]], "baybe.targets.enum": [[301, "module-baybe.targets.enum", false]], "baybe.targets.numerical": [[304, "module-baybe.targets.numerical", false]], "baybe.targets.transforms": [[306, "module-baybe.targets.transforms", false]], "baybe.telemetry": [[310, "module-baybe.telemetry", false]], "baybe.utils": [[315, "module-baybe.utils", false]], "baybe.utils.augmentation": [[316, "module-baybe.utils.augmentation", false]], "baybe.utils.basic": [[319, "module-baybe.utils.basic", false]], "baybe.utils.boolean": [[335, "module-baybe.utils.boolean", false]], "baybe.utils.chemistry": [[339, "module-baybe.utils.chemistry", false]], "baybe.utils.clustering_algorithms": [[344, "module-baybe.utils.clustering_algorithms", false]], "baybe.utils.clustering_algorithms.third_party": [[345, "module-baybe.utils.clustering_algorithms.third_party", false]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[346, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false]], "baybe.utils.conversion": [[348, "module-baybe.utils.conversion", false]], "baybe.utils.dataframe": [[352, "module-baybe.utils.dataframe", false]], "baybe.utils.interval": [[369, "module-baybe.utils.interval", false]], "baybe.utils.memory": [[374, "module-baybe.utils.memory", false]], "baybe.utils.numerical": [[376, "module-baybe.utils.numerical", false]], "baybe.utils.random": [[383, "module-baybe.utils.random", false]], "baybe.utils.sampling_algorithms": [[386, "module-baybe.utils.sampling_algorithms", false]], "baybe.utils.scaling": [[390, "module-baybe.utils.scaling", false]], "baybe.utils.torch": [[392, "module-baybe.utils.torch", false]], "baybe.utils.validation": [[395, "module-baybe.utils.validation", false]], "bayesianlinearsurrogate (class in baybe.surrogates.linear)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate", false]], "bayesianrecommender (class in baybe.recommenders.pure.bayesian.base)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender", false]], "bcut2d (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.BCUT2D", false]], "bell (baybe.targets.enum.targettransformation attribute)": [[303, "baybe.targets.enum.TargetTransformation.BELL", false]], "bell_transform() (in module baybe.targets.transforms)": [[307, "baybe.targets.transforms.bell_transform", false]], "beta (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.beta", false]], "beta (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.beta", false]], "beta (baybe.priors.basic.betaprior attribute)": [[169, "baybe.priors.basic.BetaPrior.beta", false]], "betabernoullimultiarmedbanditsurrogate (class in baybe.surrogates.bandit)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate", false]], "betaprior (class in baybe.priors.basic)": [[169, "baybe.priors.basic.BetaPrior", false]], "binarytarget (class in baybe.targets.binary)": [[299, "baybe.targets.binary.BinaryTarget", false]], "block_deserialization_hook() (in module baybe.serialization.core)": [[231, "baybe.serialization.core.block_deserialization_hook", false]], "block_serialization_hook() (in module baybe.serialization.core)": [[232, "baybe.serialization.core.block_serialization_hook", false]], "botorch_acqf (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.botorch_acqf", false]], "botorchrecommender (class in baybe.recommenders.pure.bayesian.botorch)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender", false]], "bounds (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.bounds", false]], "bounds (baybe.targets.numerical.numericaltarget attribute)": [[305, "baybe.targets.numerical.NumericalTarget.bounds", false]], "bytes_to_human_readable() (in module baybe.utils.memory)": [[375, "baybe.utils.memory.bytes_to_human_readable", false]], "campaign (class in baybe.campaign)": [[31, "baybe.campaign.Campaign", false]], "cardinalityconstraint (class in baybe.constraints.base)": [[34, "baybe.constraints.base.CardinalityConstraint", false]], "catch_constant_targets() (in module baybe.surrogates.utils)": [[290, "baybe.surrogates.utils.catch_constant_targets", false]], "categoricalencoding (class in baybe.parameters.enum)": [[146, "baybe.parameters.enum.CategoricalEncoding", false]], "categoricalparameter (class in baybe.parameters.categorical)": [[141, "baybe.parameters.categorical.CategoricalParameter", false]], "center (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.center", false]], "check_if_in() (in module baybe.utils.boolean)": [[336, "baybe.utils.boolean.check_if_in", false]], "choicevalue (in module baybe.targets.binary)": [[300, "baybe.targets.binary.ChoiceValue", false]], "classproperty (class in baybe.utils.basic)": [[323, "baybe.utils.basic.classproperty", false]], "closer_element() (in module baybe.utils.numerical)": [[380, "baybe.utils.numerical.closer_element", false]], "closest_element() (in module baybe.utils.numerical)": [[381, "baybe.utils.numerical.closest_element", false]], "coefficients (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.coefficients", false]], "columntransformer (class in baybe.utils.scaling)": [[391, "baybe.utils.scaling.ColumnTransformer", false]], "combiner (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.combiner", false]], "comp_df (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.comp_df", false]], "comp_df (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.comp_df", false]], "comp_df (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_df", false]], "comp_df (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.comp_df", false]], "comp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep", false]], "comp_rep_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.comp_rep_bounds", false]], "comp_rep_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_bounds", false]], "comp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.comp_rep_bytes", false]], "comp_rep_columns (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.comp_rep_columns", false]], "comp_rep_columns (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.comp_rep_columns", false]], "comp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[220, "baybe.searchspace.discrete.MemorySize.comp_rep_human_readable", false]], "comp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.comp_rep_shape", false]], "compatibility (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.base.purerecommender attribute)": [[191, "baybe.recommenders.pure.base.PureRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.base.bayesianrecommender attribute)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender attribute)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.compatibility", false]], "compatibility (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender attribute)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.compatibility", false]], "compositekernel (class in baybe.kernels.base)": [[105, "baybe.kernels.base.CompositeKernel", false]], "compositesurrogate (class in baybe.surrogates.composite)": [[260, "baybe.surrogates.composite.CompositeSurrogate", false]], "compute_ref_point() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement static method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "compute_ref_point() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement static method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point", false]], "concentration (baybe.priors.basic.gammaprior attribute)": [[170, "baybe.priors.basic.GammaPrior.concentration", false]], "condition (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.condition", false]], "condition (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.condition", false]], "condition (class in baybe.constraints.conditions)": [[40, "baybe.constraints.conditions.Condition", false]], "conditions (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.conditions", false]], "conditions (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.conditions", false]], "constraint (class in baybe.constraints.base)": [[35, "baybe.constraints.base.Constraint", false]], "constraints (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.constraints", false]], "constraints (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.constraints", false]], "constraints_augmentable (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.constraints_augmentable", false]], "constraints_cardinality (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_cardinality", false]], "constraints_lin_eq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_eq", false]], "constraints_lin_ineq (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_lin_ineq", false]], "constraints_nonlin (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.constraints_nonlin", false]], "cont_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.cont_recommender", false]], "contains() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.contains", false]], "continuous (baybe.searchspace.core.searchspace attribute)": [[215, "baybe.searchspace.core.SearchSpace.continuous", false]], "continuous (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.CONTINUOUS", false]], "continuouscardinalityconstraint (class in baybe.constraints.continuous)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint", false]], "continuousconstraint (class in baybe.constraints.base)": [[36, "baybe.constraints.base.ContinuousConstraint", false]], "continuouslinearconstraint (class in baybe.constraints.continuous)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint", false]], "continuouslinearequalityconstraint() (in module baybe.constraints.deprecation)": [[47, "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", false]], "continuouslinearinequalityconstraint() (in module baybe.constraints.deprecation)": [[48, "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", false]], "continuousnonlinearconstraint (class in baybe.constraints.base)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint", false]], "continuousparameter (class in baybe.parameters.base)": [[137, "baybe.parameters.base.ContinuousParameter", false]], "convert_acqf() (in module baybe.acquisition.utils)": [[28, "baybe.acquisition.utils.convert_acqf", false]], "convert_bounds() (in module baybe.utils.interval)": [[372, "baybe.utils.interval.convert_bounds", false]], "convert_to_float() (in module baybe.utils.basic)": [[324, "baybe.utils.basic.convert_to_float", false]], "converter (in module baybe.serialization.core)": [[233, "baybe.serialization.core.converter", false]], "create() (baybe.utils.interval.interval class method)": [[371, "baybe.utils.interval.Interval.create", false]], "create_fake_input() (in module baybe.utils.dataframe)": [[357, "baybe.utils.dataframe.create_fake_input", false]], "custom (baybe.parameters.enum.customencoding attribute)": [[147, "baybe.parameters.enum.CustomEncoding.CUSTOM", false]], "customdiscreteparameter (class in baybe.parameters.custom)": [[144, "baybe.parameters.custom.CustomDiscreteParameter", false]], "customencoding (class in baybe.parameters.enum)": [[147, "baybe.parameters.enum.CustomEncoding", false]], "customonnxsurrogate (class in baybe.surrogates.custom)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate", false]], "data (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.data", false]], "data (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.data", false]], "decorrelate (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.decorrelate", false]], "decorrelate (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.decorrelate", false]], "defaultkernelfactory (class in baybe.surrogates.gaussian_process.presets.default)": [[276, "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory", false]], "dependencies (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.dependencies", false]], "deprecationerror": [[67, "baybe.exceptions.DeprecationError", false]], "deserialize_dataframe() (in module baybe.serialization.utils)": [[240, "baybe.serialization.utils.deserialize_dataframe", false]], "desirabilityobjective (class in baybe.objectives.desirability)": [[125, "baybe.objectives.desirability.DesirabilityObjective", false]], "df_apply_dependency_augmentation() (in module baybe.utils.augmentation)": [[317, "baybe.utils.augmentation.df_apply_dependency_augmentation", false]], "df_apply_permutation_augmentation() (in module baybe.utils.augmentation)": [[318, "baybe.utils.augmentation.df_apply_permutation_augmentation", false]], "df_drop_single_value_columns() (in module baybe.utils.dataframe)": [[358, "baybe.utils.dataframe.df_drop_single_value_columns", false]], "df_drop_string_columns() (in module baybe.utils.dataframe)": [[359, "baybe.utils.dataframe.df_drop_string_columns", false]], "df_uncorrelated_features() (in module baybe.utils.dataframe)": [[360, "baybe.utils.dataframe.df_uncorrelated_features", false]], "disc_recommender (baybe.recommenders.naive.naivehybridspacerecommender attribute)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.disc_recommender", false]], "discrete (baybe.searchspace.core.searchspace attribute)": [[215, "baybe.searchspace.core.SearchSpace.discrete", false]], "discrete (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.DISCRETE", false]], "discretecardinalityconstraint (class in baybe.constraints.discrete)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint", false]], "discreteconstraint (class in baybe.constraints.base)": [[38, "baybe.constraints.base.DiscreteConstraint", false]], "discretecustomconstraint (class in baybe.constraints.discrete)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint", false]], "discretedependenciesconstraint (class in baybe.constraints.discrete)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint", false]], "discreteexcludeconstraint (class in baybe.constraints.discrete)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint", false]], "discretelinkedparametersconstraint (class in baybe.constraints.discrete)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint", false]], "discretenolabelduplicatesconstraint (class in baybe.constraints.discrete)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint", false]], "discreteparameter (class in baybe.parameters.base)": [[138, "baybe.parameters.base.DiscreteParameter", false]], "discretepermutationinvarianceconstraint (class in baybe.constraints.discrete)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint", false]], "discreteproductconstraint (class in baybe.constraints.discrete)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint", false]], "discretesamplingmethod (class in baybe.utils.sampling_algorithms)": [[387, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod", false]], "discretesumconstraint (class in baybe.constraints.discrete)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint", false]], "dtypefloatnumpy (in module baybe.utils.numerical)": [[377, "baybe.utils.numerical.DTypeFloatNumpy", false]], "dtypefloatonnx (in module baybe.utils.numerical)": [[378, "baybe.utils.numerical.DTypeFloatONNX", false]], "dtypefloattorch (in module baybe.utils.torch)": [[393, "baybe.utils.torch.DTypeFloatTorch", false]], "dummy (class in baybe.utils.basic)": [[320, "baybe.utils.basic.Dummy", false]], "e3fp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.E3FP", false]], "ecfp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ECFP", false]], "edbokernelfactory (class in baybe.surrogates.gaussian_process.presets.edbo)": [[278, "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory", false]], "either (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.EITHER", false]], "electroshape (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ELECTROSHAPE", false]], "empty() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.empty", false]], "empty() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.empty", false]], "empty_encoding (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.empty_encoding", false]], "emptysearchspaceerror": [[68, "baybe.exceptions.EmptySearchSpaceError", false]], "encoding (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.encoding", false]], "encoding (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.encoding", false]], "encoding (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.encoding", false]], "encoding (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.encoding", false]], "encoding (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.encoding", false]], "encoding (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.encoding", false]], "erg (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ERG", false]], "estate (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.ESTATE", false]], "estimate_product_space_size() (baybe.searchspace.core.searchspace static method)": [[215, "baybe.searchspace.core.SearchSpace.estimate_product_space_size", false]], "estimate_product_space_size() (baybe.searchspace.discrete.subspacediscrete static method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size", false]], "eval_during_augmentation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_augmentation", false]], "eval_during_augmentation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_augmentation", false]], "eval_during_creation (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_creation", false]], "eval_during_creation (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_creation", false]], "eval_during_modeling (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.eval_during_modeling", false]], "eval_during_modeling (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.eval_during_modeling", false]], "evaluate() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate", false]], "evaluate() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.evaluate", false]], "evaluate() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.evaluate", false]], "evaluate() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.evaluate", false]], "evaluate() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.evaluate", false]], "exp_rep (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.exp_rep", false]], "exp_rep_bytes (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.exp_rep_bytes", false]], "exp_rep_human_readable (baybe.searchspace.discrete.memorysize property)": [[220, "baybe.searchspace.discrete.MemorySize.exp_rep_human_readable", false]], "exp_rep_shape (baybe.searchspace.discrete.memorysize attribute)": [[220, "baybe.searchspace.discrete.MemorySize.exp_rep_shape", false]], "expectedimprovement (class in baybe.acquisition.acqfs)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement", false]], "explain() (baybe.insights.shap.shapinsight method)": [[97, "baybe.insights.shap.SHAPInsight.explain", false]], "explain_target() (baybe.insights.shap.shapinsight method)": [[97, "baybe.insights.shap.SHAPInsight.explain_target", false]], "explainers (baybe.insights.shap.shapinsight attribute)": [[97, "baybe.insights.shap.SHAPInsight.explainers", false]], "explainers (in module baybe.insights.shap)": [[95, "baybe.insights.shap.EXPLAINERS", false]], "failure_value (baybe.targets.binary.binarytarget attribute)": [[299, "baybe.targets.binary.BinaryTarget.failure_value", false]], "farthest (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.FARTHEST", false]], "farthest_point_sampling() (in module baybe.utils.sampling_algorithms)": [[388, "baybe.utils.sampling_algorithms.farthest_point_sampling", false]], "filter_df() (in module baybe.utils.dataframe)": [[361, "baybe.utils.dataframe.filter_df", false]], "find_subclass() (in module baybe.utils.basic)": [[325, "baybe.utils.basic.find_subclass", false]], "finite_float() (in module baybe.utils.validation)": [[396, "baybe.utils.validation.finite_float", false]], "fit() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit", false]], "fit() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.fit", false]], "fit() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.fit", false]], "fit() (baybe.surrogates.base.surrogateprotocol method)": [[258, "baybe.surrogates.base.SurrogateProtocol.fit", false]], "fit() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.fit", false]], "fit() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.fit", false]], "fit() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit", false]], "fit() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.fit", false]], "fit() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.fit", false]], "fit() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.fit", false]], "fit() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.fit", false]], "fit() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit", false]], "fit() (baybe.utils.scaling.columntransformer method)": [[391, "baybe.utils.scaling.ColumnTransformer.fit", false]], "fit_predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict", false]], "fit_transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform", false]], "fps (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[387, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.FPS", false]], "fpsinitialization (class in baybe.recommenders.pure.nonpredictive.sampling)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization", false]], "fpsrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender", false]], "fraction_to_float() (in module baybe.utils.conversion)": [[349, "baybe.utils.conversion.fraction_to_float", false]], "from_bounds() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_bounds", false]], "from_campaign() (baybe.insights.shap.shapinsight class method)": [[97, "baybe.insights.shap.SHAPInsight.from_campaign", false]], "from_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_config", false]], "from_dataframe() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe", false]], "from_dataframe() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_dataframe", false]], "from_dataframe() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe", false]], "from_dict() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict", false]], "from_dict() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_dict", false]], "from_dict() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_dict", false]], "from_dict() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_dict", false]], "from_dict() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_dict", false]], "from_dict() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_dict", false]], "from_dict() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_dict", false]], "from_dict() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_dict", false]], "from_dict() (baybe.kernels.base.basickernel class method)": [[104, "baybe.kernels.base.BasicKernel.from_dict", false]], "from_dict() (baybe.kernels.base.compositekernel class method)": [[105, "baybe.kernels.base.CompositeKernel.from_dict", false]], "from_dict() (baybe.kernels.base.kernel class method)": [[106, "baybe.kernels.base.Kernel.from_dict", false]], "from_dict() (baybe.kernels.basic.linearkernel class method)": [[108, "baybe.kernels.basic.LinearKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.maternkernel class method)": [[109, "baybe.kernels.basic.MaternKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.periodickernel class method)": [[110, "baybe.kernels.basic.PeriodicKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.polynomialkernel class method)": [[112, "baybe.kernels.basic.PolynomialKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rbfkernel class method)": [[113, "baybe.kernels.basic.RBFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rffkernel class method)": [[114, "baybe.kernels.basic.RFFKernel.from_dict", false]], "from_dict() (baybe.kernels.basic.rqkernel class method)": [[115, "baybe.kernels.basic.RQKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.additivekernel class method)": [[117, "baybe.kernels.composite.AdditiveKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.productkernel class method)": [[118, "baybe.kernels.composite.ProductKernel.from_dict", false]], "from_dict() (baybe.kernels.composite.scalekernel class method)": [[119, "baybe.kernels.composite.ScaleKernel.from_dict", false]], "from_dict() (baybe.objectives.base.objective class method)": [[122, "baybe.objectives.base.Objective.from_dict", false]], "from_dict() (baybe.objectives.desirability.desirabilityobjective class method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.from_dict", false]], "from_dict() (baybe.objectives.pareto.paretoobjective class method)": [[130, "baybe.objectives.pareto.ParetoObjective.from_dict", false]], "from_dict() (baybe.objectives.single.singletargetobjective class method)": [[132, "baybe.objectives.single.SingleTargetObjective.from_dict", false]], "from_dict() (baybe.parameters.base.continuousparameter class method)": [[137, "baybe.parameters.base.ContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.base.discreteparameter class method)": [[138, "baybe.parameters.base.DiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.base.parameter class method)": [[139, "baybe.parameters.base.Parameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.categoricalparameter class method)": [[141, "baybe.parameters.categorical.CategoricalParameter.from_dict", false]], "from_dict() (baybe.parameters.categorical.taskparameter class method)": [[142, "baybe.parameters.categorical.TaskParameter.from_dict", false]], "from_dict() (baybe.parameters.custom.customdiscreteparameter class method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.from_dict", false]], "from_dict() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict", false]], "from_dict() (baybe.parameters.substance.substanceparameter class method)": [[155, "baybe.parameters.substance.SubstanceParameter.from_dict", false]], "from_dict() (baybe.priors.base.prior class method)": [[167, "baybe.priors.base.Prior.from_dict", false]], "from_dict() (baybe.priors.basic.betaprior class method)": [[169, "baybe.priors.basic.BetaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.gammaprior class method)": [[170, "baybe.priors.basic.GammaPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfcauchyprior class method)": [[171, "baybe.priors.basic.HalfCauchyPrior.from_dict", false]], "from_dict() (baybe.priors.basic.halfnormalprior class method)": [[172, "baybe.priors.basic.HalfNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.lognormalprior class method)": [[173, "baybe.priors.basic.LogNormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.normalprior class method)": [[174, "baybe.priors.basic.NormalPrior.from_dict", false]], "from_dict() (baybe.priors.basic.smoothedboxprior class method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.from_dict", false]], "from_dict() (baybe.recommenders.meta.base.metarecommender class method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict", false]], "from_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict", false]], "from_dict() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_dict", false]], "from_dict() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_dict", false]], "from_dict() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_dict", false]], "from_dict() (baybe.serialization.mixin.serialmixin class method)": [[238, "baybe.serialization.mixin.SerialMixin.from_dict", false]], "from_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.base.surrogate class method)": [[257, "baybe.surrogates.base.Surrogate.from_dict", false]], "from_dict() (baybe.surrogates.composite.compositesurrogate class method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.custom.customonnxsurrogate class method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict", false]], "from_dict() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict", false]], "from_dict() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict", false]], "from_dict() (baybe.targets.base.target class method)": [[297, "baybe.targets.base.Target.from_dict", false]], "from_dict() (baybe.targets.binary.binarytarget class method)": [[299, "baybe.targets.binary.BinaryTarget.from_dict", false]], "from_dict() (baybe.targets.numerical.numericaltarget class method)": [[305, "baybe.targets.numerical.NumericalTarget.from_dict", false]], "from_dict() (baybe.utils.interval.interval class method)": [[371, "baybe.utils.interval.Interval.from_dict", false]], "from_json() (baybe.acquisition.acqfs.expectedimprovement class method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.logexpectedimprovement class method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriormean class method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.from_json", false]], "from_json() (baybe.acquisition.acqfs.posteriorstandarddeviation class method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.probabilityofimprovement class method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qexpectedimprovement class method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qknowledgegradient class method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlogexpectedimprovement class method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement class method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement class method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qlognparego class method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance class method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement class method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement class method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation class method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json", false]], "from_json() (baybe.acquisition.acqfs.qprobabilityofimprovement class method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json", false]], "from_json() (baybe.acquisition.acqfs.qsimpleregret class method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.from_json", false]], "from_json() (baybe.acquisition.acqfs.qthompsonsampling class method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.from_json", false]], "from_json() (baybe.acquisition.acqfs.qupperconfidencebound class method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.acqfs.upperconfidencebound class method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.from_json", false]], "from_json() (baybe.acquisition.base.acquisitionfunction class method)": [[24, "baybe.acquisition.base.AcquisitionFunction.from_json", false]], "from_json() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.from_json", false]], "from_json() (baybe.constraints.base.cardinalityconstraint class method)": [[34, "baybe.constraints.base.CardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.base.constraint class method)": [[35, "baybe.constraints.base.Constraint.from_json", false]], "from_json() (baybe.constraints.base.continuousconstraint class method)": [[36, "baybe.constraints.base.ContinuousConstraint.from_json", false]], "from_json() (baybe.constraints.base.continuousnonlinearconstraint class method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.from_json", false]], "from_json() (baybe.constraints.base.discreteconstraint class method)": [[38, "baybe.constraints.base.DiscreteConstraint.from_json", false]], "from_json() (baybe.constraints.conditions.condition class method)": [[40, "baybe.constraints.conditions.Condition.from_json", false]], "from_json() (baybe.constraints.conditions.subselectioncondition class method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.from_json", false]], "from_json() (baybe.constraints.conditions.thresholdcondition class method)": [[42, "baybe.constraints.conditions.ThresholdCondition.from_json", false]], "from_json() (baybe.constraints.continuous.continuouscardinalityconstraint class method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.continuous.continuouslinearconstraint class method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecardinalityconstraint class method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretecustomconstraint class method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretedependenciesconstraint class method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteexcludeconstraint class method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretelinkedparametersconstraint class method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint class method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint class method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discreteproductconstraint class method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.from_json", false]], "from_json() (baybe.constraints.discrete.discretesumconstraint class method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.from_json", false]], "from_json() (baybe.kernels.base.basickernel class method)": [[104, "baybe.kernels.base.BasicKernel.from_json", false]], "from_json() (baybe.kernels.base.compositekernel class method)": [[105, "baybe.kernels.base.CompositeKernel.from_json", false]], "from_json() (baybe.kernels.base.kernel class method)": [[106, "baybe.kernels.base.Kernel.from_json", false]], "from_json() (baybe.kernels.basic.linearkernel class method)": [[108, "baybe.kernels.basic.LinearKernel.from_json", false]], "from_json() (baybe.kernels.basic.maternkernel class method)": [[109, "baybe.kernels.basic.MaternKernel.from_json", false]], "from_json() (baybe.kernels.basic.periodickernel class method)": [[110, "baybe.kernels.basic.PeriodicKernel.from_json", false]], "from_json() (baybe.kernels.basic.piecewisepolynomialkernel class method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.polynomialkernel class method)": [[112, "baybe.kernels.basic.PolynomialKernel.from_json", false]], "from_json() (baybe.kernels.basic.rbfkernel class method)": [[113, "baybe.kernels.basic.RBFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rffkernel class method)": [[114, "baybe.kernels.basic.RFFKernel.from_json", false]], "from_json() (baybe.kernels.basic.rqkernel class method)": [[115, "baybe.kernels.basic.RQKernel.from_json", false]], "from_json() (baybe.kernels.composite.additivekernel class method)": [[117, "baybe.kernels.composite.AdditiveKernel.from_json", false]], "from_json() (baybe.kernels.composite.productkernel class method)": [[118, "baybe.kernels.composite.ProductKernel.from_json", false]], "from_json() (baybe.kernels.composite.scalekernel class method)": [[119, "baybe.kernels.composite.ScaleKernel.from_json", false]], "from_json() (baybe.objectives.base.objective class method)": [[122, "baybe.objectives.base.Objective.from_json", false]], "from_json() (baybe.objectives.desirability.desirabilityobjective class method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.from_json", false]], "from_json() (baybe.objectives.pareto.paretoobjective class method)": [[130, "baybe.objectives.pareto.ParetoObjective.from_json", false]], "from_json() (baybe.objectives.single.singletargetobjective class method)": [[132, "baybe.objectives.single.SingleTargetObjective.from_json", false]], "from_json() (baybe.parameters.base.continuousparameter class method)": [[137, "baybe.parameters.base.ContinuousParameter.from_json", false]], "from_json() (baybe.parameters.base.discreteparameter class method)": [[138, "baybe.parameters.base.DiscreteParameter.from_json", false]], "from_json() (baybe.parameters.base.parameter class method)": [[139, "baybe.parameters.base.Parameter.from_json", false]], "from_json() (baybe.parameters.categorical.categoricalparameter class method)": [[141, "baybe.parameters.categorical.CategoricalParameter.from_json", false]], "from_json() (baybe.parameters.categorical.taskparameter class method)": [[142, "baybe.parameters.categorical.TaskParameter.from_json", false]], "from_json() (baybe.parameters.custom.customdiscreteparameter class method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericalcontinuousparameter class method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.from_json", false]], "from_json() (baybe.parameters.numerical.numericaldiscreteparameter class method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.from_json", false]], "from_json() (baybe.parameters.substance.substanceparameter class method)": [[155, "baybe.parameters.substance.SubstanceParameter.from_json", false]], "from_json() (baybe.priors.base.prior class method)": [[167, "baybe.priors.base.Prior.from_json", false]], "from_json() (baybe.priors.basic.betaprior class method)": [[169, "baybe.priors.basic.BetaPrior.from_json", false]], "from_json() (baybe.priors.basic.gammaprior class method)": [[170, "baybe.priors.basic.GammaPrior.from_json", false]], "from_json() (baybe.priors.basic.halfcauchyprior class method)": [[171, "baybe.priors.basic.HalfCauchyPrior.from_json", false]], "from_json() (baybe.priors.basic.halfnormalprior class method)": [[172, "baybe.priors.basic.HalfNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.lognormalprior class method)": [[173, "baybe.priors.basic.LogNormalPrior.from_json", false]], "from_json() (baybe.priors.basic.normalprior class method)": [[174, "baybe.priors.basic.NormalPrior.from_json", false]], "from_json() (baybe.priors.basic.smoothedboxprior class method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.from_json", false]], "from_json() (baybe.recommenders.meta.base.metarecommender class method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender class method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender class method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender class method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json", false]], "from_json() (baybe.recommenders.meta.sequential.twophasemetarecommender class method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json", false]], "from_json() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_json", false]], "from_json() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_json", false]], "from_json() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_json", false]], "from_json() (baybe.serialization.mixin.serialmixin class method)": [[238, "baybe.serialization.mixin.SerialMixin.from_json", false]], "from_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate class method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.independentgaussiansurrogate class method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.from_json", false]], "from_json() (baybe.surrogates.base.surrogate class method)": [[257, "baybe.surrogates.base.Surrogate.from_json", false]], "from_json() (baybe.surrogates.composite.compositesurrogate class method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.from_json", false]], "from_json() (baybe.surrogates.custom.customonnxsurrogate class method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate class method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json", false]], "from_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory class method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json", false]], "from_json() (baybe.surrogates.linear.bayesianlinearsurrogate class method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.from_json", false]], "from_json() (baybe.surrogates.naive.meanpredictionsurrogate class method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.from_json", false]], "from_json() (baybe.surrogates.ngboost.ngboostsurrogate class method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.from_json", false]], "from_json() (baybe.surrogates.random_forest.randomforestsurrogate class method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.from_json", false]], "from_json() (baybe.targets.base.target class method)": [[297, "baybe.targets.base.Target.from_json", false]], "from_json() (baybe.targets.binary.binarytarget class method)": [[299, "baybe.targets.binary.BinaryTarget.from_json", false]], "from_json() (baybe.targets.numerical.numericaltarget class method)": [[305, "baybe.targets.numerical.NumericalTarget.from_json", false]], "from_json() (baybe.utils.interval.interval class method)": [[371, "baybe.utils.interval.Interval.from_json", false]], "from_parameter() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_parameter", false]], "from_parameter() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_parameter", false]], "from_parameter() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter", false]], "from_preset() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate static method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_preset", false]], "from_product() (baybe.searchspace.continuous.subspacecontinuous class method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.from_product", false]], "from_product() (baybe.searchspace.core.searchspace class method)": [[215, "baybe.searchspace.core.SearchSpace.from_product", false]], "from_product() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_product", false]], "from_recommender() (baybe.insights.shap.shapinsight class method)": [[97, "baybe.insights.shap.SHAPInsight.from_recommender", false]], "from_replication() (baybe.surrogates.composite.compositesurrogate class method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.from_replication", false]], "from_simplex() (baybe.searchspace.discrete.subspacediscrete class method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex", false]], "from_surrogate() (baybe.insights.shap.shapinsight class method)": [[97, "baybe.insights.shap.SHAPInsight.from_surrogate", false]], "full_factorial (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.full_factorial", false]], "functionalgroups (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.FUNCTIONALGROUPS", false]], "fuzzy_row_match() (in module baybe.utils.dataframe)": [[362, "baybe.utils.dataframe.fuzzy_row_match", false]], "gammaprior (class in baybe.priors.basic)": [[170, "baybe.priors.basic.GammaPrior", false]], "gaussianmixtureclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender", false]], "gaussianprocesspreset (class in baybe.surrogates.gaussian_process.presets.core)": [[273, "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset", false]], "gaussianprocesssurrogate (class in baybe.surrogates.gaussian_process.core)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate", false]], "geom_mean (baybe.objectives.enum.scalarizer attribute)": [[128, "baybe.objectives.enum.Scalarizer.GEOM_MEAN", false]], "geom_mean() (in module baybe.utils.numerical)": [[382, "baybe.utils.numerical.geom_mean", false]], "get_absolute_thresholds() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds", false]], "get_acquisition_function() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_acquisition_function", false]], "get_acquisition_function() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_acquisition_function", false]], "get_base_structure_hook() (in module baybe.serialization.core)": [[234, "baybe.serialization.core.get_base_structure_hook", false]], "get_baseclasses() (in module baybe.utils.basic)": [[326, "baybe.utils.basic.get_baseclasses", false]], "get_candidates() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.get_candidates", false]], "get_canonical_smiles() (in module baybe.utils.chemistry)": [[340, "baybe.utils.chemistry.get_canonical_smiles", false]], "get_comp_rep_parameter_indices() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices", false]], "get_current_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_current_recommender", false]], "get_current_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_current_recommender", false]], "get_fingerprint_class() (in module baybe.utils.chemistry)": [[341, "baybe.utils.chemistry.get_fingerprint_class", false]], "get_integration_points() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points", false]], "get_invalid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid", false]], "get_invalid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid", false]], "get_invalid_polars() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid_polars", false]], "get_invalid_polars() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid_polars", false]], "get_metadata_routing() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_metadata_routing", false]], "get_next_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_next_recommender", false]], "get_next_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_next_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.get_non_meta_recommender", false]], "get_non_meta_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.get_non_meta_recommender", false]], "get_parameters_by_name() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.get_parameters_by_name", false]], "get_parameters_by_name() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name", false]], "get_parameters_from_dataframe() (in module baybe.parameters.utils)": [[158, "baybe.parameters.utils.get_parameters_from_dataframe", false]], "get_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params", false]], "get_subclasses() (in module baybe.utils.basic)": [[327, "baybe.utils.basic.get_subclasses", false]], "get_surrogate() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.get_surrogate", false]], "get_surrogate() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.get_surrogate", false]], "get_transform_objects() (in module baybe.utils.dataframe)": [[363, "baybe.utils.dataframe.get_transform_objects", false]], "get_transform_parameters() (in module baybe.searchspace.validation)": [[226, "baybe.searchspace.validation.get_transform_parameters", false]], "get_user_details() (in module baybe.telemetry)": [[311, "baybe.telemetry.get_user_details", false]], "get_valid() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.get_valid", false]], "get_valid() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.get_valid", false]], "getaway (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.GETAWAY", false]], "ghosecrippen (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.GHOSECRIPPEN", false]], "group_duplicate_values() (in module baybe.utils.basic)": [[328, "baybe.utils.basic.group_duplicate_values", false]], "halfcauchyprior (class in baybe.priors.basic)": [[171, "baybe.priors.basic.HalfCauchyPrior", false]], "halfnormalprior (class in baybe.priors.basic)": [[172, "baybe.priors.basic.HalfNormalPrior", false]], "handle_missing_values() (in module baybe.utils.dataframe)": [[364, "baybe.utils.dataframe.handle_missing_values", false]], "hilberts_factory() (in module baybe.utils.basic)": [[329, "baybe.utils.basic.hilberts_factory", false]], "hybrid (baybe.searchspace.core.searchspacetype attribute)": [[216, "baybe.searchspace.core.SearchSpaceType.HYBRID", false]], "hybrid_sampler (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.hybrid_sampler", false]], "inactive_parameter_combinations() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.inactive_parameter_combinations", false]], "inactive_parameter_combinations() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.inactive_parameter_combinations", false]], "incompatibilityerror": [[69, "baybe.exceptions.IncompatibilityError", false]], "incompatibleacquisitionfunctionerror": [[70, "baybe.exceptions.IncompatibleAcquisitionFunctionError", false]], "incompatibleargumenterror": [[71, "baybe.exceptions.IncompatibleArgumentError", false]], "incompatibleexplainererror": [[72, "baybe.exceptions.IncompatibleExplainerError", false]], "incompatiblesearchspaceerror": [[73, "baybe.exceptions.IncompatibleSearchSpaceError", false]], "incompatiblesurrogateerror": [[74, "baybe.exceptions.IncompatibleSurrogateError", false]], "incompletemeasurementserror": [[75, "baybe.exceptions.IncompleteMeasurementsError", false]], "independentgaussiansurrogate (class in baybe.surrogates.base)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate", false]], "infeasibilityerror": [[76, "baybe.exceptions.InfeasibilityError", false]], "infiniteintervalerror": [[370, "baybe.utils.interval.InfiniteIntervalError", false]], "initial_recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.initial_recommender", false]], "initialization (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.initialization", false]], "inputdatatypewarning": [[77, "baybe.exceptions.InputDataTypeWarning", false]], "int (baybe.parameters.enum.categoricalencoding attribute)": [[146, "baybe.parameters.enum.CategoricalEncoding.INT", false]], "interval (class in baybe.utils.interval)": [[371, "baybe.utils.interval.Interval", false]], "invalidsurrogatemodelerror": [[78, "baybe.exceptions.InvalidSurrogateModelError", false]], "invalidtargetvalueerror": [[79, "baybe.exceptions.InvalidTargetValueError", false]], "is_abstract() (in module baybe.utils.boolean)": [[337, "baybe.utils.boolean.is_abstract", false]], "is_all_instance() (in module baybe.utils.basic)": [[330, "baybe.utils.basic.is_all_instance", false]], "is_bounded (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.is_bounded", false]], "is_cardinality_fulfilled() (in module baybe.constraints.utils)": [[61, "baybe.constraints.utils.is_cardinality_fulfilled", false]], "is_continuous (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_continuous", false]], "is_continuous (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_continuous", false]], "is_continuous (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_continuous", false]], "is_continuous (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.is_continuous", false]], "is_continuous (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_continuous", false]], "is_continuous (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_continuous", false]], "is_continuous (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.is_continuous", false]], "is_degenerate (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.is_degenerate", false]], "is_discrete (baybe.constraints.base.cardinalityconstraint property)": [[34, "baybe.constraints.base.CardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.constraint property)": [[35, "baybe.constraints.base.Constraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousconstraint property)": [[36, "baybe.constraints.base.ContinuousConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.continuousnonlinearconstraint property)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.base.discreteconstraint property)": [[38, "baybe.constraints.base.DiscreteConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecardinalityconstraint property)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretecustomconstraint property)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretedependenciesconstraint property)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteexcludeconstraint property)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretelinkedparametersconstraint property)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretenolabelduplicatesconstraint property)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretepermutationinvarianceconstraint property)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discreteproductconstraint property)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.is_discrete", false]], "is_discrete (baybe.constraints.discrete.discretesumconstraint property)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.is_discrete", false]], "is_discrete (baybe.parameters.base.continuousparameter property)": [[137, "baybe.parameters.base.ContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.base.parameter property)": [[139, "baybe.parameters.base.Parameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_discrete", false]], "is_discrete (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.is_discrete", false]], "is_discrete (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericalcontinuousparameter property)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_discrete", false]], "is_discrete (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_discrete", false]], "is_discrete (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.is_discrete", false]], "is_empty (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.is_empty", false]], "is_empty (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.is_empty", false]], "is_enabled() (in module baybe.telemetry)": [[312, "baybe.telemetry.is_enabled", false]], "is_eq (baybe.constraints.continuous.continuouslinearconstraint property)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.is_eq", false]], "is_fully_unbounded (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.is_fully_unbounded", false]], "is_half_bounded (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.is_half_bounded", false]], "is_in_range() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_in_range", false]], "is_in_range() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.is_in_range", false]], "is_in_range() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range", false]], "is_in_range() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range", false]], "is_in_range() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.is_in_range", false]], "is_inactive() (in module baybe.parameters.utils)": [[159, "baybe.parameters.utils.is_inactive", false]], "is_left_bounded (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.is_left_bounded", false]], "is_multi_output (baybe.objectives.base.objective attribute)": [[122, "baybe.objectives.base.Objective.is_multi_output", false]], "is_multi_output (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.pareto.paretoobjective attribute)": [[130, "baybe.objectives.pareto.ParetoObjective.is_multi_output", false]], "is_multi_output (baybe.objectives.single.singletargetobjective attribute)": [[132, "baybe.objectives.single.SingleTargetObjective.is_multi_output", false]], "is_numerical (baybe.parameters.base.continuousparameter attribute)": [[137, "baybe.parameters.base.ContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.base.parameter attribute)": [[139, "baybe.parameters.base.Parameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.is_numerical", false]], "is_numerical (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.is_numerical", false]], "is_numerical (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.is_numerical", false]], "is_numerical (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.is_numerical", false]], "is_numerical (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.is_numerical", false]], "is_right_bounded (baybe.utils.interval.interval property)": [[371, "baybe.utils.interval.Interval.is_right_bounded", false]], "is_shap_explainer() (in module baybe.insights.shap)": [[100, "baybe.insights.shap.is_shap_explainer", false]], "is_stateful (baybe.recommenders.meta.base.metarecommender property)": [[181, "baybe.recommenders.meta.base.MetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.basesequentialmetarecommender property)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.sequentialmetarecommender property)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender property)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.is_stateful", false]], "is_stateful (baybe.recommenders.meta.sequential.twophasemetarecommender property)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.is_stateful", false]], "joint_acquisition_value() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.joint_acquisition_value", false]], "joint_acquisition_value() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.joint_acquisition_value", false]], "kernel (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory attribute)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.kernel", false]], "kernel (class in baybe.kernels.base)": [[106, "baybe.kernels.base.Kernel", false]], "kernel_factory (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.kernel_factory", false]], "kernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[268, "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory", false]], "klekotaroth (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.KLEKOTAROTH", false]], "kmeansclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender", false]], "kmedoids (class in baybe.utils.clustering_algorithms.third_party.kmedoids)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids", false]], "kwargs_conformer (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.kwargs_conformer", false]], "kwargs_fingerprint (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.kwargs_fingerprint", false]], "laggner (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.LAGGNER", false]], "layered (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.LAYERED", false]], "lengthscale_initial_value (baybe.kernels.basic.maternkernel attribute)": [[109, "baybe.kernels.basic.MaternKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.periodickernel attribute)": [[110, "baybe.kernels.basic.PeriodicKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rbfkernel attribute)": [[113, "baybe.kernels.basic.RBFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rffkernel attribute)": [[114, "baybe.kernels.basic.RFFKernel.lengthscale_initial_value", false]], "lengthscale_initial_value (baybe.kernels.basic.rqkernel attribute)": [[115, "baybe.kernels.basic.RQKernel.lengthscale_initial_value", false]], "lengthscale_prior (baybe.kernels.basic.maternkernel attribute)": [[109, "baybe.kernels.basic.MaternKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.periodickernel attribute)": [[110, "baybe.kernels.basic.PeriodicKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rbfkernel attribute)": [[113, "baybe.kernels.basic.RBFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rffkernel attribute)": [[114, "baybe.kernels.basic.RFFKernel.lengthscale_prior", false]], "lengthscale_prior (baybe.kernels.basic.rqkernel attribute)": [[115, "baybe.kernels.basic.RQKernel.lengthscale_prior", false]], "linear (baybe.targets.enum.targettransformation attribute)": [[303, "baybe.targets.enum.TargetTransformation.LINEAR", false]], "linear_transform() (in module baybe.targets.transforms)": [[308, "baybe.targets.transforms.linear_transform", false]], "linearkernel (class in baybe.kernels.basic)": [[108, "baybe.kernels.basic.LinearKernel", false]], "lingo (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.LINGO", false]], "loc (baybe.priors.basic.lognormalprior attribute)": [[173, "baybe.priors.basic.LogNormalPrior.loc", false]], "loc (baybe.priors.basic.normalprior attribute)": [[174, "baybe.priors.basic.NormalPrior.loc", false]], "logexpectedimprovement (class in baybe.acquisition.acqfs)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement", false]], "lognormalprior (class in baybe.priors.basic)": [[173, "baybe.priors.basic.LogNormalPrior", false]], "look_up_targets() (in module baybe.simulation.lookup)": [[246, "baybe.simulation.lookup.look_up_targets", false]], "lower (baybe.utils.interval.interval attribute)": [[371, "baybe.utils.interval.Interval.lower", false]], "maccs (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MACCS", false]], "make_dict_validator() (in module baybe.surrogates.validation)": [[292, "baybe.surrogates.validation.make_dict_validator", false]], "make_explainer_for_surrogate() (in module baybe.insights.shap)": [[101, "baybe.insights.shap.make_explainer_for_surrogate", false]], "make_gp_from_preset() (in module baybe.surrogates.gaussian_process.presets.core)": [[274, "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", false]], "map (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MAP", false]], "mapping (baybe.utils.scaling.columntransformer attribute)": [[391, "baybe.utils.scaling.ColumnTransformer.mapping", false]], "match (baybe.targets.enum.targetmode attribute)": [[302, "baybe.targets.enum.TargetMode.MATCH", false]], "match_attributes() (in module baybe.utils.basic)": [[331, "baybe.utils.basic.match_attributes", false]], "maternkernel (class in baybe.kernels.basic)": [[109, "baybe.kernels.basic.MaternKernel", false]], "max (baybe.targets.enum.targetmode attribute)": [[302, "baybe.targets.enum.TargetMode.MAX", false]], "max_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.max_cardinality", false]], "max_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.max_cardinality", false]], "max_n_subspaces (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.max_n_subspaces", false]], "maximize (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.maximize", false]], "mean (baybe.objectives.enum.scalarizer attribute)": [[128, "baybe.objectives.enum.Scalarizer.MEAN", false]], "meanpredictionsurrogate (class in baybe.surrogates.naive)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate", false]], "measurements (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.measurements", false]], "memorysize (class in baybe.searchspace.discrete)": [[220, "baybe.searchspace.discrete.MemorySize", false]], "metadata (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.metadata", false]], "metarecommender (class in baybe.recommenders.meta.base)": [[181, "baybe.recommenders.meta.base.MetaRecommender", false]], "mhfp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MHFP", false]], "min (baybe.targets.enum.targetmode attribute)": [[302, "baybe.targets.enum.TargetMode.MIN", false]], "min_cardinality (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.min_cardinality", false]], "min_cardinality (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.min_cardinality", false]], "minimumcardinalityviolatedwarning": [[80, "baybe.exceptions.MinimumCardinalityViolatedWarning", false]], "mode (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.mode", false]], "mode (baybe.targets.numerical.numericaltarget attribute)": [[305, "baybe.targets.numerical.NumericalTarget.mode", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_cluster_num_parameter_name", false]], "model_cluster_num_parameter_name (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_cluster_num_parameter_name", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender attribute)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender attribute)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender attribute)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.model_params", false]], "model_params (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender attribute)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.model_params", false]], "model_params (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.model_params", false]], "model_params (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.model_params", false]], "model_params (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.model_params", false]], "modelnottrainederror": [[81, "baybe.exceptions.ModelNotTrainedError", false]], "module": [[0, "module-baybe", false], [1, "module-baybe.acquisition", false], [2, "module-baybe.acquisition.acqfs", false], [23, "module-baybe.acquisition.base", false], [25, "module-baybe.acquisition.partial", false], [27, "module-baybe.acquisition.utils", false], [30, "module-baybe.campaign", false], [32, "module-baybe.constraints", false], [33, "module-baybe.constraints.base", false], [39, "module-baybe.constraints.conditions", false], [43, "module-baybe.constraints.continuous", false], [46, "module-baybe.constraints.deprecation", false], [50, "module-baybe.constraints.discrete", false], [60, "module-baybe.constraints.utils", false], [62, "module-baybe.constraints.validation", false], [66, "module-baybe.exceptions", false], [93, "module-baybe.insights", false], [94, "module-baybe.insights.shap", false], [102, "module-baybe.kernels", false], [103, "module-baybe.kernels.base", false], [107, "module-baybe.kernels.basic", false], [116, "module-baybe.kernels.composite", false], [120, "module-baybe.objectives", false], [121, "module-baybe.objectives.base", false], [124, "module-baybe.objectives.desirability", false], [127, "module-baybe.objectives.enum", false], [129, "module-baybe.objectives.pareto", false], [131, "module-baybe.objectives.single", false], [133, "module-baybe.objectives.validation", false], [135, "module-baybe.parameters", false], [136, "module-baybe.parameters.base", false], [140, "module-baybe.parameters.categorical", false], [143, "module-baybe.parameters.custom", false], [145, "module-baybe.parameters.enum", false], [150, "module-baybe.parameters.numerical", false], [153, "module-baybe.parameters.substance", false], [156, "module-baybe.parameters.utils", false], [161, "module-baybe.parameters.validation", false], [165, "module-baybe.priors", false], [166, "module-baybe.priors.base", false], [168, "module-baybe.priors.basic", false], [176, "module-baybe.recommenders", false], [177, "module-baybe.recommenders.base", false], [179, "module-baybe.recommenders.meta", false], [180, "module-baybe.recommenders.meta.base", false], [182, "module-baybe.recommenders.meta.sequential", false], [187, "module-baybe.recommenders.naive", false], [189, "module-baybe.recommenders.pure", false], [190, "module-baybe.recommenders.pure.base", false], [192, "module-baybe.recommenders.pure.bayesian", false], [193, "module-baybe.recommenders.pure.bayesian.base", false], [195, "module-baybe.recommenders.pure.bayesian.botorch", false], [197, "module-baybe.recommenders.pure.bayesian.sequential_greedy", false], [199, "module-baybe.recommenders.pure.nonpredictive", false], [200, "module-baybe.recommenders.pure.nonpredictive.base", false], [202, "module-baybe.recommenders.pure.nonpredictive.clustering", false], [207, "module-baybe.recommenders.pure.nonpredictive.sampling", false], [211, "module-baybe.searchspace", false], [212, "module-baybe.searchspace.continuous", false], [214, "module-baybe.searchspace.core", false], [219, "module-baybe.searchspace.discrete", false], [225, "module-baybe.searchspace.validation", false], [229, "module-baybe.serialization", false], [230, "module-baybe.serialization.core", false], [237, "module-baybe.serialization.mixin", false], [239, "module-baybe.serialization.utils", false], [242, "module-baybe.simulation", false], [243, "module-baybe.simulation.core", false], [245, "module-baybe.simulation.lookup", false], [247, "module-baybe.simulation.scenarios", false], [249, "module-baybe.simulation.transfer_learning", false], [251, "module-baybe.surrogates", false], [252, "module-baybe.surrogates.bandit", false], [254, "module-baybe.surrogates.base", false], [259, "module-baybe.surrogates.composite", false], [261, "module-baybe.surrogates.custom", false], [264, "module-baybe.surrogates.gaussian_process", false], [265, "module-baybe.surrogates.gaussian_process.core", false], [267, "module-baybe.surrogates.gaussian_process.kernel_factory", false], [271, "module-baybe.surrogates.gaussian_process.presets", false], [272, "module-baybe.surrogates.gaussian_process.presets.core", false], [275, "module-baybe.surrogates.gaussian_process.presets.default", false], [277, "module-baybe.surrogates.gaussian_process.presets.edbo", false], [279, "module-baybe.surrogates.linear", false], [281, "module-baybe.surrogates.naive", false], [283, "module-baybe.surrogates.ngboost", false], [285, "module-baybe.surrogates.random_forest", false], [287, "module-baybe.surrogates.utils", false], [291, "module-baybe.surrogates.validation", false], [295, "module-baybe.targets", false], [296, "module-baybe.targets.base", false], [298, "module-baybe.targets.binary", false], [301, "module-baybe.targets.enum", false], [304, "module-baybe.targets.numerical", false], [306, "module-baybe.targets.transforms", false], [310, "module-baybe.telemetry", false], [315, "module-baybe.utils", false], [316, "module-baybe.utils.augmentation", false], [319, "module-baybe.utils.basic", false], [335, "module-baybe.utils.boolean", false], [339, "module-baybe.utils.chemistry", false], [344, "module-baybe.utils.clustering_algorithms", false], [345, "module-baybe.utils.clustering_algorithms.third_party", false], [346, "module-baybe.utils.clustering_algorithms.third_party.kmedoids", false], [348, "module-baybe.utils.conversion", false], [352, "module-baybe.utils.dataframe", false], [369, "module-baybe.utils.interval", false], [374, "module-baybe.utils.memory", false], [376, "module-baybe.utils.numerical", false], [383, "module-baybe.utils.random", false], [386, "module-baybe.utils.sampling_algorithms", false], [390, "module-baybe.utils.scaling", false], [392, "module-baybe.utils.torch", false], [395, "module-baybe.utils.validation", false]], "mordred (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MORDRED", false]], "morgan_fp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MORGAN_FP", false]], "morse (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MORSE", false]], "mqns (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.MQNS", false]], "n_batches_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_batches_done", false]], "n_fits_done (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.n_fits_done", false]], "n_inactive_parameter_combinations (baybe.constraints.continuous.continuouscardinalityconstraint property)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.n_inactive_parameter_combinations", false]], "n_inactive_parameter_combinations (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.n_inactive_parameter_combinations", false]], "n_mc_samples (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.n_mc_samples", false]], "n_outputs (baybe.objectives.base.objective property)": [[122, "baybe.objectives.base.Objective.n_outputs", false]], "n_outputs (baybe.objectives.desirability.desirabilityobjective property)": [[125, "baybe.objectives.desirability.DesirabilityObjective.n_outputs", false]], "n_outputs (baybe.objectives.pareto.paretoobjective property)": [[130, "baybe.objectives.pareto.ParetoObjective.n_outputs", false]], "n_outputs (baybe.objectives.single.singletargetobjective property)": [[132, "baybe.objectives.single.SingleTargetObjective.n_outputs", false]], "n_raw_samples (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_raw_samples", false]], "n_restarts (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.n_restarts", false]], "n_tasks (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.n_tasks", false]], "naivehybridspacerecommender (class in baybe.recommenders.naive)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender", false]], "name (baybe.parameters.base.continuousparameter attribute)": [[137, "baybe.parameters.base.ContinuousParameter.name", false]], "name (baybe.parameters.base.discreteparameter attribute)": [[138, "baybe.parameters.base.DiscreteParameter.name", false]], "name (baybe.parameters.base.parameter attribute)": [[139, "baybe.parameters.base.Parameter.name", false]], "name (baybe.parameters.categorical.categoricalparameter attribute)": [[141, "baybe.parameters.categorical.CategoricalParameter.name", false]], "name (baybe.parameters.categorical.taskparameter attribute)": [[142, "baybe.parameters.categorical.TaskParameter.name", false]], "name (baybe.parameters.custom.customdiscreteparameter attribute)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.name", false]], "name (baybe.parameters.numerical.numericalcontinuousparameter attribute)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.name", false]], "name (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.name", false]], "name (baybe.parameters.substance.substanceparameter attribute)": [[155, "baybe.parameters.substance.SubstanceParameter.name", false]], "name (baybe.targets.base.target attribute)": [[297, "baybe.targets.base.Target.name", false]], "name (baybe.targets.binary.binarytarget attribute)": [[299, "baybe.targets.binary.BinaryTarget.name", false]], "name (baybe.targets.numerical.numericaltarget attribute)": [[305, "baybe.targets.numerical.NumericalTarget.name", false]], "name_to_smiles() (in module baybe.utils.chemistry)": [[342, "baybe.utils.chemistry.name_to_smiles", false]], "ngboostsurrogate (class in baybe.surrogates.ngboost)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate", false]], "nomcacquisitionfunctionerror": [[82, "baybe.exceptions.NoMCAcquisitionFunctionError", false]], "nomeasurementserror": [[83, "baybe.exceptions.NoMeasurementsError", false]], "non_inf_float() (in module baybe.utils.validation)": [[397, "baybe.utils.validation.non_inf_float", false]], "non_nan_float() (in module baybe.utils.validation)": [[398, "baybe.utils.validation.non_nan_float", false]], "non_shap_explainers (in module baybe.insights.shap)": [[96, "baybe.insights.shap.NON_SHAP_EXPLAINERS", false]], "nonpredictiverecommender (class in baybe.recommenders.pure.nonpredictive.base)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender", false]], "nonstring_to_tuple() (in module baybe.utils.conversion)": [[350, "baybe.utils.conversion.nonstring_to_tuple", false]], "norecommenderslefterror": [[84, "baybe.exceptions.NoRecommendersLeftError", false]], "normalize_input_dtypes() (in module baybe.utils.dataframe)": [[365, "baybe.utils.dataframe.normalize_input_dtypes", false]], "normalprior (class in baybe.priors.basic)": [[174, "baybe.priors.basic.NormalPrior", false]], "notenoughpointslefterror": [[85, "baybe.exceptions.NotEnoughPointsLeftError", false]], "nothingtosimulateerror": [[86, "baybe.exceptions.NothingToSimulateError", false]], "nu (baybe.kernels.basic.maternkernel attribute)": [[109, "baybe.kernels.basic.MaternKernel.nu", false]], "num_fantasies (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.num_fantasies", false]], "num_samples (baybe.kernels.basic.rffkernel attribute)": [[114, "baybe.kernels.basic.RFFKernel.num_samples", false]], "numerical_only (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.numerical_only", false]], "numerical_only (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.numerical_only", false]], "numericalcontinuousparameter (class in baybe.parameters.numerical)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter", false]], "numericaldiscreteparameter (class in baybe.parameters.numerical)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter", false]], "numericaltarget (class in baybe.targets.numerical)": [[305, "baybe.targets.numerical.NumericalTarget", false]], "numericalunderflowerror": [[87, "baybe.exceptions.NumericalUnderflowError", false]], "objective (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.objective", false]], "objective (class in baybe.objectives.base)": [[122, "baybe.objectives.base.Objective", false]], "offset_initial_value (baybe.kernels.basic.polynomialkernel attribute)": [[112, "baybe.kernels.basic.PolynomialKernel.offset_initial_value", false]], "offset_prior (baybe.kernels.basic.polynomialkernel attribute)": [[112, "baybe.kernels.basic.PolynomialKernel.offset_prior", false]], "ohe (baybe.parameters.enum.categoricalencoding attribute)": [[146, "baybe.parameters.enum.CategoricalEncoding.OHE", false]], "onnx_input_name (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_input_name", false]], "onnx_str (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.onnx_str", false]], "operator (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.operator", false]], "operator (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.operator", false]], "optionalimporterror": [[88, "baybe.exceptions.OptionalImportError", false]], "outputscale_initial_value (baybe.kernels.composite.scalekernel attribute)": [[119, "baybe.kernels.composite.ScaleKernel.outputscale_initial_value", false]], "outputscale_prior (baybe.kernels.composite.scalekernel attribute)": [[119, "baybe.kernels.composite.ScaleKernel.outputscale_prior", false]], "pamclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender", false]], "parameter (class in baybe.parameters.base)": [[139, "baybe.parameters.base.Parameter", false]], "parameter_cartesian_prod_pandas() (in module baybe.searchspace.discrete)": [[222, "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", false]], "parameter_cartesian_prod_polars() (in module baybe.searchspace.discrete)": [[223, "baybe.searchspace.discrete.parameter_cartesian_prod_polars", false]], "parameter_names (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names", false]], "parameter_names (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.parameter_names", false]], "parameter_names (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.parameter_names", false]], "parameter_names_in_cardinality_constraints (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.parameter_names_in_cardinality_constraints", false]], "parameterencoding (class in baybe.parameters.enum)": [[148, "baybe.parameters.enum.ParameterEncoding", false]], "parameters (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.parameters", false]], "parameters (baybe.constraints.base.cardinalityconstraint attribute)": [[34, "baybe.constraints.base.CardinalityConstraint.parameters", false]], "parameters (baybe.constraints.base.constraint attribute)": [[35, "baybe.constraints.base.Constraint.parameters", false]], "parameters (baybe.constraints.base.continuousconstraint attribute)": [[36, "baybe.constraints.base.ContinuousConstraint.parameters", false]], "parameters (baybe.constraints.base.continuousnonlinearconstraint attribute)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.parameters", false]], "parameters (baybe.constraints.base.discreteconstraint attribute)": [[38, "baybe.constraints.base.DiscreteConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecardinalityconstraint attribute)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteexcludeconstraint attribute)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretelinkedparametersconstraint attribute)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretenolabelduplicatesconstraint attribute)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretepermutationinvarianceconstraint attribute)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discreteproductconstraint attribute)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.parameters", false]], "parameters (baybe.constraints.discrete.discretesumconstraint attribute)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.parameters", false]], "parameters (baybe.searchspace.continuous.subspacecontinuous attribute)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.parameters", false]], "parameters (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.parameters", false]], "parameters (baybe.searchspace.discrete.subspacediscrete attribute)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.parameters", false]], "paretoobjective (class in baybe.objectives.pareto)": [[130, "baybe.objectives.pareto.ParetoObjective", false]], "partialacquisitionfunction (class in baybe.acquisition.partial)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction", false]], "pattern (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PATTERN", false]], "period_length_initial_value (baybe.kernels.basic.periodickernel attribute)": [[110, "baybe.kernels.basic.PeriodicKernel.period_length_initial_value", false]], "period_length_prior (baybe.kernels.basic.periodickernel attribute)": [[110, "baybe.kernels.basic.PeriodicKernel.period_length_prior", false]], "periodickernel (class in baybe.kernels.basic)": [[110, "baybe.kernels.basic.PeriodicKernel", false]], "permutation_invariant (baybe.constraints.discrete.discretedependenciesconstraint attribute)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.permutation_invariant", false]], "pharmacophore (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PHARMACOPHORE", false]], "physiochemicalproperties (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PHYSIOCHEMICALPROPERTIES", false]], "piecewisepolynomialkernel (class in baybe.kernels.basic)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel", false]], "pin_discrete (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pin_discrete", false]], "pinned_part (baybe.acquisition.partial.partialacquisitionfunction attribute)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.pinned_part", false]], "plainkernelfactory (class in baybe.surrogates.gaussian_process.kernel_factory)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory", false]], "plot() (baybe.insights.shap.shapinsight method)": [[97, "baybe.insights.shap.SHAPInsight.plot", false]], "polynomialkernel (class in baybe.kernels.basic)": [[112, "baybe.kernels.basic.PolynomialKernel", false]], "posterior() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior", false]], "posterior() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior", false]], "posterior() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.posterior", false]], "posterior() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.posterior", false]], "posterior() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.posterior", false]], "posterior() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior", false]], "posterior() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior", false]], "posterior() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior", false]], "posterior() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior", false]], "posterior() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior", false]], "posterior_means() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_means", false]], "posterior_modes() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_modes", false]], "posterior_stats() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.posterior_stats", false]], "posterior_stats() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats", false]], "posterior_stats() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats", false]], "posteriormean (class in baybe.acquisition.acqfs)": [[5, "baybe.acquisition.acqfs.PosteriorMean", false]], "posteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation", false]], "posteriorstatistic (in module baybe.surrogates.base)": [[256, "baybe.surrogates.base.PosteriorStatistic", false]], "power (baybe.kernels.basic.polynomialkernel attribute)": [[112, "baybe.kernels.basic.PolynomialKernel.power", false]], "predict() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict", false]], "pretty_print_df() (in module baybe.utils.dataframe)": [[366, "baybe.utils.dataframe.pretty_print_df", false]], "prior (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.prior", false]], "prior (class in baybe.priors.base)": [[167, "baybe.priors.base.Prior", false]], "probabilityofimprovement (class in baybe.acquisition.acqfs)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement", false]], "productkernel (class in baybe.kernels.composite)": [[118, "baybe.kernels.composite.ProductKernel", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.prune_baseline", false]], "prune_baseline (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.prune_baseline", false]], "pubchem (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.PUBCHEM", false]], "purerecommender (class in baybe.recommenders.pure.base)": [[191, "baybe.recommenders.pure.base.PureRecommender", false]], "q (baybe.kernels.basic.piecewisepolynomialkernel attribute)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.q", false]], "qexpectedimprovement (class in baybe.acquisition.acqfs)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement", false]], "qknowledgegradient (class in baybe.acquisition.acqfs)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient", false]], "qlogexpectedimprovement (class in baybe.acquisition.acqfs)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement", false]], "qlognoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement", false]], "qlognoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement", false]], "qlognparego (class in baybe.acquisition.acqfs)": [[12, "baybe.acquisition.acqfs.qLogNParEGO", false]], "qnegintegratedposteriorvariance (class in baybe.acquisition.acqfs)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance", false]], "qnoisyexpectedhypervolumeimprovement (class in baybe.acquisition.acqfs)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement", false]], "qnoisyexpectedimprovement (class in baybe.acquisition.acqfs)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement", false]], "qposteriorstandarddeviation (class in baybe.acquisition.acqfs)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation", false]], "qprobabilityofimprovement (class in baybe.acquisition.acqfs)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement", false]], "qsimpleregret (class in baybe.acquisition.acqfs)": [[20, "baybe.acquisition.acqfs.qSimpleRegret", false]], "qthompsonsampling (class in baybe.acquisition.acqfs)": [[21, "baybe.acquisition.acqfs.qThompsonSampling", false]], "qupperconfidencebound (class in baybe.acquisition.acqfs)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound", false]], "random (baybe.recommenders.pure.nonpredictive.sampling.fpsinitialization attribute)": [[208, "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization.RANDOM", false]], "random (baybe.utils.sampling_algorithms.discretesamplingmethod attribute)": [[387, "baybe.utils.sampling_algorithms.DiscreteSamplingMethod.Random", false]], "random_tie_break (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender attribute)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.random_tie_break", false]], "randomforestsurrogate (class in baybe.surrogates.random_forest)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate", false]], "randomrecommender (class in baybe.recommenders.pure.nonpredictive.sampling)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender", false]], "rate (baybe.priors.basic.gammaprior attribute)": [[170, "baybe.priors.basic.GammaPrior.rate", false]], "rbfkernel (class in baybe.kernels.basic)": [[113, "baybe.kernels.basic.RBFKernel", false]], "rdf (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDF", false]], "rdkit (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDKIT", false]], "rdkit2ddescriptors (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDKIT2DDESCRIPTORS", false]], "rdkitfingerprint (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.RDKITFINGERPRINT", false]], "recommend() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.recommend", false]], "recommend() (baybe.recommenders.base.recommenderprotocol method)": [[178, "baybe.recommenders.base.RecommenderProtocol.recommend", false]], "recommend() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommend", false]], "recommend() (baybe.recommenders.naive.naivehybridspacerecommender method)": [[188, "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.base.purerecommender method)": [[191, "baybe.recommenders.pure.base.PureRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.base.bayesianrecommender method)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.bayesian.botorch.botorchrecommender method)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.base.nonpredictiverecommender method)": [[201, "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.gaussianmixtureclusteringrecommender method)": [[203, "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.kmeansclusteringrecommender method)": [[204, "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.pamclusteringrecommender method)": [[205, "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.clustering.sklearnclusteringrecommender method)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.fpsrecommender method)": [[209, "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend", false]], "recommend() (baybe.recommenders.pure.nonpredictive.sampling.randomrecommender method)": [[210, "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend", false]], "recommender (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.recommender", false]], "recommender (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.recommender", false]], "recommenderprotocol (class in baybe.recommenders.base)": [[178, "baybe.recommenders.base.RecommenderProtocol", false]], "recommenders (baybe.recommenders.meta.sequential.sequentialmetarecommender attribute)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.recommenders", false]], "recommenders (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender attribute)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.recommenders", false]], "reference_point (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.reference_point", false]], "reference_point (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.reference_point", false]], "refers_to() (in module baybe.utils.basic)": [[332, "baybe.utils.basic.refers_to", false]], "register_custom_architecture() (in module baybe.surrogates.custom)": [[263, "baybe.surrogates.custom.register_custom_architecture", false]], "register_hooks() (in module baybe.utils.basic)": [[333, "baybe.utils.basic.register_hooks", false]], "relative_threshold (baybe.constraints.continuous.continuouscardinalityconstraint attribute)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.relative_threshold", false]], "remain_switched (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.remain_switched", false]], "replicate() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.replicate", false]], "replicate() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.replicate", false]], "replicate() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.replicate", false]], "replicate() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.replicate", false]], "replicate() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.replicate", false]], "replicate() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.replicate", false]], "replicate() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.replicate", false]], "replicate() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.replicate", false]], "rffkernel (class in baybe.kernels.basic)": [[114, "baybe.kernels.basic.RFFKernel", false]], "rhs (baybe.constraints.continuous.continuouslinearconstraint attribute)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.rhs", false]], "rqkernel (class in baybe.kernels.basic)": [[115, "baybe.kernels.basic.RQKernel", false]], "sample_from_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial", false]], "sample_inactive_parameters() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters", false]], "sample_numerical_df() (in module baybe.utils.sampling_algorithms)": [[389, "baybe.utils.sampling_algorithms.sample_numerical_df", false]], "sample_uniform() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform", false]], "samples_full_factorial() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.samples_full_factorial", false]], "samples_random() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.samples_random", false]], "sampling_fraction (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_fraction", false]], "sampling_method (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_method", false]], "sampling_n_points (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.sampling_n_points", false]], "sampling_percentage (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sampling_percentage", false]], "scalarize() (in module baybe.objectives.desirability)": [[126, "baybe.objectives.desirability.scalarize", false]], "scalarizer (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.scalarizer", false]], "scalarizer (class in baybe.objectives.enum)": [[128, "baybe.objectives.enum.Scalarizer", false]], "scale (baybe.priors.basic.halfcauchyprior attribute)": [[171, "baybe.priors.basic.HalfCauchyPrior.scale", false]], "scale (baybe.priors.basic.halfnormalprior attribute)": [[172, "baybe.priors.basic.HalfNormalPrior.scale", false]], "scale (baybe.priors.basic.lognormalprior attribute)": [[173, "baybe.priors.basic.LogNormalPrior.scale", false]], "scale (baybe.priors.basic.normalprior attribute)": [[174, "baybe.priors.basic.NormalPrior.scale", false]], "scalekernel (class in baybe.kernels.composite)": [[119, "baybe.kernels.composite.ScaleKernel", false]], "scaling_bounds (baybe.searchspace.continuous.subspacecontinuous property)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.scaling_bounds", false]], "scaling_bounds (baybe.searchspace.discrete.subspacediscrete property)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.scaling_bounds", false]], "searchspace (baybe.campaign.campaign attribute)": [[31, "baybe.campaign.Campaign.searchspace", false]], "searchspace (class in baybe.searchspace.core)": [[215, "baybe.searchspace.core.SearchSpace", false]], "searchspacematchwarning": [[89, "baybe.exceptions.SearchSpaceMatchWarning", false]], "searchspacetype (class in baybe.searchspace.core)": [[216, "baybe.searchspace.core.SearchSpaceType", false]], "secfp (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.SECFP", false]], "select_constructor_hook() (in module baybe.serialization.core)": [[235, "baybe.serialization.core.select_constructor_hook", false]], "select_recommender() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.select_recommender", false]], "select_recommender() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.select_recommender", false]], "selection (baybe.constraints.conditions.subselectioncondition property)": [[41, "baybe.constraints.conditions.SubSelectionCondition.selection", false]], "sequential_continuous (baybe.recommenders.pure.bayesian.botorch.botorchrecommender attribute)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.sequential_continuous", false]], "sequentialgreedyrecommender() (in module baybe.recommenders.pure.bayesian.sequential_greedy)": [[198, "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", false]], "sequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender", false]], "serialize_dataframe() (in module baybe.serialization.utils)": [[241, "baybe.serialization.utils.serialize_dataframe", false]], "serialmixin (class in baybe.serialization.mixin)": [[238, "baybe.serialization.mixin.SerialMixin", false]], "set_output() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output", false]], "set_params() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params", false]], "set_random_seed() (in module baybe.utils.random)": [[384, "baybe.utils.random.set_random_seed", false]], "set_x_pending() (baybe.acquisition.partial.partialacquisitionfunction method)": [[26, "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending", false]], "shap_explainers (in module baybe.insights.shap)": [[98, "baybe.insights.shap.SHAP_EXPLAINERS", false]], "shap_plots (in module baybe.insights.shap)": [[99, "baybe.insights.shap.SHAP_PLOTS", false]], "shapinsight (class in baybe.insights.shap)": [[97, "baybe.insights.shap.SHAPInsight", false]], "sigma (baybe.priors.basic.smoothedboxprior attribute)": [[175, "baybe.priors.basic.SmoothedBoxPrior.sigma", false]], "simulate_experiment() (in module baybe.simulation.core)": [[244, "baybe.simulation.core.simulate_experiment", false]], "simulate_scenarios() (in module baybe.simulation.scenarios)": [[248, "baybe.simulation.scenarios.simulate_scenarios", false]], "simulate_transfer_learning() (in module baybe.simulation.transfer_learning)": [[250, "baybe.simulation.transfer_learning.simulate_transfer_learning", false]], "singletargetobjective (class in baybe.objectives.single)": [[132, "baybe.objectives.single.SingleTargetObjective", false]], "sklearnclusteringrecommender (class in baybe.recommenders.pure.nonpredictive.clustering)": [[206, "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender", false]], "smiles (in module baybe.parameters.substance)": [[154, "baybe.parameters.substance.Smiles", false]], "smiles_to_fingerprint_features() (in module baybe.utils.chemistry)": [[343, "baybe.utils.chemistry.smiles_to_fingerprint_features", false]], "smoothedboxprior (class in baybe.priors.basic)": [[175, "baybe.priors.basic.SmoothedBoxPrior", false]], "sort_parameters() (in module baybe.parameters.utils)": [[160, "baybe.parameters.utils.sort_parameters", false]], "str_to_acqf() (in module baybe.acquisition.utils)": [[29, "baybe.acquisition.utils.str_to_acqf", false]], "streamingsequentialmetarecommender (class in baybe.recommenders.meta.sequential)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender", false]], "strtobool() (in module baybe.utils.boolean)": [[338, "baybe.utils.boolean.strtobool", false]], "structure_constraints() (in module baybe.constraints.deprecation)": [[49, "baybe.constraints.deprecation.structure_constraints", false]], "subselectioncondition (class in baybe.constraints.conditions)": [[41, "baybe.constraints.conditions.SubSelectionCondition", false]], "subspacecontinuous (class in baybe.searchspace.continuous)": [[213, "baybe.searchspace.continuous.SubspaceContinuous", false]], "subspacediscrete (class in baybe.searchspace.discrete)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete", false]], "substanceencoding (class in baybe.parameters.enum)": [[149, "baybe.parameters.enum.SubstanceEncoding", false]], "substanceparameter (class in baybe.parameters.substance)": [[155, "baybe.parameters.substance.SubstanceParameter", false]], "success_value (baybe.targets.binary.binarytarget attribute)": [[299, "baybe.targets.binary.BinaryTarget.success_value", false]], "summary() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.summary", false]], "summary() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.summary", false]], "summary() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.summary", false]], "summary() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.summary", false]], "summary() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.summary", false]], "summary() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.summary", false]], "summary() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.summary", false]], "summary() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.summary", false]], "summary() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.summary", false]], "summary() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.summary", false]], "summary() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.summary", false]], "summary() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.summary", false]], "summary() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.summary", false]], "summary() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.summary", false]], "summary() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.summary", false]], "summary() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.summary", false]], "summary() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.summary", false]], "summary() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.summary", false]], "summary() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.summary", false]], "summary() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.summary", false]], "supports_multi_output (baybe.acquisition.acqfs.expectedimprovement attribute)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.logexpectedimprovement attribute)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriormean attribute)": [[5, "baybe.acquisition.acqfs.PosteriorMean.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.posteriorstandarddeviation attribute)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.probabilityofimprovement attribute)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qexpectedimprovement attribute)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qknowledgegradient attribute)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlogexpectedimprovement attribute)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement attribute)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognoisyexpectedimprovement attribute)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qlognparego attribute)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnegintegratedposteriorvariance attribute)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement attribute)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qnoisyexpectedimprovement attribute)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qposteriorstandarddeviation attribute)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qprobabilityofimprovement attribute)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qsimpleregret attribute)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qthompsonsampling attribute)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.qupperconfidencebound attribute)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.acqfs.upperconfidencebound attribute)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.supports_multi_output", false]], "supports_multi_output (baybe.acquisition.base.acquisitionfunction attribute)": [[24, "baybe.acquisition.base.AcquisitionFunction.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.base.surrogate attribute)": [[257, "baybe.surrogates.base.Surrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_multi_output", false]], "supports_multi_output (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_multi_output", false]], "supports_transfer_learning (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate attribute)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.independentgaussiansurrogate attribute)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.base.surrogate attribute)": [[257, "baybe.surrogates.base.Surrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.custom.customonnxsurrogate attribute)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate attribute)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.linear.bayesianlinearsurrogate attribute)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.naive.meanpredictionsurrogate attribute)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.ngboost.ngboostsurrogate attribute)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.supports_transfer_learning", false]], "supports_transfer_learning (baybe.surrogates.random_forest.randomforestsurrogate attribute)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.supports_transfer_learning", false]], "surrogate (class in baybe.surrogates.base)": [[257, "baybe.surrogates.base.Surrogate", false]], "surrogate_model (baybe.recommenders.pure.bayesian.base.bayesianrecommender property)": [[194, "baybe.recommenders.pure.bayesian.base.BayesianRecommender.surrogate_model", false]], "surrogate_model (baybe.recommenders.pure.bayesian.botorch.botorchrecommender property)": [[196, "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.surrogate_model", false]], "surrogateprotocol (class in baybe.surrogates.base)": [[258, "baybe.surrogates.base.SurrogateProtocol", false]], "surrogates (baybe.surrogates.composite.compositesurrogate attribute)": [[260, "baybe.surrogates.composite.CompositeSurrogate.surrogates", false]], "switch_after (baybe.recommenders.meta.sequential.twophasemetarecommender attribute)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.switch_after", false]], "target (class in baybe.targets.base)": [[297, "baybe.targets.base.Target", false]], "targetmode (class in baybe.targets.enum)": [[302, "baybe.targets.enum.TargetMode", false]], "targets (baybe.campaign.campaign property)": [[31, "baybe.campaign.Campaign.targets", false]], "targets (baybe.objectives.base.objective property)": [[122, "baybe.objectives.base.Objective.targets", false]], "targets (baybe.objectives.desirability.desirabilityobjective property)": [[125, "baybe.objectives.desirability.DesirabilityObjective.targets", false]], "targets (baybe.objectives.pareto.paretoobjective property)": [[130, "baybe.objectives.pareto.ParetoObjective.targets", false]], "targets (baybe.objectives.single.singletargetobjective property)": [[132, "baybe.objectives.single.SingleTargetObjective.targets", false]], "targettransformation (class in baybe.targets.enum)": [[303, "baybe.targets.enum.TargetTransformation", false]], "task_idx (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.task_idx", false]], "taskparameter (class in baybe.parameters.categorical)": [[142, "baybe.parameters.categorical.TaskParameter", false]], "telemetry_record_recommended_measurement_percentage() (in module baybe.telemetry)": [[313, "baybe.telemetry.telemetry_record_recommended_measurement_percentage", false]], "telemetry_record_value() (in module baybe.telemetry)": [[314, "baybe.telemetry.telemetry_record_value", false]], "temporary_seed() (in module baybe.utils.random)": [[385, "baybe.utils.random.temporary_seed", false]], "threshold (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.threshold", false]], "thresholdcondition (class in baybe.constraints.conditions)": [[42, "baybe.constraints.conditions.ThresholdCondition", false]], "to_botorch() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_botorch", false]], "to_botorch() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_botorch", false]], "to_botorch() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch", false]], "to_botorch() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.base.surrogateprotocol method)": [[258, "baybe.surrogates.base.SurrogateProtocol.to_botorch", false]], "to_botorch() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.to_botorch", false]], "to_botorch() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.to_botorch", false]], "to_dict() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_dict", false]], "to_dict() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_dict", false]], "to_dict() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_dict", false]], "to_dict() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_dict", false]], "to_dict() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_dict", false]], "to_dict() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_dict", false]], "to_dict() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_dict", false]], "to_dict() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_dict", false]], "to_dict() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.to_dict", false]], "to_dict() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.to_dict", false]], "to_dict() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.to_dict", false]], "to_dict() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.to_dict", false]], "to_dict() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.to_dict", false]], "to_dict() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.to_dict", false]], "to_dict() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.to_dict", false]], "to_dict() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.to_dict", false]], "to_dict() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.to_dict", false]], "to_dict() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.to_dict", false]], "to_dict() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_dict", false]], "to_dict() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_dict", false]], "to_dict() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_dict", false]], "to_dict() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_dict", false]], "to_dict() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_dict", false]], "to_dict() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.to_dict", false]], "to_dict() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.to_dict", false]], "to_dict() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.to_dict", false]], "to_dict() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.to_dict", false]], "to_dict() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_dict", false]], "to_dict() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_dict", false]], "to_dict() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.to_dict", false]], "to_dict() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.to_dict", false]], "to_dict() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.to_dict", false]], "to_dict() (baybe.serialization.mixin.serialmixin method)": [[238, "baybe.serialization.mixin.SerialMixin.to_dict", false]], "to_dict() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.to_dict", false]], "to_dict() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_dict", false]], "to_dict() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.to_dict", false]], "to_dict() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.to_dict", false]], "to_dict() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.to_dict", false]], "to_dict() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.to_dict", false]], "to_dict() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.to_dict", false]], "to_dict() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.to_dict", false]], "to_factory() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.to_factory", false]], "to_factory() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.to_factory", false]], "to_factory() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.to_factory", false]], "to_factory() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.to_factory", false]], "to_factory() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.to_factory", false]], "to_factory() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.to_factory", false]], "to_gpytorch() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.to_gpytorch", false]], "to_gpytorch() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.to_gpytorch", false]], "to_gpytorch() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.to_gpytorch", false]], "to_gpytorch() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.to_gpytorch", false]], "to_json() (baybe.acquisition.acqfs.expectedimprovement method)": [[3, "baybe.acquisition.acqfs.ExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.logexpectedimprovement method)": [[4, "baybe.acquisition.acqfs.LogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriormean method)": [[5, "baybe.acquisition.acqfs.PosteriorMean.to_json", false]], "to_json() (baybe.acquisition.acqfs.posteriorstandarddeviation method)": [[6, "baybe.acquisition.acqfs.PosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.probabilityofimprovement method)": [[7, "baybe.acquisition.acqfs.ProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qexpectedimprovement method)": [[9, "baybe.acquisition.acqfs.qExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qknowledgegradient method)": [[10, "baybe.acquisition.acqfs.qKnowledgeGradient.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlogexpectedimprovement method)": [[11, "baybe.acquisition.acqfs.qLogExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedhypervolumeimprovement method)": [[13, "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognoisyexpectedimprovement method)": [[14, "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qlognparego method)": [[12, "baybe.acquisition.acqfs.qLogNParEGO.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnegintegratedposteriorvariance method)": [[15, "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedhypervolumeimprovement method)": [[16, "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qnoisyexpectedimprovement method)": [[17, "baybe.acquisition.acqfs.qNoisyExpectedImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qposteriorstandarddeviation method)": [[18, "baybe.acquisition.acqfs.qPosteriorStandardDeviation.to_json", false]], "to_json() (baybe.acquisition.acqfs.qprobabilityofimprovement method)": [[19, "baybe.acquisition.acqfs.qProbabilityOfImprovement.to_json", false]], "to_json() (baybe.acquisition.acqfs.qsimpleregret method)": [[20, "baybe.acquisition.acqfs.qSimpleRegret.to_json", false]], "to_json() (baybe.acquisition.acqfs.qthompsonsampling method)": [[21, "baybe.acquisition.acqfs.qThompsonSampling.to_json", false]], "to_json() (baybe.acquisition.acqfs.qupperconfidencebound method)": [[22, "baybe.acquisition.acqfs.qUpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.acqfs.upperconfidencebound method)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound.to_json", false]], "to_json() (baybe.acquisition.base.acquisitionfunction method)": [[24, "baybe.acquisition.base.AcquisitionFunction.to_json", false]], "to_json() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.to_json", false]], "to_json() (baybe.constraints.base.cardinalityconstraint method)": [[34, "baybe.constraints.base.CardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.base.constraint method)": [[35, "baybe.constraints.base.Constraint.to_json", false]], "to_json() (baybe.constraints.base.continuousconstraint method)": [[36, "baybe.constraints.base.ContinuousConstraint.to_json", false]], "to_json() (baybe.constraints.base.continuousnonlinearconstraint method)": [[37, "baybe.constraints.base.ContinuousNonlinearConstraint.to_json", false]], "to_json() (baybe.constraints.base.discreteconstraint method)": [[38, "baybe.constraints.base.DiscreteConstraint.to_json", false]], "to_json() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_json", false]], "to_json() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_json", false]], "to_json() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_json", false]], "to_json() (baybe.constraints.continuous.continuouscardinalityconstraint method)": [[44, "baybe.constraints.continuous.ContinuousCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.continuous.continuouslinearconstraint method)": [[45, "baybe.constraints.continuous.ContinuousLinearConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecardinalityconstraint method)": [[51, "baybe.constraints.discrete.DiscreteCardinalityConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretecustomconstraint method)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretedependenciesconstraint method)": [[53, "baybe.constraints.discrete.DiscreteDependenciesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteexcludeconstraint method)": [[54, "baybe.constraints.discrete.DiscreteExcludeConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretelinkedparametersconstraint method)": [[55, "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretenolabelduplicatesconstraint method)": [[56, "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretepermutationinvarianceconstraint method)": [[57, "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discreteproductconstraint method)": [[58, "baybe.constraints.discrete.DiscreteProductConstraint.to_json", false]], "to_json() (baybe.constraints.discrete.discretesumconstraint method)": [[59, "baybe.constraints.discrete.DiscreteSumConstraint.to_json", false]], "to_json() (baybe.kernels.base.basickernel method)": [[104, "baybe.kernels.base.BasicKernel.to_json", false]], "to_json() (baybe.kernels.base.compositekernel method)": [[105, "baybe.kernels.base.CompositeKernel.to_json", false]], "to_json() (baybe.kernels.base.kernel method)": [[106, "baybe.kernels.base.Kernel.to_json", false]], "to_json() (baybe.kernels.basic.linearkernel method)": [[108, "baybe.kernels.basic.LinearKernel.to_json", false]], "to_json() (baybe.kernels.basic.maternkernel method)": [[109, "baybe.kernels.basic.MaternKernel.to_json", false]], "to_json() (baybe.kernels.basic.periodickernel method)": [[110, "baybe.kernels.basic.PeriodicKernel.to_json", false]], "to_json() (baybe.kernels.basic.piecewisepolynomialkernel method)": [[111, "baybe.kernels.basic.PiecewisePolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.polynomialkernel method)": [[112, "baybe.kernels.basic.PolynomialKernel.to_json", false]], "to_json() (baybe.kernels.basic.rbfkernel method)": [[113, "baybe.kernels.basic.RBFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rffkernel method)": [[114, "baybe.kernels.basic.RFFKernel.to_json", false]], "to_json() (baybe.kernels.basic.rqkernel method)": [[115, "baybe.kernels.basic.RQKernel.to_json", false]], "to_json() (baybe.kernels.composite.additivekernel method)": [[117, "baybe.kernels.composite.AdditiveKernel.to_json", false]], "to_json() (baybe.kernels.composite.productkernel method)": [[118, "baybe.kernels.composite.ProductKernel.to_json", false]], "to_json() (baybe.kernels.composite.scalekernel method)": [[119, "baybe.kernels.composite.ScaleKernel.to_json", false]], "to_json() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.to_json", false]], "to_json() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.to_json", false]], "to_json() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.to_json", false]], "to_json() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.to_json", false]], "to_json() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_json", false]], "to_json() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_json", false]], "to_json() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.to_json", false]], "to_json() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_json", false]], "to_json() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_json", false]], "to_json() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_json", false]], "to_json() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_json", false]], "to_json() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_json", false]], "to_json() (baybe.priors.base.prior method)": [[167, "baybe.priors.base.Prior.to_json", false]], "to_json() (baybe.priors.basic.betaprior method)": [[169, "baybe.priors.basic.BetaPrior.to_json", false]], "to_json() (baybe.priors.basic.gammaprior method)": [[170, "baybe.priors.basic.GammaPrior.to_json", false]], "to_json() (baybe.priors.basic.halfcauchyprior method)": [[171, "baybe.priors.basic.HalfCauchyPrior.to_json", false]], "to_json() (baybe.priors.basic.halfnormalprior method)": [[172, "baybe.priors.basic.HalfNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.lognormalprior method)": [[173, "baybe.priors.basic.LogNormalPrior.to_json", false]], "to_json() (baybe.priors.basic.normalprior method)": [[174, "baybe.priors.basic.NormalPrior.to_json", false]], "to_json() (baybe.priors.basic.smoothedboxprior method)": [[175, "baybe.priors.basic.SmoothedBoxPrior.to_json", false]], "to_json() (baybe.recommenders.meta.base.metarecommender method)": [[181, "baybe.recommenders.meta.base.MetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.basesequentialmetarecommender method)": [[183, "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.sequentialmetarecommender method)": [[184, "baybe.recommenders.meta.sequential.SequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.streamingsequentialmetarecommender method)": [[185, "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.to_json", false]], "to_json() (baybe.recommenders.meta.sequential.twophasemetarecommender method)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.to_json", false]], "to_json() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.to_json", false]], "to_json() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.to_json", false]], "to_json() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.to_json", false]], "to_json() (baybe.serialization.mixin.serialmixin method)": [[238, "baybe.serialization.mixin.SerialMixin.to_json", false]], "to_json() (baybe.surrogates.bandit.betabernoullimultiarmedbanditsurrogate method)": [[253, "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.independentgaussiansurrogate method)": [[255, "baybe.surrogates.base.IndependentGaussianSurrogate.to_json", false]], "to_json() (baybe.surrogates.base.surrogate method)": [[257, "baybe.surrogates.base.Surrogate.to_json", false]], "to_json() (baybe.surrogates.composite.compositesurrogate method)": [[260, "baybe.surrogates.composite.CompositeSurrogate.to_json", false]], "to_json() (baybe.surrogates.custom.customonnxsurrogate method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.core.gaussianprocesssurrogate method)": [[266, "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.to_json", false]], "to_json() (baybe.surrogates.gaussian_process.kernel_factory.plainkernelfactory method)": [[269, "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.to_json", false]], "to_json() (baybe.surrogates.linear.bayesianlinearsurrogate method)": [[280, "baybe.surrogates.linear.BayesianLinearSurrogate.to_json", false]], "to_json() (baybe.surrogates.naive.meanpredictionsurrogate method)": [[282, "baybe.surrogates.naive.MeanPredictionSurrogate.to_json", false]], "to_json() (baybe.surrogates.ngboost.ngboostsurrogate method)": [[284, "baybe.surrogates.ngboost.NGBoostSurrogate.to_json", false]], "to_json() (baybe.surrogates.random_forest.randomforestsurrogate method)": [[286, "baybe.surrogates.random_forest.RandomForestSurrogate.to_json", false]], "to_json() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.to_json", false]], "to_json() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.to_json", false]], "to_json() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.to_json", false]], "to_json() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.to_json", false]], "to_kernel_factory() (in module baybe.surrogates.gaussian_process.kernel_factory)": [[270, "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", false]], "to_ndarray() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.to_ndarray", false]], "to_objective() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.to_objective", false]], "to_objective() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.to_objective", false]], "to_objective() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.to_objective", false]], "to_objective() (in module baybe.objectives.base)": [[123, "baybe.objectives.base.to_objective", false]], "to_polars() (baybe.constraints.conditions.condition method)": [[40, "baybe.constraints.conditions.Condition.to_polars", false]], "to_polars() (baybe.constraints.conditions.subselectioncondition method)": [[41, "baybe.constraints.conditions.SubSelectionCondition.to_polars", false]], "to_polars() (baybe.constraints.conditions.thresholdcondition method)": [[42, "baybe.constraints.conditions.ThresholdCondition.to_polars", false]], "to_searchspace() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.base.parameter method)": [[139, "baybe.parameters.base.Parameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_searchspace", false]], "to_searchspace() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_searchspace", false]], "to_searchspace() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.to_searchspace", false]], "to_searchspace() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.to_searchspace", false]], "to_searchspace() (in module baybe.searchspace.core)": [[217, "baybe.searchspace.core.to_searchspace", false]], "to_string() (in module baybe.utils.conversion)": [[351, "baybe.utils.conversion.to_string", false]], "to_subspace() (baybe.parameters.base.continuousparameter method)": [[137, "baybe.parameters.base.ContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.to_subspace", false]], "to_subspace() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.to_subspace", false]], "to_subspace() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericalcontinuousparameter method)": [[151, "baybe.parameters.numerical.NumericalContinuousParameter.to_subspace", false]], "to_subspace() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.to_subspace", false]], "to_subspace() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.to_subspace", false]], "to_tensor() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.to_tensor", false]], "to_tensor() (in module baybe.utils.dataframe)": [[367, "baybe.utils.dataframe.to_tensor", false]], "to_tuple() (baybe.utils.interval.interval method)": [[371, "baybe.utils.interval.Interval.to_tuple", false]], "to_tuple() (in module baybe.utils.basic)": [[334, "baybe.utils.basic.to_tuple", false]], "toggle_discrete_candidates() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.toggle_discrete_candidates", false]], "tolerance (baybe.constraints.conditions.thresholdcondition attribute)": [[42, "baybe.constraints.conditions.ThresholdCondition.tolerance", false]], "tolerance (baybe.parameters.numerical.numericaldiscreteparameter attribute)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.tolerance", false]], "topologicaltorsion (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.TOPOLOGICALTORSION", false]], "transform() (baybe.objectives.base.objective method)": [[122, "baybe.objectives.base.Objective.transform", false]], "transform() (baybe.objectives.desirability.desirabilityobjective method)": [[125, "baybe.objectives.desirability.DesirabilityObjective.transform", false]], "transform() (baybe.objectives.pareto.paretoobjective method)": [[130, "baybe.objectives.pareto.ParetoObjective.transform", false]], "transform() (baybe.objectives.single.singletargetobjective method)": [[132, "baybe.objectives.single.SingleTargetObjective.transform", false]], "transform() (baybe.parameters.base.discreteparameter method)": [[138, "baybe.parameters.base.DiscreteParameter.transform", false]], "transform() (baybe.parameters.categorical.categoricalparameter method)": [[141, "baybe.parameters.categorical.CategoricalParameter.transform", false]], "transform() (baybe.parameters.categorical.taskparameter method)": [[142, "baybe.parameters.categorical.TaskParameter.transform", false]], "transform() (baybe.parameters.custom.customdiscreteparameter method)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.transform", false]], "transform() (baybe.parameters.numerical.numericaldiscreteparameter method)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.transform", false]], "transform() (baybe.parameters.substance.substanceparameter method)": [[155, "baybe.parameters.substance.SubstanceParameter.transform", false]], "transform() (baybe.searchspace.continuous.subspacecontinuous method)": [[213, "baybe.searchspace.continuous.SubspaceContinuous.transform", false]], "transform() (baybe.searchspace.core.searchspace method)": [[215, "baybe.searchspace.core.SearchSpace.transform", false]], "transform() (baybe.searchspace.discrete.subspacediscrete method)": [[221, "baybe.searchspace.discrete.SubspaceDiscrete.transform", false]], "transform() (baybe.targets.base.target method)": [[297, "baybe.targets.base.Target.transform", false]], "transform() (baybe.targets.binary.binarytarget method)": [[299, "baybe.targets.binary.BinaryTarget.transform", false]], "transform() (baybe.targets.numerical.numericaltarget method)": [[305, "baybe.targets.numerical.NumericalTarget.transform", false]], "transform() (baybe.utils.clustering_algorithms.third_party.kmedoids.kmedoids method)": [[347, "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform", false]], "transform() (baybe.utils.scaling.columntransformer method)": [[391, "baybe.utils.scaling.ColumnTransformer.transform", false]], "transform_target_columns() (in module baybe.utils.dataframe)": [[368, "baybe.utils.dataframe.transform_target_columns", false]], "transformation (baybe.targets.numerical.numericaltarget attribute)": [[305, "baybe.targets.numerical.NumericalTarget.transformation", false]], "triangular (baybe.targets.enum.targettransformation attribute)": [[303, "baybe.targets.enum.TargetTransformation.TRIANGULAR", false]], "triangular_transform() (in module baybe.targets.transforms)": [[309, "baybe.targets.transforms.triangular_transform", false]], "twophasemetarecommender (class in baybe.recommenders.meta.sequential)": [[186, "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender", false]], "type (baybe.searchspace.core.searchspace property)": [[215, "baybe.searchspace.core.SearchSpace.type", false]], "type_validation_converter (in module baybe.surrogates.validation)": [[293, "baybe.surrogates.validation.type_validation_converter", false]], "unidentifiedsubclasserror": [[90, "baybe.exceptions.UnidentifiedSubclassError", false]], "unmatchedattributeerror": [[91, "baybe.exceptions.UnmatchedAttributeError", false]], "unspecified (in module baybe.utils.basic)": [[321, "baybe.utils.basic.UNSPECIFIED", false]], "unspecifiedtype (class in baybe.utils.basic)": [[322, "baybe.utils.basic.UnspecifiedType", false]], "unstructure_base() (in module baybe.serialization.core)": [[236, "baybe.serialization.core.unstructure_base", false]], "unusedobjectwarning": [[92, "baybe.exceptions.UnusedObjectWarning", false]], "update_measurements() (baybe.campaign.campaign method)": [[31, "baybe.campaign.Campaign.update_measurements", false]], "upper (baybe.utils.interval.interval attribute)": [[371, "baybe.utils.interval.Interval.upper", false]], "upperconfidencebound (class in baybe.acquisition.acqfs)": [[8, "baybe.acquisition.acqfs.UpperConfidenceBound", false]], "use_fallback_constructor_hook() (in module baybe.utils.interval)": [[373, "baybe.utils.interval.use_fallback_constructor_hook", false]], "usr (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.USR", false]], "usrcat (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.USRCAT", false]], "validate_cardinality_constraint_parameter_bounds() (in module baybe.constraints.validation)": [[63, "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", false]], "validate_cardinality_constraints_are_nonoverlapping() (in module baybe.constraints.validation)": [[64, "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", false]], "validate_compatibility() (baybe.surrogates.custom.customonnxsurrogate class method)": [[262, "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility", false]], "validate_config() (baybe.campaign.campaign class method)": [[31, "baybe.campaign.Campaign.validate_config", false]], "validate_constraints() (in module baybe.constraints.validation)": [[65, "baybe.constraints.validation.validate_constraints", false]], "validate_custom_architecture_cls() (in module baybe.surrogates.validation)": [[294, "baybe.surrogates.validation.validate_custom_architecture_cls", false]], "validate_decorrelation() (in module baybe.parameters.validation)": [[162, "baybe.parameters.validation.validate_decorrelation", false]], "validate_is_finite() (in module baybe.parameters.validation)": [[163, "baybe.parameters.validation.validate_is_finite", false]], "validate_not_nan() (in module baybe.utils.validation)": [[399, "baybe.utils.validation.validate_not_nan", false]], "validate_parameter_input() (in module baybe.utils.validation)": [[400, "baybe.utils.validation.validate_parameter_input", false]], "validate_parameter_names() (in module baybe.searchspace.validation)": [[227, "baybe.searchspace.validation.validate_parameter_names", false]], "validate_parameters() (in module baybe.searchspace.validation)": [[228, "baybe.searchspace.validation.validate_parameters", false]], "validate_searchspace_from_config() (in module baybe.searchspace.core)": [[218, "baybe.searchspace.core.validate_searchspace_from_config", false]], "validate_simplex_subspace_from_config() (in module baybe.searchspace.discrete)": [[224, "baybe.searchspace.discrete.validate_simplex_subspace_from_config", false]], "validate_target_input() (in module baybe.utils.validation)": [[401, "baybe.utils.validation.validate_target_input", false]], "validate_target_names() (in module baybe.objectives.validation)": [[134, "baybe.objectives.validation.validate_target_names", false]], "validate_unique_values() (in module baybe.parameters.validation)": [[164, "baybe.parameters.validation.validate_unique_values", false]], "validator (baybe.constraints.discrete.discretecustomconstraint attribute)": [[52, "baybe.constraints.discrete.DiscreteCustomConstraint.validator", false]], "values (baybe.parameters.base.discreteparameter property)": [[138, "baybe.parameters.base.DiscreteParameter.values", false]], "values (baybe.parameters.categorical.categoricalparameter property)": [[141, "baybe.parameters.categorical.CategoricalParameter.values", false]], "values (baybe.parameters.categorical.taskparameter property)": [[142, "baybe.parameters.categorical.TaskParameter.values", false]], "values (baybe.parameters.custom.customdiscreteparameter property)": [[144, "baybe.parameters.custom.CustomDiscreteParameter.values", false]], "values (baybe.parameters.numerical.numericaldiscreteparameter property)": [[152, "baybe.parameters.numerical.NumericalDiscreteParameter.values", false]], "values (baybe.parameters.substance.substanceparameter property)": [[155, "baybe.parameters.substance.SubstanceParameter.values", false]], "variance_initial_value (baybe.kernels.basic.linearkernel attribute)": [[108, "baybe.kernels.basic.LinearKernel.variance_initial_value", false]], "variance_prior (baybe.kernels.basic.linearkernel attribute)": [[108, "baybe.kernels.basic.LinearKernel.variance_prior", false]], "varname_numpy_use_single_precision (in module baybe.utils.numerical)": [[379, "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", false]], "varname_torch_use_single_precision (in module baybe.utils.torch)": [[394, "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", false]], "vsa (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.VSA", false]], "weights (baybe.objectives.desirability.desirabilityobjective attribute)": [[125, "baybe.objectives.desirability.DesirabilityObjective.weights", false]], "whim (baybe.parameters.enum.substanceencoding attribute)": [[149, "baybe.parameters.enum.SubstanceEncoding.WHIM", false]]}, "objects": {"": [[0, 0, 0, "-", "baybe"]], "baybe": [[1, 0, 0, "-", "acquisition"], [30, 0, 0, "-", "campaign"], [32, 0, 0, "-", "constraints"], [66, 0, 0, "-", "exceptions"], [93, 0, 0, "-", "insights"], [102, 0, 0, "-", "kernels"], [120, 0, 0, "-", "objectives"], [135, 0, 0, "-", "parameters"], [165, 0, 0, "-", "priors"], [176, 0, 0, "-", "recommenders"], [211, 0, 0, "-", "searchspace"], [229, 0, 0, "-", "serialization"], [242, 0, 0, "-", "simulation"], [251, 0, 0, "-", "surrogates"], [295, 0, 0, "-", "targets"], [310, 0, 0, "-", "telemetry"], [315, 0, 0, "-", "utils"]], "baybe.acquisition": [[2, 0, 0, "-", "acqfs"], [23, 0, 0, "-", "base"], [25, 0, 0, "-", "partial"], [27, 0, 0, "-", "utils"]], "baybe.acquisition.acqfs": [[3, 1, 1, "", "ExpectedImprovement"], [4, 1, 1, "", "LogExpectedImprovement"], [5, 1, 1, "", "PosteriorMean"], [6, 1, 1, "", "PosteriorStandardDeviation"], [7, 1, 1, "", "ProbabilityOfImprovement"], [8, 1, 1, "", "UpperConfidenceBound"], [9, 1, 1, "", "qExpectedImprovement"], [10, 1, 1, "", "qKnowledgeGradient"], [11, 1, 1, "", "qLogExpectedImprovement"], [12, 1, 1, "", "qLogNParEGO"], [13, 1, 1, "", "qLogNoisyExpectedHypervolumeImprovement"], [14, 1, 1, "", "qLogNoisyExpectedImprovement"], [15, 1, 1, "", "qNegIntegratedPosteriorVariance"], [16, 1, 1, "", "qNoisyExpectedHypervolumeImprovement"], [17, 1, 1, "", "qNoisyExpectedImprovement"], [18, 1, 1, "", "qPosteriorStandardDeviation"], [19, 1, 1, "", "qProbabilityOfImprovement"], [20, 1, 1, "", "qSimpleRegret"], [21, 1, 1, "", "qThompsonSampling"], [22, 1, 1, "", "qUpperConfidenceBound"]], "baybe.acquisition.acqfs.ExpectedImprovement": [[3, 2, 1, "", "__init__"], [3, 3, 1, "", "abbreviation"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "from_dict"], [3, 2, 1, "", "from_json"], [3, 3, 1, "", "supports_multi_output"], [3, 2, 1, "", "to_botorch"], [3, 2, 1, "", "to_dict"], [3, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ExpectedImprovement.evaluate.params": [[3, 4, 1, "", "candidates"], [3, 4, 1, "", "jointly"], [3, 4, 1, "", "measurements"], [3, 4, 1, "", "objective"], [3, 4, 1, "", "pending_experiments"], [3, 4, 1, "", "searchspace"], [3, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_dict.params": [[3, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ExpectedImprovement.from_json.params": [[3, 4, 1, "", "string"]], "baybe.acquisition.acqfs.LogExpectedImprovement": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "abbreviation"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "from_json"], [4, 3, 1, "", "supports_multi_output"], [4, 2, 1, "", "to_botorch"], [4, 2, 1, "", "to_dict"], [4, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.LogExpectedImprovement.evaluate.params": [[4, 4, 1, "", "candidates"], [4, 4, 1, "", "jointly"], [4, 4, 1, "", "measurements"], [4, 4, 1, "", "objective"], [4, 4, 1, "", "pending_experiments"], [4, 4, 1, "", "searchspace"], [4, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_dict.params": [[4, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.LogExpectedImprovement.from_json.params": [[4, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorMean": [[5, 2, 1, "", "__init__"], [5, 3, 1, "", "abbreviation"], [5, 2, 1, "", "evaluate"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "from_json"], [5, 3, 1, "", "supports_multi_output"], [5, 2, 1, "", "to_botorch"], [5, 2, 1, "", "to_dict"], [5, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorMean.evaluate.params": [[5, 4, 1, "", "candidates"], [5, 4, 1, "", "jointly"], [5, 4, 1, "", "measurements"], [5, 4, 1, "", "objective"], [5, 4, 1, "", "pending_experiments"], [5, 4, 1, "", "searchspace"], [5, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorMean.from_dict.params": [[5, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorMean.from_json.params": [[5, 4, 1, "", "string"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "abbreviation"], [6, 2, 1, "", "evaluate"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "from_json"], [6, 3, 1, "", "maximize"], [6, 3, 1, "", "supports_multi_output"], [6, 2, 1, "", "to_botorch"], [6, 2, 1, "", "to_dict"], [6, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.evaluate.params": [[6, 4, 1, "", "candidates"], [6, 4, 1, "", "jointly"], [6, 4, 1, "", "measurements"], [6, 4, 1, "", "objective"], [6, 4, 1, "", "pending_experiments"], [6, 4, 1, "", "searchspace"], [6, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_dict.params": [[6, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.PosteriorStandardDeviation.from_json.params": [[6, 4, 1, "", "string"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement": [[7, 2, 1, "", "__init__"], [7, 3, 1, "", "abbreviation"], [7, 2, 1, "", "evaluate"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 3, 1, "", "supports_multi_output"], [7, 2, 1, "", "to_botorch"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.evaluate.params": [[7, 4, 1, "", "candidates"], [7, 4, 1, "", "jointly"], [7, 4, 1, "", "measurements"], [7, 4, 1, "", "objective"], [7, 4, 1, "", "pending_experiments"], [7, 4, 1, "", "searchspace"], [7, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_dict.params": [[7, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.ProbabilityOfImprovement.from_json.params": [[7, 4, 1, "", "string"]], "baybe.acquisition.acqfs.UpperConfidenceBound": [[8, 2, 1, "", "__init__"], [8, 3, 1, "", "abbreviation"], [8, 3, 1, "", "beta"], [8, 2, 1, "", "evaluate"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_json"], [8, 3, 1, "", "supports_multi_output"], [8, 2, 1, "", "to_botorch"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.UpperConfidenceBound.evaluate.params": [[8, 4, 1, "", "candidates"], [8, 4, 1, "", "jointly"], [8, 4, 1, "", "measurements"], [8, 4, 1, "", "objective"], [8, 4, 1, "", "pending_experiments"], [8, 4, 1, "", "searchspace"], [8, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_dict.params": [[8, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.UpperConfidenceBound.from_json.params": [[8, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qExpectedImprovement": [[9, 2, 1, "", "__init__"], [9, 3, 1, "", "abbreviation"], [9, 2, 1, "", "evaluate"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_json"], [9, 3, 1, "", "supports_multi_output"], [9, 2, 1, "", "to_botorch"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qExpectedImprovement.evaluate.params": [[9, 4, 1, "", "candidates"], [9, 4, 1, "", "jointly"], [9, 4, 1, "", "measurements"], [9, 4, 1, "", "objective"], [9, 4, 1, "", "pending_experiments"], [9, 4, 1, "", "searchspace"], [9, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_dict.params": [[9, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qExpectedImprovement.from_json.params": [[9, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qKnowledgeGradient": [[10, 2, 1, "", "__init__"], [10, 3, 1, "", "abbreviation"], [10, 2, 1, "", "evaluate"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 3, 1, "", "num_fantasies"], [10, 3, 1, "", "supports_multi_output"], [10, 2, 1, "", "to_botorch"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qKnowledgeGradient.evaluate.params": [[10, 4, 1, "", "candidates"], [10, 4, 1, "", "jointly"], [10, 4, 1, "", "measurements"], [10, 4, 1, "", "objective"], [10, 4, 1, "", "pending_experiments"], [10, 4, 1, "", "searchspace"], [10, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_dict.params": [[10, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qKnowledgeGradient.from_json.params": [[10, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogExpectedImprovement": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "abbreviation"], [11, 2, 1, "", "evaluate"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_json"], [11, 3, 1, "", "supports_multi_output"], [11, 2, 1, "", "to_botorch"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.evaluate.params": [[11, 4, 1, "", "candidates"], [11, 4, 1, "", "jointly"], [11, 4, 1, "", "measurements"], [11, 4, 1, "", "objective"], [11, 4, 1, "", "pending_experiments"], [11, 4, 1, "", "searchspace"], [11, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_dict.params": [[11, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogExpectedImprovement.from_json.params": [[11, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNParEGO": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "abbreviation"], [12, 2, 1, "", "evaluate"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_json"], [12, 3, 1, "", "prune_baseline"], [12, 3, 1, "", "supports_multi_output"], [12, 2, 1, "", "to_botorch"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNParEGO.evaluate.params": [[12, 4, 1, "", "candidates"], [12, 4, 1, "", "jointly"], [12, 4, 1, "", "measurements"], [12, 4, 1, "", "objective"], [12, 4, 1, "", "pending_experiments"], [12, 4, 1, "", "searchspace"], [12, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNParEGO.from_dict.params": [[12, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNParEGO.from_json.params": [[12, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement": [[13, 2, 1, "", "__init__"], [13, 3, 1, "", "abbreviation"], [13, 2, 1, "", "compute_ref_point"], [13, 2, 1, "", "evaluate"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "from_json"], [13, 3, 1, "", "prune_baseline"], [13, 3, 1, "", "reference_point"], [13, 3, 1, "", "supports_multi_output"], [13, 2, 1, "", "to_botorch"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[13, 4, 1, "", "array"], [13, 4, 1, "", "factor"], [13, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.evaluate.params": [[13, 4, 1, "", "candidates"], [13, 4, 1, "", "jointly"], [13, 4, 1, "", "measurements"], [13, 4, 1, "", "objective"], [13, 4, 1, "", "pending_experiments"], [13, 4, 1, "", "searchspace"], [13, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_dict.params": [[13, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedHypervolumeImprovement.from_json.params": [[13, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "abbreviation"], [14, 2, 1, "", "evaluate"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 3, 1, "", "prune_baseline"], [14, 3, 1, "", "supports_multi_output"], [14, 2, 1, "", "to_botorch"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.evaluate.params": [[14, 4, 1, "", "candidates"], [14, 4, 1, "", "jointly"], [14, 4, 1, "", "measurements"], [14, 4, 1, "", "objective"], [14, 4, 1, "", "pending_experiments"], [14, 4, 1, "", "searchspace"], [14, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_dict.params": [[14, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qLogNoisyExpectedImprovement.from_json.params": [[14, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "abbreviation"], [15, 2, 1, "", "evaluate"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "from_json"], [15, 2, 1, "", "get_integration_points"], [15, 3, 1, "", "sampling_fraction"], [15, 3, 1, "", "sampling_method"], [15, 3, 1, "", "sampling_n_points"], [15, 3, 1, "", "supports_multi_output"], [15, 2, 1, "", "to_botorch"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.evaluate.params": [[15, 4, 1, "", "candidates"], [15, 4, 1, "", "jointly"], [15, 4, 1, "", "measurements"], [15, 4, 1, "", "objective"], [15, 4, 1, "", "pending_experiments"], [15, 4, 1, "", "searchspace"], [15, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_dict.params": [[15, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.from_json.params": [[15, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNegIntegratedPosteriorVariance.get_integration_points.params": [[15, 4, 1, "", "searchspace"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "abbreviation"], [16, 2, 1, "", "compute_ref_point"], [16, 2, 1, "", "evaluate"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_json"], [16, 3, 1, "", "prune_baseline"], [16, 3, 1, "", "reference_point"], [16, 3, 1, "", "supports_multi_output"], [16, 2, 1, "", "to_botorch"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.compute_ref_point.params": [[16, 4, 1, "", "array"], [16, 4, 1, "", "factor"], [16, 4, 1, "", "maximize"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.evaluate.params": [[16, 4, 1, "", "candidates"], [16, 4, 1, "", "jointly"], [16, 4, 1, "", "measurements"], [16, 4, 1, "", "objective"], [16, 4, 1, "", "pending_experiments"], [16, 4, 1, "", "searchspace"], [16, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_dict.params": [[16, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedHypervolumeImprovement.from_json.params": [[16, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "abbreviation"], [17, 2, 1, "", "evaluate"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_json"], [17, 3, 1, "", "prune_baseline"], [17, 3, 1, "", "supports_multi_output"], [17, 2, 1, "", "to_botorch"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.evaluate.params": [[17, 4, 1, "", "candidates"], [17, 4, 1, "", "jointly"], [17, 4, 1, "", "measurements"], [17, 4, 1, "", "objective"], [17, 4, 1, "", "pending_experiments"], [17, 4, 1, "", "searchspace"], [17, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_dict.params": [[17, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qNoisyExpectedImprovement.from_json.params": [[17, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "abbreviation"], [18, 2, 1, "", "evaluate"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_json"], [18, 3, 1, "", "supports_multi_output"], [18, 2, 1, "", "to_botorch"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.evaluate.params": [[18, 4, 1, "", "candidates"], [18, 4, 1, "", "jointly"], [18, 4, 1, "", "measurements"], [18, 4, 1, "", "objective"], [18, 4, 1, "", "pending_experiments"], [18, 4, 1, "", "searchspace"], [18, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_dict.params": [[18, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qPosteriorStandardDeviation.from_json.params": [[18, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "abbreviation"], [19, 2, 1, "", "evaluate"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_json"], [19, 3, 1, "", "supports_multi_output"], [19, 2, 1, "", "to_botorch"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.evaluate.params": [[19, 4, 1, "", "candidates"], [19, 4, 1, "", "jointly"], [19, 4, 1, "", "measurements"], [19, 4, 1, "", "objective"], [19, 4, 1, "", "pending_experiments"], [19, 4, 1, "", "searchspace"], [19, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_dict.params": [[19, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qProbabilityOfImprovement.from_json.params": [[19, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qSimpleRegret": [[20, 2, 1, "", "__init__"], [20, 3, 1, "", "abbreviation"], [20, 2, 1, "", "evaluate"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_json"], [20, 3, 1, "", "supports_multi_output"], [20, 2, 1, "", "to_botorch"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qSimpleRegret.evaluate.params": [[20, 4, 1, "", "candidates"], [20, 4, 1, "", "jointly"], [20, 4, 1, "", "measurements"], [20, 4, 1, "", "objective"], [20, 4, 1, "", "pending_experiments"], [20, 4, 1, "", "searchspace"], [20, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qSimpleRegret.from_dict.params": [[20, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qSimpleRegret.from_json.params": [[20, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qThompsonSampling": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "abbreviation"], [21, 2, 1, "", "evaluate"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_json"], [21, 3, 1, "", "n_mc_samples"], [21, 3, 1, "", "supports_multi_output"], [21, 2, 1, "", "to_botorch"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qThompsonSampling.evaluate.params": [[21, 4, 1, "", "candidates"], [21, 4, 1, "", "jointly"], [21, 4, 1, "", "measurements"], [21, 4, 1, "", "objective"], [21, 4, 1, "", "pending_experiments"], [21, 4, 1, "", "searchspace"], [21, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qThompsonSampling.from_dict.params": [[21, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qThompsonSampling.from_json.params": [[21, 4, 1, "", "string"]], "baybe.acquisition.acqfs.qUpperConfidenceBound": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "abbreviation"], [22, 3, 1, "", "beta"], [22, 2, 1, "", "evaluate"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_json"], [22, 3, 1, "", "supports_multi_output"], [22, 2, 1, "", "to_botorch"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_json"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.evaluate.params": [[22, 4, 1, "", "candidates"], [22, 4, 1, "", "jointly"], [22, 4, 1, "", "measurements"], [22, 4, 1, "", "objective"], [22, 4, 1, "", "pending_experiments"], [22, 4, 1, "", "searchspace"], [22, 4, 1, "", "surrogate"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_dict.params": [[22, 4, 1, "", "dictionary"]], "baybe.acquisition.acqfs.qUpperConfidenceBound.from_json.params": [[22, 4, 1, "", "string"]], "baybe.acquisition.base": [[24, 1, 1, "", "AcquisitionFunction"]], "baybe.acquisition.base.AcquisitionFunction": [[24, 2, 1, "", "__init__"], [24, 3, 1, "", "abbreviation"], [24, 2, 1, "", "evaluate"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_json"], [24, 3, 1, "", "supports_multi_output"], [24, 2, 1, "", "to_botorch"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_json"]], "baybe.acquisition.base.AcquisitionFunction.evaluate.params": [[24, 4, 1, "", "candidates"], [24, 4, 1, "", "jointly"], [24, 4, 1, "", "measurements"], [24, 4, 1, "", "objective"], [24, 4, 1, "", "pending_experiments"], [24, 4, 1, "", "searchspace"], [24, 4, 1, "", "surrogate"]], "baybe.acquisition.base.AcquisitionFunction.from_dict.params": [[24, 4, 1, "", "dictionary"]], "baybe.acquisition.base.AcquisitionFunction.from_json.params": [[24, 4, 1, "", "string"]], "baybe.acquisition.partial": [[26, 1, 1, "", "PartialAcquisitionFunction"]], "baybe.acquisition.partial.PartialAcquisitionFunction": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "botorch_acqf"], [26, 3, 1, "", "pin_discrete"], [26, 3, 1, "", "pinned_part"], [26, 2, 1, "", "set_X_pending"]], "baybe.acquisition.partial.PartialAcquisitionFunction.set_X_pending.params": [[26, 4, 1, "", "X_pending"]], "baybe.acquisition.utils": [[28, 5, 1, "", "convert_acqf"], [29, 5, 1, "", "str_to_acqf"]], "baybe.campaign": [[31, 1, 1, "", "Campaign"]], "baybe.campaign.Campaign": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "acquisition_values"], [31, 2, 1, "", "add_measurements"], [31, 3, 1, "", "allow_recommending_already_measured"], [31, 3, 1, "", "allow_recommending_already_recommended"], [31, 3, 1, "", "allow_recommending_pending_experiments"], [31, 2, 1, "", "from_config"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 2, 1, "", "get_acquisition_function"], [31, 2, 1, "", "get_surrogate"], [31, 2, 1, "", "joint_acquisition_value"], [31, 6, 1, "", "measurements"], [31, 3, 1, "", "n_batches_done"], [31, 3, 1, "", "n_fits_done"], [31, 3, 1, "", "objective"], [31, 6, 1, "", "parameters"], [31, 2, 1, "", "posterior"], [31, 2, 1, "", "posterior_stats"], [31, 2, 1, "", "recommend"], [31, 3, 1, "", "recommender"], [31, 3, 1, "", "searchspace"], [31, 6, 1, "", "targets"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_json"], [31, 2, 1, "", "toggle_discrete_candidates"], [31, 2, 1, "", "update_measurements"], [31, 2, 1, "", "validate_config"]], "baybe.campaign.Campaign.acquisition_values.params": [[31, 4, 1, "", "acquisition_function"], [31, 4, 1, "", "batch_size"], [31, 4, 1, "", "candidates"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.add_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.from_config.params": [[31, 4, 1, "", "config_json"]], "baybe.campaign.Campaign.from_dict.params": [[31, 4, 1, "", "dictionary"]], "baybe.campaign.Campaign.from_json.params": [[31, 4, 1, "", "string"]], "baybe.campaign.Campaign.get_acquisition_function.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.get_surrogate.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.posterior.params": [[31, 4, 1, "", "candidates"]], "baybe.campaign.Campaign.posterior_stats.params": [[31, 4, 1, "", "candidates"], [31, 4, 1, "", "stats"]], "baybe.campaign.Campaign.recommend.params": [[31, 4, 1, "", "batch_size"], [31, 4, 1, "", "pending_experiments"]], "baybe.campaign.Campaign.toggle_discrete_candidates.params": [[31, 4, 1, "", "complement"], [31, 4, 1, "", "constraints"], [31, 4, 1, "", "dry_run"], [31, 4, 1, "", "exclude"]], "baybe.campaign.Campaign.update_measurements.params": [[31, 4, 1, "", "data"], [31, 4, 1, "", "numerical_measurements_must_be_within_tolerance"]], "baybe.campaign.Campaign.validate_config.params": [[31, 4, 1, "", "config_json"]], "baybe.constraints": [[33, 0, 0, "-", "base"], [39, 0, 0, "-", "conditions"], [43, 0, 0, "-", "continuous"], [46, 0, 0, "-", "deprecation"], [50, 0, 0, "-", "discrete"], [60, 0, 0, "-", "utils"], [62, 0, 0, "-", "validation"]], "baybe.constraints.base": [[34, 1, 1, "", "CardinalityConstraint"], [35, 1, 1, "", "Constraint"], [36, 1, 1, "", "ContinuousConstraint"], [37, 1, 1, "", "ContinuousNonlinearConstraint"], [38, 1, 1, "", "DiscreteConstraint"]], "baybe.constraints.base.CardinalityConstraint": [[34, 2, 1, "", "__init__"], [34, 3, 1, "", "eval_during_augmentation"], [34, 3, 1, "", "eval_during_creation"], [34, 3, 1, "", "eval_during_modeling"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_json"], [34, 6, 1, "", "is_continuous"], [34, 6, 1, "", "is_discrete"], [34, 3, 1, "", "max_cardinality"], [34, 3, 1, "", "min_cardinality"], [34, 3, 1, "", "numerical_only"], [34, 3, 1, "", "parameters"], [34, 2, 1, "", "summary"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_json"]], "baybe.constraints.base.CardinalityConstraint.from_dict.params": [[34, 4, 1, "", "dictionary"]], "baybe.constraints.base.CardinalityConstraint.from_json.params": [[34, 4, 1, "", "string"]], "baybe.constraints.base.Constraint": [[35, 2, 1, "", "__init__"], [35, 3, 1, "", "eval_during_augmentation"], [35, 3, 1, "", "eval_during_creation"], [35, 3, 1, "", "eval_during_modeling"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_json"], [35, 6, 1, "", "is_continuous"], [35, 6, 1, "", "is_discrete"], [35, 3, 1, "", "numerical_only"], [35, 3, 1, "", "parameters"], [35, 2, 1, "", "summary"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_json"]], "baybe.constraints.base.Constraint.from_dict.params": [[35, 4, 1, "", "dictionary"]], "baybe.constraints.base.Constraint.from_json.params": [[35, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousConstraint": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "eval_during_augmentation"], [36, 3, 1, "", "eval_during_creation"], [36, 3, 1, "", "eval_during_modeling"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_json"], [36, 6, 1, "", "is_continuous"], [36, 6, 1, "", "is_discrete"], [36, 3, 1, "", "numerical_only"], [36, 3, 1, "", "parameters"], [36, 2, 1, "", "summary"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousConstraint.from_dict.params": [[36, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousConstraint.from_json.params": [[36, 4, 1, "", "string"]], "baybe.constraints.base.ContinuousNonlinearConstraint": [[37, 2, 1, "", "__init__"], [37, 3, 1, "", "eval_during_augmentation"], [37, 3, 1, "", "eval_during_creation"], [37, 3, 1, "", "eval_during_modeling"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_json"], [37, 6, 1, "", "is_continuous"], [37, 6, 1, "", "is_discrete"], [37, 3, 1, "", "numerical_only"], [37, 3, 1, "", "parameters"], [37, 2, 1, "", "summary"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_json"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_dict.params": [[37, 4, 1, "", "dictionary"]], "baybe.constraints.base.ContinuousNonlinearConstraint.from_json.params": [[37, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint": [[38, 2, 1, "", "__init__"], [38, 3, 1, "", "eval_during_augmentation"], [38, 3, 1, "", "eval_during_creation"], [38, 3, 1, "", "eval_during_modeling"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_json"], [38, 2, 1, "", "get_invalid"], [38, 2, 1, "", "get_invalid_polars"], [38, 2, 1, "", "get_valid"], [38, 6, 1, "", "is_continuous"], [38, 6, 1, "", "is_discrete"], [38, 3, 1, "", "numerical_only"], [38, 3, 1, "", "parameters"], [38, 2, 1, "", "summary"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_json"]], "baybe.constraints.base.DiscreteConstraint.from_dict.params": [[38, 4, 1, "", "dictionary"]], "baybe.constraints.base.DiscreteConstraint.from_json.params": [[38, 4, 1, "", "string"]], "baybe.constraints.base.DiscreteConstraint.get_invalid.params": [[38, 4, 1, "", "data"]], "baybe.constraints.base.DiscreteConstraint.get_valid.params": [[38, 4, 1, "", "df"]], "baybe.constraints.conditions": [[40, 1, 1, "", "Condition"], [41, 1, 1, "", "SubSelectionCondition"], [42, 1, 1, "", "ThresholdCondition"]], "baybe.constraints.conditions.Condition": [[40, 2, 1, "", "evaluate"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_json"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_json"], [40, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.Condition.evaluate.params": [[40, 4, 1, "", "data"]], "baybe.constraints.conditions.Condition.from_dict.params": [[40, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.Condition.from_json.params": [[40, 4, 1, "", "string"]], "baybe.constraints.conditions.Condition.to_polars.params": [[40, 4, 1, "", "expr"]], "baybe.constraints.conditions.SubSelectionCondition": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "evaluate"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_json"], [41, 6, 1, "", "selection"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_json"], [41, 2, 1, "", "to_polars"]], "baybe.constraints.conditions.SubSelectionCondition.evaluate.params": [[41, 4, 1, "", "data"]], "baybe.constraints.conditions.SubSelectionCondition.from_dict.params": [[41, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.SubSelectionCondition.from_json.params": [[41, 4, 1, "", "string"]], "baybe.constraints.conditions.SubSelectionCondition.to_polars.params": [[41, 4, 1, "", "expr"]], "baybe.constraints.conditions.ThresholdCondition": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "evaluate"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_json"], [42, 3, 1, "", "operator"], [42, 3, 1, "", "threshold"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_json"], [42, 2, 1, "", "to_polars"], [42, 3, 1, "", "tolerance"]], "baybe.constraints.conditions.ThresholdCondition.evaluate.params": [[42, 4, 1, "", "data"]], "baybe.constraints.conditions.ThresholdCondition.from_dict.params": [[42, 4, 1, "", "dictionary"]], "baybe.constraints.conditions.ThresholdCondition.from_json.params": [[42, 4, 1, "", "string"]], "baybe.constraints.conditions.ThresholdCondition.to_polars.params": [[42, 4, 1, "", "expr"]], "baybe.constraints.continuous": [[44, 1, 1, "", "ContinuousCardinalityConstraint"], [45, 1, 1, "", "ContinuousLinearConstraint"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint": [[44, 2, 1, "", "__init__"], [44, 3, 1, "", "eval_during_augmentation"], [44, 3, 1, "", "eval_during_creation"], [44, 3, 1, "", "eval_during_modeling"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_json"], [44, 2, 1, "", "get_absolute_thresholds"], [44, 2, 1, "", "inactive_parameter_combinations"], [44, 6, 1, "", "is_continuous"], [44, 6, 1, "", "is_discrete"], [44, 3, 1, "", "max_cardinality"], [44, 3, 1, "", "min_cardinality"], [44, 6, 1, "", "n_inactive_parameter_combinations"], [44, 3, 1, "", "numerical_only"], [44, 3, 1, "", "parameters"], [44, 3, 1, "", "relative_threshold"], [44, 2, 1, "", "sample_inactive_parameters"], [44, 2, 1, "", "summary"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_dict.params": [[44, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.from_json.params": [[44, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.get_absolute_thresholds.params": [[44, 4, 1, "", "bounds"]], "baybe.constraints.continuous.ContinuousCardinalityConstraint.sample_inactive_parameters.params": [[44, 4, 1, "", "batch_size"]], "baybe.constraints.continuous.ContinuousLinearConstraint": [[45, 2, 1, "", "__init__"], [45, 3, 1, "", "coefficients"], [45, 3, 1, "", "eval_during_augmentation"], [45, 3, 1, "", "eval_during_creation"], [45, 3, 1, "", "eval_during_modeling"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_json"], [45, 6, 1, "", "is_continuous"], [45, 6, 1, "", "is_discrete"], [45, 6, 1, "", "is_eq"], [45, 3, 1, "", "numerical_only"], [45, 3, 1, "", "operator"], [45, 3, 1, "", "parameters"], [45, 3, 1, "", "rhs"], [45, 2, 1, "", "summary"], [45, 2, 1, "", "to_botorch"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_json"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_dict.params": [[45, 4, 1, "", "dictionary"]], "baybe.constraints.continuous.ContinuousLinearConstraint.from_json.params": [[45, 4, 1, "", "string"]], "baybe.constraints.continuous.ContinuousLinearConstraint.to_botorch.params": [[45, 4, 1, "", "idx_offset"], [45, 4, 1, "", "parameters"]], "baybe.constraints.deprecation": [[47, 5, 1, "", "ContinuousLinearEqualityConstraint"], [48, 5, 1, "", "ContinuousLinearInequalityConstraint"], [49, 5, 1, "", "structure_constraints"]], "baybe.constraints.discrete": [[51, 1, 1, "", "DiscreteCardinalityConstraint"], [52, 1, 1, "", "DiscreteCustomConstraint"], [53, 1, 1, "", "DiscreteDependenciesConstraint"], [54, 1, 1, "", "DiscreteExcludeConstraint"], [55, 1, 1, "", "DiscreteLinkedParametersConstraint"], [56, 1, 1, "", "DiscreteNoLabelDuplicatesConstraint"], [57, 1, 1, "", "DiscretePermutationInvarianceConstraint"], [58, 1, 1, "", "DiscreteProductConstraint"], [59, 1, 1, "", "DiscreteSumConstraint"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint": [[51, 2, 1, "", "__init__"], [51, 3, 1, "", "eval_during_augmentation"], [51, 3, 1, "", "eval_during_creation"], [51, 3, 1, "", "eval_during_modeling"], [51, 2, 1, "", "from_dict"], [51, 2, 1, "", "from_json"], [51, 2, 1, "", "get_invalid"], [51, 2, 1, "", "get_invalid_polars"], [51, 2, 1, "", "get_valid"], [51, 6, 1, "", "is_continuous"], [51, 6, 1, "", "is_discrete"], [51, 3, 1, "", "max_cardinality"], [51, 3, 1, "", "min_cardinality"], [51, 3, 1, "", "numerical_only"], [51, 3, 1, "", "parameters"], [51, 2, 1, "", "summary"], [51, 2, 1, "", "to_dict"], [51, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_dict.params": [[51, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.from_json.params": [[51, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_invalid.params": [[51, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCardinalityConstraint.get_valid.params": [[51, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteCustomConstraint": [[52, 2, 1, "", "__init__"], [52, 3, 1, "", "eval_during_augmentation"], [52, 3, 1, "", "eval_during_creation"], [52, 3, 1, "", "eval_during_modeling"], [52, 2, 1, "", "from_dict"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get_invalid"], [52, 2, 1, "", "get_invalid_polars"], [52, 2, 1, "", "get_valid"], [52, 6, 1, "", "is_continuous"], [52, 6, 1, "", "is_discrete"], [52, 3, 1, "", "numerical_only"], [52, 3, 1, "", "parameters"], [52, 2, 1, "", "summary"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"], [52, 3, 1, "", "validator"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_dict.params": [[52, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteCustomConstraint.from_json.params": [[52, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_invalid.params": [[52, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteCustomConstraint.get_valid.params": [[52, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint": [[53, 2, 1, "", "__init__"], [53, 3, 1, "", "affected_parameters"], [53, 3, 1, "", "conditions"], [53, 3, 1, "", "eval_during_augmentation"], [53, 3, 1, "", "eval_during_creation"], [53, 3, 1, "", "eval_during_modeling"], [53, 2, 1, "", "from_dict"], [53, 2, 1, "", "from_json"], [53, 2, 1, "", "get_invalid"], [53, 2, 1, "", "get_invalid_polars"], [53, 2, 1, "", "get_valid"], [53, 6, 1, "", "is_continuous"], [53, 6, 1, "", "is_discrete"], [53, 3, 1, "", "numerical_only"], [53, 3, 1, "", "parameters"], [53, 3, 1, "", "permutation_invariant"], [53, 2, 1, "", "summary"], [53, 2, 1, "", "to_dict"], [53, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_dict.params": [[53, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.from_json.params": [[53, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_invalid.params": [[53, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteDependenciesConstraint.get_valid.params": [[53, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteExcludeConstraint": [[54, 2, 1, "", "__init__"], [54, 3, 1, "", "combiner"], [54, 3, 1, "", "conditions"], [54, 3, 1, "", "eval_during_augmentation"], [54, 3, 1, "", "eval_during_creation"], [54, 3, 1, "", "eval_during_modeling"], [54, 2, 1, "", "from_dict"], [54, 2, 1, "", "from_json"], [54, 2, 1, "", "get_invalid"], [54, 2, 1, "", "get_invalid_polars"], [54, 2, 1, "", "get_valid"], [54, 6, 1, "", "is_continuous"], [54, 6, 1, "", "is_discrete"], [54, 3, 1, "", "numerical_only"], [54, 3, 1, "", "parameters"], [54, 2, 1, "", "summary"], [54, 2, 1, "", "to_dict"], [54, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_dict.params": [[54, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.from_json.params": [[54, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_invalid.params": [[54, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteExcludeConstraint.get_valid.params": [[54, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint": [[55, 2, 1, "", "__init__"], [55, 3, 1, "", "eval_during_augmentation"], [55, 3, 1, "", "eval_during_creation"], [55, 3, 1, "", "eval_during_modeling"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "from_json"], [55, 2, 1, "", "get_invalid"], [55, 2, 1, "", "get_invalid_polars"], [55, 2, 1, "", "get_valid"], [55, 6, 1, "", "is_continuous"], [55, 6, 1, "", "is_discrete"], [55, 3, 1, "", "numerical_only"], [55, 3, 1, "", "parameters"], [55, 2, 1, "", "summary"], [55, 2, 1, "", "to_dict"], [55, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_dict.params": [[55, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.from_json.params": [[55, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_invalid.params": [[55, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteLinkedParametersConstraint.get_valid.params": [[55, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint": [[56, 2, 1, "", "__init__"], [56, 3, 1, "", "eval_during_augmentation"], [56, 3, 1, "", "eval_during_creation"], [56, 3, 1, "", "eval_during_modeling"], [56, 2, 1, "", "from_dict"], [56, 2, 1, "", "from_json"], [56, 2, 1, "", "get_invalid"], [56, 2, 1, "", "get_invalid_polars"], [56, 2, 1, "", "get_valid"], [56, 6, 1, "", "is_continuous"], [56, 6, 1, "", "is_discrete"], [56, 3, 1, "", "numerical_only"], [56, 3, 1, "", "parameters"], [56, 2, 1, "", "summary"], [56, 2, 1, "", "to_dict"], [56, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_dict.params": [[56, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.from_json.params": [[56, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_invalid.params": [[56, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteNoLabelDuplicatesConstraint.get_valid.params": [[56, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint": [[57, 2, 1, "", "__init__"], [57, 3, 1, "", "dependencies"], [57, 3, 1, "", "eval_during_augmentation"], [57, 3, 1, "", "eval_during_creation"], [57, 3, 1, "", "eval_during_modeling"], [57, 2, 1, "", "from_dict"], [57, 2, 1, "", "from_json"], [57, 2, 1, "", "get_invalid"], [57, 2, 1, "", "get_invalid_polars"], [57, 2, 1, "", "get_valid"], [57, 6, 1, "", "is_continuous"], [57, 6, 1, "", "is_discrete"], [57, 3, 1, "", "numerical_only"], [57, 3, 1, "", "parameters"], [57, 2, 1, "", "summary"], [57, 2, 1, "", "to_dict"], [57, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_dict.params": [[57, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.from_json.params": [[57, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_invalid.params": [[57, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscretePermutationInvarianceConstraint.get_valid.params": [[57, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteProductConstraint": [[58, 2, 1, "", "__init__"], [58, 3, 1, "", "condition"], [58, 3, 1, "", "eval_during_augmentation"], [58, 3, 1, "", "eval_during_creation"], [58, 3, 1, "", "eval_during_modeling"], [58, 2, 1, "", "from_dict"], [58, 2, 1, "", "from_json"], [58, 2, 1, "", "get_invalid"], [58, 2, 1, "", "get_invalid_polars"], [58, 2, 1, "", "get_valid"], [58, 6, 1, "", "is_continuous"], [58, 6, 1, "", "is_discrete"], [58, 3, 1, "", "numerical_only"], [58, 3, 1, "", "parameters"], [58, 2, 1, "", "summary"], [58, 2, 1, "", "to_dict"], [58, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_dict.params": [[58, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteProductConstraint.from_json.params": [[58, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_invalid.params": [[58, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteProductConstraint.get_valid.params": [[58, 4, 1, "", "df"]], "baybe.constraints.discrete.DiscreteSumConstraint": [[59, 2, 1, "", "__init__"], [59, 3, 1, "", "condition"], [59, 3, 1, "", "eval_during_augmentation"], [59, 3, 1, "", "eval_during_creation"], [59, 3, 1, "", "eval_during_modeling"], [59, 2, 1, "", "from_dict"], [59, 2, 1, "", "from_json"], [59, 2, 1, "", "get_invalid"], [59, 2, 1, "", "get_invalid_polars"], [59, 2, 1, "", "get_valid"], [59, 6, 1, "", "is_continuous"], [59, 6, 1, "", "is_discrete"], [59, 3, 1, "", "numerical_only"], [59, 3, 1, "", "parameters"], [59, 2, 1, "", "summary"], [59, 2, 1, "", "to_dict"], [59, 2, 1, "", "to_json"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_dict.params": [[59, 4, 1, "", "dictionary"]], "baybe.constraints.discrete.DiscreteSumConstraint.from_json.params": [[59, 4, 1, "", "string"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_invalid.params": [[59, 4, 1, "", "data"]], "baybe.constraints.discrete.DiscreteSumConstraint.get_valid.params": [[59, 4, 1, "", "df"]], "baybe.constraints.utils": [[61, 5, 1, "", "is_cardinality_fulfilled"]], "baybe.constraints.utils.is_cardinality_fulfilled.params": [[61, 4, 1, "", "check_maximum"], [61, 4, 1, "", "check_minimum"], [61, 4, 1, "", "df"], [61, 4, 1, "", "subspace_continuous"]], "baybe.constraints.validation": [[63, 5, 1, "", "validate_cardinality_constraint_parameter_bounds"], [64, 5, 1, "", "validate_cardinality_constraints_are_nonoverlapping"], [65, 5, 1, "", "validate_constraints"]], "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds.params": [[63, 4, 1, "", "constraint"], [63, 4, 1, "", "parameters"]], "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping.params": [[64, 4, 1, "", "constraints"]], "baybe.exceptions": [[67, 7, 1, "", "DeprecationError"], [68, 7, 1, "", "EmptySearchSpaceError"], [69, 7, 1, "", "IncompatibilityError"], [70, 7, 1, "", "IncompatibleAcquisitionFunctionError"], [71, 7, 1, "", "IncompatibleArgumentError"], [72, 7, 1, "", "IncompatibleExplainerError"], [73, 7, 1, "", "IncompatibleSearchSpaceError"], [74, 7, 1, "", "IncompatibleSurrogateError"], [75, 7, 1, "", "IncompleteMeasurementsError"], [76, 7, 1, "", "InfeasibilityError"], [77, 7, 1, "", "InputDataTypeWarning"], [78, 7, 1, "", "InvalidSurrogateModelError"], [79, 7, 1, "", "InvalidTargetValueError"], [80, 7, 1, "", "MinimumCardinalityViolatedWarning"], [81, 7, 1, "", "ModelNotTrainedError"], [82, 7, 1, "", "NoMCAcquisitionFunctionError"], [83, 7, 1, "", "NoMeasurementsError"], [84, 7, 1, "", "NoRecommendersLeftError"], [85, 7, 1, "", "NotEnoughPointsLeftError"], [86, 7, 1, "", "NothingToSimulateError"], [87, 7, 1, "", "NumericalUnderflowError"], [88, 7, 1, "", "OptionalImportError"], [89, 7, 1, "", "SearchSpaceMatchWarning"], [90, 7, 1, "", "UnidentifiedSubclassError"], [91, 7, 1, "", "UnmatchedAttributeError"], [92, 7, 1, "", "UnusedObjectWarning"]], "baybe.exceptions.DeprecationError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__new__"]], "baybe.exceptions.EmptySearchSpaceError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibilityError": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleAcquisitionFunctionError": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleArgumentError": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleExplainerError": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSearchSpaceError": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "__new__"]], "baybe.exceptions.IncompatibleSurrogateError": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "__new__"]], "baybe.exceptions.IncompleteMeasurementsError": [[75, 2, 1, "", "__init__"], [75, 2, 1, "", "__new__"]], "baybe.exceptions.InfeasibilityError": [[76, 2, 1, "", "__init__"], [76, 2, 1, "", "__new__"]], "baybe.exceptions.InputDataTypeWarning": [[77, 2, 1, "", "__init__"], [77, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidSurrogateModelError": [[78, 2, 1, "", "__init__"], [78, 2, 1, "", "__new__"]], "baybe.exceptions.InvalidTargetValueError": [[79, 2, 1, "", "__init__"], [79, 2, 1, "", "__new__"]], "baybe.exceptions.MinimumCardinalityViolatedWarning": [[80, 2, 1, "", "__init__"], [80, 2, 1, "", "__new__"]], "baybe.exceptions.ModelNotTrainedError": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"]], "baybe.exceptions.NoMCAcquisitionFunctionError": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__new__"]], "baybe.exceptions.NoMeasurementsError": [[83, 2, 1, "", "__init__"], [83, 2, 1, "", "__new__"]], "baybe.exceptions.NoRecommendersLeftError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"]], "baybe.exceptions.NotEnoughPointsLeftError": [[85, 2, 1, "", "__init__"], [85, 2, 1, "", "__new__"]], "baybe.exceptions.NothingToSimulateError": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__new__"]], "baybe.exceptions.NumericalUnderflowError": [[87, 2, 1, "", "__init__"], [87, 2, 1, "", "__new__"]], "baybe.exceptions.OptionalImportError": [[88, 2, 1, "", "__init__"], [88, 2, 1, "", "__new__"]], "baybe.exceptions.SearchSpaceMatchWarning": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "__new__"]], "baybe.exceptions.UnidentifiedSubclassError": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__new__"]], "baybe.exceptions.UnmatchedAttributeError": [[91, 2, 1, "", "__init__"], [91, 2, 1, "", "__new__"]], "baybe.exceptions.UnusedObjectWarning": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__new__"]], "baybe.insights": [[94, 0, 0, "-", "shap"]], "baybe.insights.shap": [[95, 8, 1, "", "EXPLAINERS"], [96, 8, 1, "", "NON_SHAP_EXPLAINERS"], [97, 1, 1, "", "SHAPInsight"], [98, 8, 1, "", "SHAP_EXPLAINERS"], [99, 8, 1, "", "SHAP_PLOTS"], [100, 5, 1, "", "is_shap_explainer"], [101, 5, 1, "", "make_explainer_for_surrogate"]], "baybe.insights.shap.SHAPInsight": [[97, 2, 1, "", "__init__"], [97, 3, 1, "", "background_data"], [97, 2, 1, "", "explain"], [97, 2, 1, "", "explain_target"], [97, 3, 1, "", "explainers"], [97, 2, 1, "", "from_campaign"], [97, 2, 1, "", "from_recommender"], [97, 2, 1, "", "from_surrogate"], [97, 2, 1, "", "plot"]], "baybe.insights.shap.SHAPInsight.explain.params": [[97, 4, 1, "", "data"]], "baybe.insights.shap.SHAPInsight.explain_target.params": [[97, 4, 1, "", "data"], [97, 4, 1, "", "target_index"]], "baybe.insights.shap.SHAPInsight.from_campaign.params": [[97, 4, 1, "", "campaign"], [97, 4, 1, "", "explainer_cls"], [97, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.from_recommender.params": [[97, 4, 1, "", "explainer_cls"], [97, 4, 1, "", "measurements"], [97, 4, 1, "", "objective"], [97, 4, 1, "", "recommender"], [97, 4, 1, "", "searchspace"], [97, 4, 1, "", "use_comp_rep"]], "baybe.insights.shap.SHAPInsight.plot.params": [[97, 4, 1, "", "**kwargs"], [97, 4, 1, "", "data"], [97, 4, 1, "", "explanation_index"], [97, 4, 1, "", "plot_type"], [97, 4, 1, "", "show"], [97, 4, 1, "", "target_index"]], "baybe.insights.shap.make_explainer_for_surrogate.params": [[101, 4, 1, "", "data"], [101, 4, 1, "", "explainer_cls"], [101, 4, 1, "", "surrogate"], [101, 4, 1, "", "use_comp_rep"]], "baybe.kernels": [[103, 0, 0, "-", "base"], [107, 0, 0, "-", "basic"], [116, 0, 0, "-", "composite"]], "baybe.kernels.base": [[104, 1, 1, "", "BasicKernel"], [105, 1, 1, "", "CompositeKernel"], [106, 1, 1, "", "Kernel"]], "baybe.kernels.base.BasicKernel": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "from_dict"], [104, 2, 1, "", "from_json"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "to_factory"], [104, 2, 1, "", "to_gpytorch"], [104, 2, 1, "", "to_json"]], "baybe.kernels.base.BasicKernel.from_dict.params": [[104, 4, 1, "", "dictionary"]], "baybe.kernels.base.BasicKernel.from_json.params": [[104, 4, 1, "", "string"]], "baybe.kernels.base.CompositeKernel": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "from_dict"], [105, 2, 1, "", "from_json"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "to_factory"], [105, 2, 1, "", "to_gpytorch"], [105, 2, 1, "", "to_json"]], "baybe.kernels.base.CompositeKernel.from_dict.params": [[105, 4, 1, "", "dictionary"]], "baybe.kernels.base.CompositeKernel.from_json.params": [[105, 4, 1, "", "string"]], "baybe.kernels.base.Kernel": [[106, 2, 1, "", "__init__"], [106, 2, 1, "", "from_dict"], [106, 2, 1, "", "from_json"], [106, 2, 1, "", "to_dict"], [106, 2, 1, "", "to_factory"], [106, 2, 1, "", "to_gpytorch"], [106, 2, 1, "", "to_json"]], "baybe.kernels.base.Kernel.from_dict.params": [[106, 4, 1, "", "dictionary"]], "baybe.kernels.base.Kernel.from_json.params": [[106, 4, 1, "", "string"]], "baybe.kernels.basic": [[108, 1, 1, "", "LinearKernel"], [109, 1, 1, "", "MaternKernel"], [110, 1, 1, "", "PeriodicKernel"], [111, 1, 1, "", "PiecewisePolynomialKernel"], [112, 1, 1, "", "PolynomialKernel"], [113, 1, 1, "", "RBFKernel"], [114, 1, 1, "", "RFFKernel"], [115, 1, 1, "", "RQKernel"]], "baybe.kernels.basic.LinearKernel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "from_dict"], [108, 2, 1, "", "from_json"], [108, 2, 1, "", "to_dict"], [108, 2, 1, "", "to_factory"], [108, 2, 1, "", "to_gpytorch"], [108, 2, 1, "", "to_json"], [108, 3, 1, "", "variance_initial_value"], [108, 3, 1, "", "variance_prior"]], "baybe.kernels.basic.LinearKernel.from_dict.params": [[108, 4, 1, "", "dictionary"]], "baybe.kernels.basic.LinearKernel.from_json.params": [[108, 4, 1, "", "string"]], "baybe.kernels.basic.MaternKernel": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "from_dict"], [109, 2, 1, "", "from_json"], [109, 3, 1, "", "lengthscale_initial_value"], [109, 3, 1, "", "lengthscale_prior"], [109, 3, 1, "", "nu"], [109, 2, 1, "", "to_dict"], [109, 2, 1, "", "to_factory"], [109, 2, 1, "", "to_gpytorch"], [109, 2, 1, "", "to_json"]], "baybe.kernels.basic.MaternKernel.from_dict.params": [[109, 4, 1, "", "dictionary"]], "baybe.kernels.basic.MaternKernel.from_json.params": [[109, 4, 1, "", "string"]], "baybe.kernels.basic.PeriodicKernel": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "from_dict"], [110, 2, 1, "", "from_json"], [110, 3, 1, "", "lengthscale_initial_value"], [110, 3, 1, "", "lengthscale_prior"], [110, 3, 1, "", "period_length_initial_value"], [110, 3, 1, "", "period_length_prior"], [110, 2, 1, "", "to_dict"], [110, 2, 1, "", "to_factory"], [110, 2, 1, "", "to_gpytorch"], [110, 2, 1, "", "to_json"]], "baybe.kernels.basic.PeriodicKernel.from_dict.params": [[110, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PeriodicKernel.from_json.params": [[110, 4, 1, "", "string"]], "baybe.kernels.basic.PiecewisePolynomialKernel": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "from_dict"], [111, 2, 1, "", "from_json"], [111, 3, 1, "", "lengthscale_initial_value"], [111, 3, 1, "", "lengthscale_prior"], [111, 3, 1, "", "q"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "to_factory"], [111, 2, 1, "", "to_gpytorch"], [111, 2, 1, "", "to_json"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_dict.params": [[111, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PiecewisePolynomialKernel.from_json.params": [[111, 4, 1, "", "string"]], "baybe.kernels.basic.PolynomialKernel": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_dict"], [112, 2, 1, "", "from_json"], [112, 3, 1, "", "offset_initial_value"], [112, 3, 1, "", "offset_prior"], [112, 3, 1, "", "power"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "to_factory"], [112, 2, 1, "", "to_gpytorch"], [112, 2, 1, "", "to_json"]], "baybe.kernels.basic.PolynomialKernel.from_dict.params": [[112, 4, 1, "", "dictionary"]], "baybe.kernels.basic.PolynomialKernel.from_json.params": [[112, 4, 1, "", "string"]], "baybe.kernels.basic.RBFKernel": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "from_json"], [113, 3, 1, "", "lengthscale_initial_value"], [113, 3, 1, "", "lengthscale_prior"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "to_factory"], [113, 2, 1, "", "to_gpytorch"], [113, 2, 1, "", "to_json"]], "baybe.kernels.basic.RBFKernel.from_dict.params": [[113, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RBFKernel.from_json.params": [[113, 4, 1, "", "string"]], "baybe.kernels.basic.RFFKernel": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "from_dict"], [114, 2, 1, "", "from_json"], [114, 3, 1, "", "lengthscale_initial_value"], [114, 3, 1, "", "lengthscale_prior"], [114, 3, 1, "", "num_samples"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "to_factory"], [114, 2, 1, "", "to_gpytorch"], [114, 2, 1, "", "to_json"]], "baybe.kernels.basic.RFFKernel.from_dict.params": [[114, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RFFKernel.from_json.params": [[114, 4, 1, "", "string"]], "baybe.kernels.basic.RQKernel": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "from_dict"], [115, 2, 1, "", "from_json"], [115, 3, 1, "", "lengthscale_initial_value"], [115, 3, 1, "", "lengthscale_prior"], [115, 2, 1, "", "to_dict"], [115, 2, 1, "", "to_factory"], [115, 2, 1, "", "to_gpytorch"], [115, 2, 1, "", "to_json"]], "baybe.kernels.basic.RQKernel.from_dict.params": [[115, 4, 1, "", "dictionary"]], "baybe.kernels.basic.RQKernel.from_json.params": [[115, 4, 1, "", "string"]], "baybe.kernels.composite": [[117, 1, 1, "", "AdditiveKernel"], [118, 1, 1, "", "ProductKernel"], [119, 1, 1, "", "ScaleKernel"]], "baybe.kernels.composite.AdditiveKernel": [[117, 2, 1, "", "__init__"], [117, 3, 1, "", "base_kernels"], [117, 2, 1, "", "from_dict"], [117, 2, 1, "", "from_json"], [117, 2, 1, "", "to_dict"], [117, 2, 1, "", "to_factory"], [117, 2, 1, "", "to_gpytorch"], [117, 2, 1, "", "to_json"]], "baybe.kernels.composite.AdditiveKernel.from_dict.params": [[117, 4, 1, "", "dictionary"]], "baybe.kernels.composite.AdditiveKernel.from_json.params": [[117, 4, 1, "", "string"]], "baybe.kernels.composite.ProductKernel": [[118, 2, 1, "", "__init__"], [118, 3, 1, "", "base_kernels"], [118, 2, 1, "", "from_dict"], [118, 2, 1, "", "from_json"], [118, 2, 1, "", "to_dict"], [118, 2, 1, "", "to_factory"], [118, 2, 1, "", "to_gpytorch"], [118, 2, 1, "", "to_json"]], "baybe.kernels.composite.ProductKernel.from_dict.params": [[118, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ProductKernel.from_json.params": [[118, 4, 1, "", "string"]], "baybe.kernels.composite.ScaleKernel": [[119, 2, 1, "", "__init__"], [119, 3, 1, "", "base_kernel"], [119, 2, 1, "", "from_dict"], [119, 2, 1, "", "from_json"], [119, 3, 1, "", "outputscale_initial_value"], [119, 3, 1, "", "outputscale_prior"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "to_factory"], [119, 2, 1, "", "to_gpytorch"], [119, 2, 1, "", "to_json"]], "baybe.kernels.composite.ScaleKernel.from_dict.params": [[119, 4, 1, "", "dictionary"]], "baybe.kernels.composite.ScaleKernel.from_json.params": [[119, 4, 1, "", "string"]], "baybe.objectives": [[121, 0, 0, "-", "base"], [124, 0, 0, "-", "desirability"], [127, 0, 0, "-", "enum"], [129, 0, 0, "-", "pareto"], [131, 0, 0, "-", "single"], [133, 0, 0, "-", "validation"]], "baybe.objectives.base": [[122, 1, 1, "", "Objective"], [123, 5, 1, "", "to_objective"]], "baybe.objectives.base.Objective": [[122, 2, 1, "", "__init__"], [122, 2, 1, "", "from_dict"], [122, 2, 1, "", "from_json"], [122, 3, 1, "", "is_multi_output"], [122, 6, 1, "", "n_outputs"], [122, 6, 1, "", "targets"], [122, 2, 1, "", "to_dict"], [122, 2, 1, "", "to_json"], [122, 2, 1, "", "transform"]], "baybe.objectives.base.Objective.from_dict.params": [[122, 4, 1, "", "dictionary"]], "baybe.objectives.base.Objective.from_json.params": [[122, 4, 1, "", "string"]], "baybe.objectives.base.Objective.transform.params": [[122, 4, 1, "", "allow_extra"], [122, 4, 1, "", "allow_missing"], [122, 4, 1, "", "df"]], "baybe.objectives.desirability": [[125, 1, 1, "", "DesirabilityObjective"], [126, 5, 1, "", "scalarize"]], "baybe.objectives.desirability.DesirabilityObjective": [[125, 2, 1, "", "__init__"], [125, 2, 1, "", "from_dict"], [125, 2, 1, "", "from_json"], [125, 3, 1, "", "is_multi_output"], [125, 6, 1, "", "n_outputs"], [125, 3, 1, "", "scalarizer"], [125, 6, 1, "", "targets"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "to_json"], [125, 2, 1, "", "transform"], [125, 3, 1, "", "weights"]], "baybe.objectives.desirability.DesirabilityObjective.from_dict.params": [[125, 4, 1, "", "dictionary"]], "baybe.objectives.desirability.DesirabilityObjective.from_json.params": [[125, 4, 1, "", "string"]], "baybe.objectives.desirability.DesirabilityObjective.transform.params": [[125, 4, 1, "", "allow_extra"], [125, 4, 1, "", "allow_missing"], [125, 4, 1, "", "df"]], "baybe.objectives.desirability.scalarize.params": [[126, 4, 1, "", "scalarizer"], [126, 4, 1, "", "values"], [126, 4, 1, "", "weights"]], "baybe.objectives.enum": [[128, 1, 1, "", "Scalarizer"]], "baybe.objectives.enum.Scalarizer": [[128, 3, 1, "", "GEOM_MEAN"], [128, 3, 1, "", "MEAN"]], "baybe.objectives.pareto": [[130, 1, 1, "", "ParetoObjective"]], "baybe.objectives.pareto.ParetoObjective": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "from_dict"], [130, 2, 1, "", "from_json"], [130, 3, 1, "", "is_multi_output"], [130, 6, 1, "", "n_outputs"], [130, 6, 1, "", "targets"], [130, 2, 1, "", "to_dict"], [130, 2, 1, "", "to_json"], [130, 2, 1, "", "transform"]], "baybe.objectives.pareto.ParetoObjective.from_dict.params": [[130, 4, 1, "", "dictionary"]], "baybe.objectives.pareto.ParetoObjective.from_json.params": [[130, 4, 1, "", "string"]], "baybe.objectives.pareto.ParetoObjective.transform.params": [[130, 4, 1, "", "allow_extra"], [130, 4, 1, "", "allow_missing"], [130, 4, 1, "", "df"]], "baybe.objectives.single": [[132, 1, 1, "", "SingleTargetObjective"]], "baybe.objectives.single.SingleTargetObjective": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "from_dict"], [132, 2, 1, "", "from_json"], [132, 3, 1, "", "is_multi_output"], [132, 6, 1, "", "n_outputs"], [132, 6, 1, "", "targets"], [132, 2, 1, "", "to_dict"], [132, 2, 1, "", "to_json"], [132, 2, 1, "", "transform"]], "baybe.objectives.single.SingleTargetObjective.from_dict.params": [[132, 4, 1, "", "dictionary"]], "baybe.objectives.single.SingleTargetObjective.from_json.params": [[132, 4, 1, "", "string"]], "baybe.objectives.single.SingleTargetObjective.transform.params": [[132, 4, 1, "", "allow_extra"], [132, 4, 1, "", "allow_missing"], [132, 4, 1, "", "df"]], "baybe.objectives.validation": [[134, 5, 1, "", "validate_target_names"]], "baybe.parameters": [[136, 0, 0, "-", "base"], [140, 0, 0, "-", "categorical"], [143, 0, 0, "-", "custom"], [145, 0, 0, "-", "enum"], [150, 0, 0, "-", "numerical"], [153, 0, 0, "-", "substance"], [156, 0, 0, "-", "utils"], [161, 0, 0, "-", "validation"]], "baybe.parameters.base": [[137, 1, 1, "", "ContinuousParameter"], [138, 1, 1, "", "DiscreteParameter"], [139, 1, 1, "", "Parameter"]], "baybe.parameters.base.ContinuousParameter": [[137, 2, 1, "", "__init__"], [137, 6, 1, "", "comp_rep_columns"], [137, 2, 1, "", "from_dict"], [137, 2, 1, "", "from_json"], [137, 6, 1, "", "is_continuous"], [137, 6, 1, "", "is_discrete"], [137, 2, 1, "", "is_in_range"], [137, 3, 1, "", "is_numerical"], [137, 3, 1, "", "name"], [137, 2, 1, "", "summary"], [137, 2, 1, "", "to_dict"], [137, 2, 1, "", "to_json"], [137, 2, 1, "", "to_searchspace"], [137, 2, 1, "", "to_subspace"]], "baybe.parameters.base.ContinuousParameter.from_dict.params": [[137, 4, 1, "", "dictionary"]], "baybe.parameters.base.ContinuousParameter.from_json.params": [[137, 4, 1, "", "string"]], "baybe.parameters.base.ContinuousParameter.is_in_range.params": [[137, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter": [[138, 2, 1, "", "__init__"], [138, 6, 1, "", "active_values"], [138, 6, 1, "", "comp_df"], [138, 6, 1, "", "comp_rep_columns"], [138, 3, 1, "", "encoding"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_json"], [138, 6, 1, "", "is_continuous"], [138, 6, 1, "", "is_discrete"], [138, 2, 1, "", "is_in_range"], [138, 3, 1, "", "is_numerical"], [138, 3, 1, "", "name"], [138, 2, 1, "", "summary"], [138, 2, 1, "", "to_dict"], [138, 2, 1, "", "to_json"], [138, 2, 1, "", "to_searchspace"], [138, 2, 1, "", "to_subspace"], [138, 2, 1, "", "transform"], [138, 6, 1, "", "values"]], "baybe.parameters.base.DiscreteParameter.from_dict.params": [[138, 4, 1, "", "dictionary"]], "baybe.parameters.base.DiscreteParameter.from_json.params": [[138, 4, 1, "", "string"]], "baybe.parameters.base.DiscreteParameter.is_in_range.params": [[138, 4, 1, "", "item"]], "baybe.parameters.base.DiscreteParameter.transform.params": [[138, 4, 1, "", "series"]], "baybe.parameters.base.Parameter": [[139, 2, 1, "", "__init__"], [139, 6, 1, "", "comp_rep_columns"], [139, 2, 1, "", "from_dict"], [139, 2, 1, "", "from_json"], [139, 6, 1, "", "is_continuous"], [139, 6, 1, "", "is_discrete"], [139, 2, 1, "", "is_in_range"], [139, 3, 1, "", "is_numerical"], [139, 3, 1, "", "name"], [139, 2, 1, "", "summary"], [139, 2, 1, "", "to_dict"], [139, 2, 1, "", "to_json"], [139, 2, 1, "", "to_searchspace"]], "baybe.parameters.base.Parameter.from_dict.params": [[139, 4, 1, "", "dictionary"]], "baybe.parameters.base.Parameter.from_json.params": [[139, 4, 1, "", "string"]], "baybe.parameters.base.Parameter.is_in_range.params": [[139, 4, 1, "", "item"]], "baybe.parameters.categorical": [[141, 1, 1, "", "CategoricalParameter"], [142, 1, 1, "", "TaskParameter"]], "baybe.parameters.categorical.CategoricalParameter": [[141, 2, 1, "", "__init__"], [141, 6, 1, "", "active_values"], [141, 6, 1, "", "comp_df"], [141, 6, 1, "", "comp_rep_columns"], [141, 3, 1, "", "encoding"], [141, 2, 1, "", "from_dict"], [141, 2, 1, "", "from_json"], [141, 6, 1, "", "is_continuous"], [141, 6, 1, "", "is_discrete"], [141, 2, 1, "", "is_in_range"], [141, 3, 1, "", "is_numerical"], [141, 3, 1, "", "name"], [141, 2, 1, "", "summary"], [141, 2, 1, "", "to_dict"], [141, 2, 1, "", "to_json"], [141, 2, 1, "", "to_searchspace"], [141, 2, 1, "", "to_subspace"], [141, 2, 1, "", "transform"], [141, 6, 1, "", "values"]], "baybe.parameters.categorical.CategoricalParameter.from_dict.params": [[141, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.CategoricalParameter.from_json.params": [[141, 4, 1, "", "string"]], "baybe.parameters.categorical.CategoricalParameter.is_in_range.params": [[141, 4, 1, "", "item"]], "baybe.parameters.categorical.CategoricalParameter.transform.params": [[141, 4, 1, "", "series"]], "baybe.parameters.categorical.TaskParameter": [[142, 2, 1, "", "__init__"], [142, 6, 1, "", "active_values"], [142, 6, 1, "", "comp_df"], [142, 6, 1, "", "comp_rep_columns"], [142, 3, 1, "", "encoding"], [142, 2, 1, "", "from_dict"], [142, 2, 1, "", "from_json"], [142, 6, 1, "", "is_continuous"], [142, 6, 1, "", "is_discrete"], [142, 2, 1, "", "is_in_range"], [142, 3, 1, "", "is_numerical"], [142, 3, 1, "", "name"], [142, 2, 1, "", "summary"], [142, 2, 1, "", "to_dict"], [142, 2, 1, "", "to_json"], [142, 2, 1, "", "to_searchspace"], [142, 2, 1, "", "to_subspace"], [142, 2, 1, "", "transform"], [142, 6, 1, "", "values"]], "baybe.parameters.categorical.TaskParameter.from_dict.params": [[142, 4, 1, "", "dictionary"]], "baybe.parameters.categorical.TaskParameter.from_json.params": [[142, 4, 1, "", "string"]], "baybe.parameters.categorical.TaskParameter.is_in_range.params": [[142, 4, 1, "", "item"]], "baybe.parameters.categorical.TaskParameter.transform.params": [[142, 4, 1, "", "series"]], "baybe.parameters.custom": [[144, 1, 1, "", "CustomDiscreteParameter"]], "baybe.parameters.custom.CustomDiscreteParameter": [[144, 2, 1, "", "__init__"], [144, 6, 1, "", "active_values"], [144, 6, 1, "", "comp_df"], [144, 6, 1, "", "comp_rep_columns"], [144, 3, 1, "", "data"], [144, 3, 1, "", "decorrelate"], [144, 3, 1, "", "encoding"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_json"], [144, 6, 1, "", "is_continuous"], [144, 6, 1, "", "is_discrete"], [144, 2, 1, "", "is_in_range"], [144, 3, 1, "", "is_numerical"], [144, 3, 1, "", "name"], [144, 2, 1, "", "summary"], [144, 2, 1, "", "to_dict"], [144, 2, 1, "", "to_json"], [144, 2, 1, "", "to_searchspace"], [144, 2, 1, "", "to_subspace"], [144, 2, 1, "", "transform"], [144, 6, 1, "", "values"]], "baybe.parameters.custom.CustomDiscreteParameter.from_dict.params": [[144, 4, 1, "", "dictionary"]], "baybe.parameters.custom.CustomDiscreteParameter.from_json.params": [[144, 4, 1, "", "string"]], "baybe.parameters.custom.CustomDiscreteParameter.is_in_range.params": [[144, 4, 1, "", "item"]], "baybe.parameters.custom.CustomDiscreteParameter.transform.params": [[144, 4, 1, "", "series"]], "baybe.parameters.enum": [[146, 1, 1, "", "CategoricalEncoding"], [147, 1, 1, "", "CustomEncoding"], [148, 1, 1, "", "ParameterEncoding"], [149, 1, 1, "", "SubstanceEncoding"]], "baybe.parameters.enum.CategoricalEncoding": [[146, 3, 1, "", "INT"], [146, 3, 1, "", "OHE"], [146, 2, 1, "", "__new__"]], "baybe.parameters.enum.CustomEncoding": [[147, 3, 1, "", "CUSTOM"], [147, 2, 1, "", "__new__"]], "baybe.parameters.enum.SubstanceEncoding": [[149, 3, 1, "", "ATOMPAIR"], [149, 3, 1, "", "AUTOCORR"], [149, 3, 1, "", "AVALON"], [149, 3, 1, "", "BCUT2D"], [149, 3, 1, "", "E3FP"], [149, 3, 1, "", "ECFP"], [149, 3, 1, "", "ELECTROSHAPE"], [149, 3, 1, "", "ERG"], [149, 3, 1, "", "ESTATE"], [149, 3, 1, "", "FUNCTIONALGROUPS"], [149, 3, 1, "", "GETAWAY"], [149, 3, 1, "", "GHOSECRIPPEN"], [149, 3, 1, "", "KLEKOTAROTH"], [149, 3, 1, "", "LAGGNER"], [149, 3, 1, "", "LAYERED"], [149, 3, 1, "", "LINGO"], [149, 3, 1, "", "MACCS"], [149, 3, 1, "", "MAP"], [149, 3, 1, "", "MHFP"], [149, 3, 1, "", "MORDRED"], [149, 3, 1, "", "MORGAN_FP"], [149, 3, 1, "", "MORSE"], [149, 3, 1, "", "MQNS"], [149, 3, 1, "", "PATTERN"], [149, 3, 1, "", "PHARMACOPHORE"], [149, 3, 1, "", "PHYSIOCHEMICALPROPERTIES"], [149, 3, 1, "", "PUBCHEM"], [149, 3, 1, "", "RDF"], [149, 3, 1, "", "RDKIT"], [149, 3, 1, "", "RDKIT2DDESCRIPTORS"], [149, 3, 1, "", "RDKITFINGERPRINT"], [149, 3, 1, "", "SECFP"], [149, 3, 1, "", "TOPOLOGICALTORSION"], [149, 3, 1, "", "USR"], [149, 3, 1, "", "USRCAT"], [149, 3, 1, "", "VSA"], [149, 3, 1, "", "WHIM"], [149, 2, 1, "", "__new__"]], "baybe.parameters.numerical": [[151, 1, 1, "", "NumericalContinuousParameter"], [152, 1, 1, "", "NumericalDiscreteParameter"]], "baybe.parameters.numerical.NumericalContinuousParameter": [[151, 2, 1, "", "__init__"], [151, 3, 1, "", "bounds"], [151, 6, 1, "", "comp_rep_columns"], [151, 2, 1, "", "from_dict"], [151, 2, 1, "", "from_json"], [151, 6, 1, "", "is_continuous"], [151, 6, 1, "", "is_discrete"], [151, 2, 1, "", "is_in_range"], [151, 3, 1, "", "is_numerical"], [151, 3, 1, "", "name"], [151, 2, 1, "", "summary"], [151, 2, 1, "", "to_dict"], [151, 2, 1, "", "to_json"], [151, 2, 1, "", "to_searchspace"], [151, 2, 1, "", "to_subspace"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_dict.params": [[151, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalContinuousParameter.from_json.params": [[151, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalContinuousParameter.is_in_range.params": [[151, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter": [[152, 2, 1, "", "__init__"], [152, 6, 1, "", "active_values"], [152, 6, 1, "", "comp_df"], [152, 6, 1, "", "comp_rep_columns"], [152, 3, 1, "", "encoding"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_json"], [152, 6, 1, "", "is_continuous"], [152, 6, 1, "", "is_discrete"], [152, 2, 1, "", "is_in_range"], [152, 3, 1, "", "is_numerical"], [152, 3, 1, "", "name"], [152, 2, 1, "", "summary"], [152, 2, 1, "", "to_dict"], [152, 2, 1, "", "to_json"], [152, 2, 1, "", "to_searchspace"], [152, 2, 1, "", "to_subspace"], [152, 3, 1, "", "tolerance"], [152, 2, 1, "", "transform"], [152, 6, 1, "", "values"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_dict.params": [[152, 4, 1, "", "dictionary"]], "baybe.parameters.numerical.NumericalDiscreteParameter.from_json.params": [[152, 4, 1, "", "string"]], "baybe.parameters.numerical.NumericalDiscreteParameter.is_in_range.params": [[152, 4, 1, "", "item"]], "baybe.parameters.numerical.NumericalDiscreteParameter.transform.params": [[152, 4, 1, "", "series"]], "baybe.parameters.substance": [[154, 3, 1, "", "Smiles"], [155, 1, 1, "", "SubstanceParameter"]], "baybe.parameters.substance.SubstanceParameter": [[155, 2, 1, "", "__init__"], [155, 6, 1, "", "active_values"], [155, 6, 1, "", "comp_df"], [155, 6, 1, "", "comp_rep_columns"], [155, 3, 1, "", "data"], [155, 3, 1, "", "decorrelate"], [155, 3, 1, "", "encoding"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_json"], [155, 6, 1, "", "is_continuous"], [155, 6, 1, "", "is_discrete"], [155, 2, 1, "", "is_in_range"], [155, 3, 1, "", "is_numerical"], [155, 3, 1, "", "kwargs_conformer"], [155, 3, 1, "", "kwargs_fingerprint"], [155, 3, 1, "", "name"], [155, 2, 1, "", "summary"], [155, 2, 1, "", "to_dict"], [155, 2, 1, "", "to_json"], [155, 2, 1, "", "to_searchspace"], [155, 2, 1, "", "to_subspace"], [155, 2, 1, "", "transform"], [155, 6, 1, "", "values"]], "baybe.parameters.substance.SubstanceParameter.from_dict.params": [[155, 4, 1, "", "dictionary"]], "baybe.parameters.substance.SubstanceParameter.from_json.params": [[155, 4, 1, "", "string"]], "baybe.parameters.substance.SubstanceParameter.is_in_range.params": [[155, 4, 1, "", "item"]], "baybe.parameters.substance.SubstanceParameter.transform.params": [[155, 4, 1, "", "series"]], "baybe.parameters.utils": [[157, 5, 1, "", "activate_parameter"], [158, 5, 1, "", "get_parameters_from_dataframe"], [159, 5, 1, "", "is_inactive"], [160, 5, 1, "", "sort_parameters"]], "baybe.parameters.utils.activate_parameter.params": [[157, 4, 1, "", "parameter"], [157, 4, 1, "", "thresholds"]], "baybe.parameters.utils.get_parameters_from_dataframe.params": [[158, 4, 1, "", "df"], [158, 4, 1, "", "factory"], [158, 4, 1, "", "parameters"]], "baybe.parameters.utils.is_inactive.params": [[159, 4, 1, "", "lower_threshold"], [159, 4, 1, "", "upper_threshold"], [159, 4, 1, "", "x"]], "baybe.parameters.validation": [[162, 5, 1, "", "validate_decorrelation"], [163, 5, 1, "", "validate_is_finite"], [164, 5, 1, "", "validate_unique_values"]], "baybe.priors": [[166, 0, 0, "-", "base"], [168, 0, 0, "-", "basic"]], "baybe.priors.base": [[167, 1, 1, "", "Prior"]], "baybe.priors.base.Prior": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "from_dict"], [167, 2, 1, "", "from_json"], [167, 2, 1, "", "to_dict"], [167, 2, 1, "", "to_gpytorch"], [167, 2, 1, "", "to_json"]], "baybe.priors.base.Prior.from_dict.params": [[167, 4, 1, "", "dictionary"]], "baybe.priors.base.Prior.from_json.params": [[167, 4, 1, "", "string"]], "baybe.priors.basic": [[169, 1, 1, "", "BetaPrior"], [170, 1, 1, "", "GammaPrior"], [171, 1, 1, "", "HalfCauchyPrior"], [172, 1, 1, "", "HalfNormalPrior"], [173, 1, 1, "", "LogNormalPrior"], [174, 1, 1, "", "NormalPrior"], [175, 1, 1, "", "SmoothedBoxPrior"]], "baybe.priors.basic.BetaPrior": [[169, 2, 1, "", "__init__"], [169, 3, 1, "", "alpha"], [169, 3, 1, "", "beta"], [169, 2, 1, "", "from_dict"], [169, 2, 1, "", "from_json"], [169, 2, 1, "", "to_dict"], [169, 2, 1, "", "to_gpytorch"], [169, 2, 1, "", "to_json"]], "baybe.priors.basic.BetaPrior.from_dict.params": [[169, 4, 1, "", "dictionary"]], "baybe.priors.basic.BetaPrior.from_json.params": [[169, 4, 1, "", "string"]], "baybe.priors.basic.GammaPrior": [[170, 2, 1, "", "__init__"], [170, 3, 1, "", "concentration"], [170, 2, 1, "", "from_dict"], [170, 2, 1, "", "from_json"], [170, 3, 1, "", "rate"], [170, 2, 1, "", "to_dict"], [170, 2, 1, "", "to_gpytorch"], [170, 2, 1, "", "to_json"]], "baybe.priors.basic.GammaPrior.from_dict.params": [[170, 4, 1, "", "dictionary"]], "baybe.priors.basic.GammaPrior.from_json.params": [[170, 4, 1, "", "string"]], "baybe.priors.basic.HalfCauchyPrior": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "from_dict"], [171, 2, 1, "", "from_json"], [171, 3, 1, "", "scale"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_gpytorch"], [171, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfCauchyPrior.from_dict.params": [[171, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfCauchyPrior.from_json.params": [[171, 4, 1, "", "string"]], "baybe.priors.basic.HalfNormalPrior": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "from_dict"], [172, 2, 1, "", "from_json"], [172, 3, 1, "", "scale"], [172, 2, 1, "", "to_dict"], [172, 2, 1, "", "to_gpytorch"], [172, 2, 1, "", "to_json"]], "baybe.priors.basic.HalfNormalPrior.from_dict.params": [[172, 4, 1, "", "dictionary"]], "baybe.priors.basic.HalfNormalPrior.from_json.params": [[172, 4, 1, "", "string"]], "baybe.priors.basic.LogNormalPrior": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "from_dict"], [173, 2, 1, "", "from_json"], [173, 3, 1, "", "loc"], [173, 3, 1, "", "scale"], [173, 2, 1, "", "to_dict"], [173, 2, 1, "", "to_gpytorch"], [173, 2, 1, "", "to_json"]], "baybe.priors.basic.LogNormalPrior.from_dict.params": [[173, 4, 1, "", "dictionary"]], "baybe.priors.basic.LogNormalPrior.from_json.params": [[173, 4, 1, "", "string"]], "baybe.priors.basic.NormalPrior": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "from_dict"], [174, 2, 1, "", "from_json"], [174, 3, 1, "", "loc"], [174, 3, 1, "", "scale"], [174, 2, 1, "", "to_dict"], [174, 2, 1, "", "to_gpytorch"], [174, 2, 1, "", "to_json"]], "baybe.priors.basic.NormalPrior.from_dict.params": [[174, 4, 1, "", "dictionary"]], "baybe.priors.basic.NormalPrior.from_json.params": [[174, 4, 1, "", "string"]], "baybe.priors.basic.SmoothedBoxPrior": [[175, 2, 1, "", "__init__"], [175, 3, 1, "", "a"], [175, 3, 1, "", "b"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "from_json"], [175, 3, 1, "", "sigma"], [175, 2, 1, "", "to_dict"], [175, 2, 1, "", "to_gpytorch"], [175, 2, 1, "", "to_json"]], "baybe.priors.basic.SmoothedBoxPrior.from_dict.params": [[175, 4, 1, "", "dictionary"]], "baybe.priors.basic.SmoothedBoxPrior.from_json.params": [[175, 4, 1, "", "string"]], "baybe.recommenders": [[177, 0, 0, "-", "base"], [179, 0, 0, "-", "meta"], [187, 0, 0, "-", "naive"], [189, 0, 0, "-", "pure"]], "baybe.recommenders.base": [[178, 1, 1, "", "RecommenderProtocol"]], "baybe.recommenders.base.RecommenderProtocol": [[178, 2, 1, "", "__init__"], [178, 2, 1, "", "recommend"]], "baybe.recommenders.base.RecommenderProtocol.recommend.params": [[178, 4, 1, "", "batch_size"], [178, 4, 1, "", "measurements"], [178, 4, 1, "", "objective"], [178, 4, 1, "", "pending_experiments"], [178, 4, 1, "", "searchspace"]], "baybe.recommenders.meta": [[180, 0, 0, "-", "base"], [182, 0, 0, "-", "sequential"]], "baybe.recommenders.meta.base": [[181, 1, 1, "", "MetaRecommender"]], "baybe.recommenders.meta.base.MetaRecommender": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "from_dict"], [181, 2, 1, "", "from_json"], [181, 2, 1, "", "get_current_recommender"], [181, 2, 1, "", "get_next_recommender"], [181, 2, 1, "", "get_non_meta_recommender"], [181, 6, 1, "", "is_stateful"], [181, 2, 1, "", "recommend"], [181, 2, 1, "", "select_recommender"], [181, 2, 1, "", "to_dict"], [181, 2, 1, "", "to_json"]], "baybe.recommenders.meta.base.MetaRecommender.from_dict.params": [[181, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.base.MetaRecommender.from_json.params": [[181, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential": [[183, 1, 1, "", "BaseSequentialMetaRecommender"], [184, 1, 1, "", "SequentialMetaRecommender"], [185, 1, 1, "", "StreamingSequentialMetaRecommender"], [186, 1, 1, "", "TwoPhaseMetaRecommender"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "from_dict"], [183, 2, 1, "", "from_json"], [183, 2, 1, "", "get_current_recommender"], [183, 2, 1, "", "get_next_recommender"], [183, 2, 1, "", "get_non_meta_recommender"], [183, 6, 1, "", "is_stateful"], [183, 2, 1, "", "recommend"], [183, 2, 1, "", "select_recommender"], [183, 2, 1, "", "to_dict"], [183, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_dict.params": [[183, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.BaseSequentialMetaRecommender.from_json.params": [[183, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_json"], [184, 2, 1, "", "get_current_recommender"], [184, 2, 1, "", "get_next_recommender"], [184, 2, 1, "", "get_non_meta_recommender"], [184, 6, 1, "", "is_stateful"], [184, 3, 1, "", "mode"], [184, 2, 1, "", "recommend"], [184, 3, 1, "", "recommenders"], [184, 2, 1, "", "select_recommender"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_dict.params": [[184, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.SequentialMetaRecommender.from_json.params": [[184, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "from_dict"], [185, 2, 1, "", "from_json"], [185, 2, 1, "", "get_current_recommender"], [185, 2, 1, "", "get_next_recommender"], [185, 2, 1, "", "get_non_meta_recommender"], [185, 6, 1, "", "is_stateful"], [185, 2, 1, "", "recommend"], [185, 3, 1, "", "recommenders"], [185, 2, 1, "", "select_recommender"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_dict.params": [[185, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.StreamingSequentialMetaRecommender.from_json.params": [[185, 4, 1, "", "string"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "from_dict"], [186, 2, 1, "", "from_json"], [186, 2, 1, "", "get_current_recommender"], [186, 2, 1, "", "get_next_recommender"], [186, 2, 1, "", "get_non_meta_recommender"], [186, 3, 1, "", "initial_recommender"], [186, 6, 1, "", "is_stateful"], [186, 2, 1, "", "recommend"], [186, 3, 1, "", "recommender"], [186, 3, 1, "", "remain_switched"], [186, 2, 1, "", "select_recommender"], [186, 3, 1, "", "switch_after"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_json"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_dict.params": [[186, 4, 1, "", "dictionary"]], "baybe.recommenders.meta.sequential.TwoPhaseMetaRecommender.from_json.params": [[186, 4, 1, "", "string"]], "baybe.recommenders.naive": [[188, 1, 1, "", "NaiveHybridSpaceRecommender"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender": [[188, 2, 1, "", "__init__"], [188, 6, 1, "", "allow_recommending_already_measured"], [188, 6, 1, "", "allow_recommending_pending_experiments"], [188, 6, 1, "", "allow_repeated_recommendations"], [188, 3, 1, "", "compatibility"], [188, 3, 1, "", "cont_recommender"], [188, 3, 1, "", "disc_recommender"], [188, 2, 1, "", "recommend"]], "baybe.recommenders.naive.NaiveHybridSpaceRecommender.recommend.params": [[188, 4, 1, "", "batch_size"], [188, 4, 1, "", "measurements"], [188, 4, 1, "", "objective"], [188, 4, 1, "", "pending_experiments"], [188, 4, 1, "", "searchspace"]], "baybe.recommenders.pure": [[190, 0, 0, "-", "base"], [192, 0, 0, "-", "bayesian"], [199, 0, 0, "-", "nonpredictive"]], "baybe.recommenders.pure.base": [[191, 1, 1, "", "PureRecommender"]], "baybe.recommenders.pure.base.PureRecommender": [[191, 2, 1, "", "__init__"], [191, 6, 1, "", "allow_recommending_already_measured"], [191, 6, 1, "", "allow_recommending_pending_experiments"], [191, 6, 1, "", "allow_repeated_recommendations"], [191, 3, 1, "", "compatibility"], [191, 2, 1, "", "recommend"]], "baybe.recommenders.pure.base.PureRecommender.recommend.params": [[191, 4, 1, "", "batch_size"], [191, 4, 1, "", "measurements"], [191, 4, 1, "", "objective"], [191, 4, 1, "", "pending_experiments"], [191, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian": [[193, 0, 0, "-", "base"], [195, 0, 0, "-", "botorch"], [197, 0, 0, "-", "sequential_greedy"]], "baybe.recommenders.pure.bayesian.base": [[194, 1, 1, "", "BayesianRecommender"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender": [[194, 2, 1, "", "__init__"], [194, 3, 1, "", "acquisition_function"], [194, 2, 1, "", "acquisition_values"], [194, 6, 1, "", "allow_recommending_already_measured"], [194, 6, 1, "", "allow_recommending_pending_experiments"], [194, 6, 1, "", "allow_repeated_recommendations"], [194, 3, 1, "", "compatibility"], [194, 2, 1, "", "get_acquisition_function"], [194, 2, 1, "", "get_surrogate"], [194, 2, 1, "", "joint_acquisition_value"], [194, 2, 1, "", "recommend"], [194, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.acquisition_values.params": [[194, 4, 1, "", "acquisition_function"], [194, 4, 1, "", "candidates"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.base.BayesianRecommender.recommend.params": [[194, 4, 1, "", "batch_size"], [194, 4, 1, "", "measurements"], [194, 4, 1, "", "objective"], [194, 4, 1, "", "pending_experiments"], [194, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch": [[196, 1, 1, "", "BotorchRecommender"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender": [[196, 2, 1, "", "__init__"], [196, 3, 1, "", "acquisition_function"], [196, 2, 1, "", "acquisition_values"], [196, 6, 1, "", "allow_recommending_already_measured"], [196, 6, 1, "", "allow_recommending_pending_experiments"], [196, 6, 1, "", "allow_repeated_recommendations"], [196, 3, 1, "", "compatibility"], [196, 2, 1, "", "get_acquisition_function"], [196, 2, 1, "", "get_surrogate"], [196, 3, 1, "", "hybrid_sampler"], [196, 2, 1, "", "joint_acquisition_value"], [196, 3, 1, "", "max_n_subspaces"], [196, 3, 1, "", "n_raw_samples"], [196, 3, 1, "", "n_restarts"], [196, 2, 1, "", "recommend"], [196, 3, 1, "", "sampling_percentage"], [196, 3, 1, "", "sequential_continuous"], [196, 6, 1, "", "surrogate_model"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.acquisition_values.params": [[196, 4, 1, "", "acquisition_function"], [196, 4, 1, "", "candidates"], [196, 4, 1, "", "measurements"], [196, 4, 1, "", "objective"], [196, 4, 1, "", "pending_experiments"], [196, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.botorch.BotorchRecommender.recommend.params": [[196, 4, 1, "", "batch_size"], [196, 4, 1, "", "measurements"], [196, 4, 1, "", "objective"], [196, 4, 1, "", "pending_experiments"], [196, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.bayesian.sequential_greedy": [[198, 5, 1, "", "SequentialGreedyRecommender"]], "baybe.recommenders.pure.nonpredictive": [[200, 0, 0, "-", "base"], [202, 0, 0, "-", "clustering"], [207, 0, 0, "-", "sampling"]], "baybe.recommenders.pure.nonpredictive.base": [[201, 1, 1, "", "NonPredictiveRecommender"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender": [[201, 2, 1, "", "__init__"], [201, 6, 1, "", "allow_recommending_already_measured"], [201, 6, 1, "", "allow_recommending_pending_experiments"], [201, 6, 1, "", "allow_repeated_recommendations"], [201, 3, 1, "", "compatibility"], [201, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.base.NonPredictiveRecommender.recommend.params": [[201, 4, 1, "", "batch_size"], [201, 4, 1, "", "measurements"], [201, 4, 1, "", "objective"], [201, 4, 1, "", "pending_experiments"], [201, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering": [[203, 1, 1, "", "GaussianMixtureClusteringRecommender"], [204, 1, 1, "", "KMeansClusteringRecommender"], [205, 1, 1, "", "PAMClusteringRecommender"], [206, 1, 1, "", "SKLearnClusteringRecommender"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender": [[203, 2, 1, "", "__init__"], [203, 6, 1, "", "allow_recommending_already_measured"], [203, 6, 1, "", "allow_recommending_pending_experiments"], [203, 6, 1, "", "allow_repeated_recommendations"], [203, 3, 1, "", "compatibility"], [203, 3, 1, "", "model_cluster_num_parameter_name"], [203, 3, 1, "", "model_params"], [203, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.GaussianMixtureClusteringRecommender.recommend.params": [[203, 4, 1, "", "batch_size"], [203, 4, 1, "", "measurements"], [203, 4, 1, "", "objective"], [203, 4, 1, "", "pending_experiments"], [203, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender": [[204, 2, 1, "", "__init__"], [204, 6, 1, "", "allow_recommending_already_measured"], [204, 6, 1, "", "allow_recommending_pending_experiments"], [204, 6, 1, "", "allow_repeated_recommendations"], [204, 3, 1, "", "compatibility"], [204, 3, 1, "", "model_cluster_num_parameter_name"], [204, 3, 1, "", "model_params"], [204, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.KMeansClusteringRecommender.recommend.params": [[204, 4, 1, "", "batch_size"], [204, 4, 1, "", "measurements"], [204, 4, 1, "", "objective"], [204, 4, 1, "", "pending_experiments"], [204, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender": [[205, 2, 1, "", "__init__"], [205, 6, 1, "", "allow_recommending_already_measured"], [205, 6, 1, "", "allow_recommending_pending_experiments"], [205, 6, 1, "", "allow_repeated_recommendations"], [205, 3, 1, "", "compatibility"], [205, 3, 1, "", "model_cluster_num_parameter_name"], [205, 3, 1, "", "model_params"], [205, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.PAMClusteringRecommender.recommend.params": [[205, 4, 1, "", "batch_size"], [205, 4, 1, "", "measurements"], [205, 4, 1, "", "objective"], [205, 4, 1, "", "pending_experiments"], [205, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender": [[206, 2, 1, "", "__init__"], [206, 6, 1, "", "allow_recommending_already_measured"], [206, 6, 1, "", "allow_recommending_pending_experiments"], [206, 6, 1, "", "allow_repeated_recommendations"], [206, 3, 1, "", "compatibility"], [206, 3, 1, "", "model_cluster_num_parameter_name"], [206, 3, 1, "", "model_params"], [206, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.clustering.SKLearnClusteringRecommender.recommend.params": [[206, 4, 1, "", "batch_size"], [206, 4, 1, "", "measurements"], [206, 4, 1, "", "objective"], [206, 4, 1, "", "pending_experiments"], [206, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling": [[208, 1, 1, "", "FPSInitialization"], [209, 1, 1, "", "FPSRecommender"], [210, 1, 1, "", "RandomRecommender"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSInitialization": [[208, 3, 1, "", "FARTHEST"], [208, 3, 1, "", "RANDOM"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender": [[209, 2, 1, "", "__init__"], [209, 6, 1, "", "allow_recommending_already_measured"], [209, 6, 1, "", "allow_recommending_pending_experiments"], [209, 6, 1, "", "allow_repeated_recommendations"], [209, 3, 1, "", "compatibility"], [209, 3, 1, "", "initialization"], [209, 3, 1, "", "random_tie_break"], [209, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.FPSRecommender.recommend.params": [[209, 4, 1, "", "batch_size"], [209, 4, 1, "", "measurements"], [209, 4, 1, "", "objective"], [209, 4, 1, "", "pending_experiments"], [209, 4, 1, "", "searchspace"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender": [[210, 2, 1, "", "__init__"], [210, 6, 1, "", "allow_recommending_already_measured"], [210, 6, 1, "", "allow_recommending_pending_experiments"], [210, 6, 1, "", "allow_repeated_recommendations"], [210, 3, 1, "", "compatibility"], [210, 2, 1, "", "recommend"]], "baybe.recommenders.pure.nonpredictive.sampling.RandomRecommender.recommend.params": [[210, 4, 1, "", "batch_size"], [210, 4, 1, "", "measurements"], [210, 4, 1, "", "objective"], [210, 4, 1, "", "pending_experiments"], [210, 4, 1, "", "searchspace"]], "baybe.searchspace": [[212, 0, 0, "-", "continuous"], [214, 0, 0, "-", "core"], [219, 0, 0, "-", "discrete"], [225, 0, 0, "-", "validation"]], "baybe.searchspace.continuous": [[213, 1, 1, "", "SubspaceContinuous"]], "baybe.searchspace.continuous.SubspaceContinuous": [[213, 2, 1, "", "__init__"], [213, 6, 1, "", "comp_rep_bounds"], [213, 6, 1, "", "comp_rep_columns"], [213, 6, 1, "", "constraints_cardinality"], [213, 3, 1, "", "constraints_lin_eq"], [213, 3, 1, "", "constraints_lin_ineq"], [213, 3, 1, "", "constraints_nonlin"], [213, 2, 1, "", "empty"], [213, 2, 1, "", "from_bounds"], [213, 2, 1, "", "from_dataframe"], [213, 2, 1, "", "from_dict"], [213, 2, 1, "", "from_json"], [213, 2, 1, "", "from_parameter"], [213, 2, 1, "", "from_product"], [213, 6, 1, "", "full_factorial"], [213, 2, 1, "", "get_parameters_by_name"], [213, 2, 1, "", "inactive_parameter_combinations"], [213, 6, 1, "", "is_empty"], [213, 6, 1, "", "n_inactive_parameter_combinations"], [213, 6, 1, "", "parameter_names"], [213, 6, 1, "", "parameter_names_in_cardinality_constraints"], [213, 3, 1, "", "parameters"], [213, 2, 1, "", "sample_from_full_factorial"], [213, 2, 1, "", "sample_uniform"], [213, 2, 1, "", "samples_full_factorial"], [213, 2, 1, "", "samples_random"], [213, 6, 1, "", "scaling_bounds"], [213, 2, 1, "", "to_dict"], [213, 2, 1, "", "to_json"], [213, 2, 1, "", "to_searchspace"], [213, 2, 1, "", "transform"]], "baybe.searchspace.continuous.SubspaceContinuous.from_bounds.params": [[213, 4, 1, "", "bounds"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dataframe.params": [[213, 4, 1, "", "df"], [213, 4, 1, "", "parameters"]], "baybe.searchspace.continuous.SubspaceContinuous.from_dict.params": [[213, 4, 1, "", "dictionary"]], "baybe.searchspace.continuous.SubspaceContinuous.from_json.params": [[213, 4, 1, "", "string"]], "baybe.searchspace.continuous.SubspaceContinuous.from_parameter.params": [[213, 4, 1, "", "parameter"]], "baybe.searchspace.continuous.SubspaceContinuous.get_parameters_by_name.params": [[213, 4, 1, "", "names"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_from_full_factorial.params": [[213, 4, 1, "", "batch_size"]], "baybe.searchspace.continuous.SubspaceContinuous.sample_uniform.params": [[213, 4, 1, "", "batch_size"]], "baybe.searchspace.core": [[215, 1, 1, "", "SearchSpace"], [216, 1, 1, "", "SearchSpaceType"], [217, 5, 1, "", "to_searchspace"], [218, 5, 1, "", "validate_searchspace_from_config"]], "baybe.searchspace.core.SearchSpace": [[215, 2, 1, "", "__init__"], [215, 6, 1, "", "comp_rep_bounds"], [215, 6, 1, "", "comp_rep_columns"], [215, 6, 1, "", "constraints"], [215, 6, 1, "", "constraints_augmentable"], [215, 3, 1, "", "continuous"], [215, 3, 1, "", "discrete"], [215, 2, 1, "", "estimate_product_space_size"], [215, 2, 1, "", "from_dataframe"], [215, 2, 1, "", "from_dict"], [215, 2, 1, "", "from_json"], [215, 2, 1, "", "from_parameter"], [215, 2, 1, "", "from_product"], [215, 2, 1, "", "get_comp_rep_parameter_indices"], [215, 2, 1, "", "get_parameters_by_name"], [215, 6, 1, "", "n_tasks"], [215, 6, 1, "", "parameter_names"], [215, 6, 1, "", "parameters"], [215, 6, 1, "", "scaling_bounds"], [215, 6, 1, "", "task_idx"], [215, 2, 1, "", "to_dict"], [215, 2, 1, "", "to_json"], [215, 2, 1, "", "transform"], [215, 6, 1, "", "type"]], "baybe.searchspace.core.SearchSpace.estimate_product_space_size.params": [[215, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dataframe.params": [[215, 4, 1, "", "df"], [215, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.from_dict.params": [[215, 4, 1, "", "dictionary"]], "baybe.searchspace.core.SearchSpace.from_json.params": [[215, 4, 1, "", "string"]], "baybe.searchspace.core.SearchSpace.from_parameter.params": [[215, 4, 1, "", "parameter"]], "baybe.searchspace.core.SearchSpace.from_product.params": [[215, 4, 1, "", "constraints"], [215, 4, 1, "", "empty_encoding"], [215, 4, 1, "", "parameters"]], "baybe.searchspace.core.SearchSpace.get_comp_rep_parameter_indices.params": [[215, 4, 1, "", "name"]], "baybe.searchspace.core.SearchSpace.get_parameters_by_name.params": [[215, 4, 1, "", "names"]], "baybe.searchspace.core.SearchSpace.transform.params": [[215, 4, 1, "", "allow_extra"], [215, 4, 1, "", "allow_missing"], [215, 4, 1, "", "data"], [215, 4, 1, "", "df"]], "baybe.searchspace.core.SearchSpaceType": [[216, 3, 1, "", "CONTINUOUS"], [216, 3, 1, "", "DISCRETE"], [216, 3, 1, "", "EITHER"], [216, 3, 1, "", "HYBRID"]], "baybe.searchspace.discrete": [[220, 1, 1, "", "MemorySize"], [221, 1, 1, "", "SubspaceDiscrete"], [222, 5, 1, "", "parameter_cartesian_prod_pandas"], [223, 5, 1, "", "parameter_cartesian_prod_polars"], [224, 5, 1, "", "validate_simplex_subspace_from_config"]], "baybe.searchspace.discrete.MemorySize": [[220, 2, 1, "", "__init__"], [220, 3, 1, "", "comp_rep_bytes"], [220, 6, 1, "", "comp_rep_human_readable"], [220, 3, 1, "", "comp_rep_shape"], [220, 3, 1, "", "exp_rep_bytes"], [220, 6, 1, "", "exp_rep_human_readable"], [220, 3, 1, "", "exp_rep_shape"]], "baybe.searchspace.discrete.SubspaceDiscrete": [[221, 2, 1, "", "__init__"], [221, 3, 1, "", "comp_rep"], [221, 6, 1, "", "comp_rep_bounds"], [221, 6, 1, "", "comp_rep_columns"], [221, 3, 1, "", "constraints"], [221, 2, 1, "", "empty"], [221, 3, 1, "", "empty_encoding"], [221, 2, 1, "", "estimate_product_space_size"], [221, 3, 1, "", "exp_rep"], [221, 2, 1, "", "from_dataframe"], [221, 2, 1, "", "from_dict"], [221, 2, 1, "", "from_json"], [221, 2, 1, "", "from_parameter"], [221, 2, 1, "", "from_product"], [221, 2, 1, "", "from_simplex"], [221, 2, 1, "", "get_candidates"], [221, 2, 1, "", "get_parameters_by_name"], [221, 6, 1, "", "is_empty"], [221, 6, 1, "", "metadata"], [221, 6, 1, "", "parameter_names"], [221, 3, 1, "", "parameters"], [221, 6, 1, "", "scaling_bounds"], [221, 2, 1, "", "to_dict"], [221, 2, 1, "", "to_json"], [221, 2, 1, "", "to_searchspace"], [221, 2, 1, "", "transform"]], "baybe.searchspace.discrete.SubspaceDiscrete.estimate_product_space_size.params": [[221, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dataframe.params": [[221, 4, 1, "", "df"], [221, 4, 1, "", "empty_encoding"], [221, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_dict.params": [[221, 4, 1, "", "dictionary"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_json.params": [[221, 4, 1, "", "string"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_parameter.params": [[221, 4, 1, "", "parameter"]], "baybe.searchspace.discrete.SubspaceDiscrete.from_simplex.params": [[221, 4, 1, "", "boundary_only"], [221, 4, 1, "", "constraints"], [221, 4, 1, "", "max_nonzero"], [221, 4, 1, "", "max_sum"], [221, 4, 1, "", "min_nonzero"], [221, 4, 1, "", "product_parameters"], [221, 4, 1, "", "simplex_parameters"], [221, 4, 1, "", "tolerance"]], "baybe.searchspace.discrete.SubspaceDiscrete.get_parameters_by_name.params": [[221, 4, 1, "", "names"]], "baybe.searchspace.discrete.parameter_cartesian_prod_pandas.params": [[222, 4, 1, "", "parameters"]], "baybe.searchspace.discrete.parameter_cartesian_prod_polars.params": [[223, 4, 1, "", "parameters"]], "baybe.searchspace.validation": [[226, 5, 1, "", "get_transform_parameters"], [227, 5, 1, "", "validate_parameter_names"], [228, 5, 1, "", "validate_parameters"]], "baybe.serialization": [[230, 0, 0, "-", "core"], [237, 0, 0, "-", "mixin"], [239, 0, 0, "-", "utils"]], "baybe.serialization.core": [[231, 5, 1, "", "block_deserialization_hook"], [232, 5, 1, "", "block_serialization_hook"], [233, 8, 1, "", "converter"], [234, 5, 1, "", "get_base_structure_hook"], [235, 5, 1, "", "select_constructor_hook"], [236, 5, 1, "", "unstructure_base"]], "baybe.serialization.core.get_base_structure_hook.params": [[234, 4, 1, "", "base"], [234, 4, 1, "", "overrides"]], "baybe.serialization.core.unstructure_base.params": [[236, 4, 1, "", "base"], [236, 4, 1, "", "overrides"]], "baybe.serialization.mixin": [[238, 1, 1, "", "SerialMixin"]], "baybe.serialization.mixin.SerialMixin": [[238, 2, 1, "", "from_dict"], [238, 2, 1, "", "from_json"], [238, 2, 1, "", "to_dict"], [238, 2, 1, "", "to_json"]], "baybe.serialization.mixin.SerialMixin.from_dict.params": [[238, 4, 1, "", "dictionary"]], "baybe.serialization.mixin.SerialMixin.from_json.params": [[238, 4, 1, "", "string"]], "baybe.serialization.utils": [[240, 5, 1, "", "deserialize_dataframe"], [241, 5, 1, "", "serialize_dataframe"]], "baybe.simulation": [[243, 0, 0, "-", "core"], [245, 0, 0, "-", "lookup"], [247, 0, 0, "-", "scenarios"], [249, 0, 0, "-", "transfer_learning"]], "baybe.simulation.core": [[244, 5, 1, "", "simulate_experiment"]], "baybe.simulation.core.simulate_experiment.params": [[244, 4, 1, "", "batch_size"], [244, 4, 1, "", "campaign"], [244, 4, 1, "", "impute_mode"], [244, 4, 1, "", "initial_data"], [244, 4, 1, "", "lookup"], [244, 4, 1, "", "n_doe_iterations"], [244, 4, 1, "", "noise_percent"], [244, 4, 1, "", "random_seed"]], "baybe.simulation.lookup": [[246, 5, 1, "", "look_up_targets"]], "baybe.simulation.lookup.look_up_targets.params": [[246, 4, 1, "", "impute_mode"], [246, 4, 1, "", "lookup"], [246, 4, 1, "", "queries"], [246, 4, 1, "", "targets"]], "baybe.simulation.scenarios": [[248, 5, 1, "", "simulate_scenarios"]], "baybe.simulation.scenarios.simulate_scenarios.params": [[248, 4, 1, "", "batch_size"], [248, 4, 1, "", "groupby"], [248, 4, 1, "", "impute_mode"], [248, 4, 1, "", "initial_data"], [248, 4, 1, "", "lookup"], [248, 4, 1, "", "n_doe_iterations"], [248, 4, 1, "", "n_mc_iterations"], [248, 4, 1, "", "noise_percent"], [248, 4, 1, "", "parallel_runs"], [248, 4, 1, "", "random_seed"], [248, 4, 1, "", "scenarios"]], "baybe.simulation.transfer_learning": [[250, 5, 1, "", "simulate_transfer_learning"]], "baybe.simulation.transfer_learning.simulate_transfer_learning.params": [[250, 4, 1, "", "batch_size"], [250, 4, 1, "", "campaign"], [250, 4, 1, "", "groupby"], [250, 4, 1, "", "lookup"], [250, 4, 1, "", "n_doe_iterations"], [250, 4, 1, "", "n_mc_iterations"]], "baybe.surrogates": [[252, 0, 0, "-", "bandit"], [254, 0, 0, "-", "base"], [259, 0, 0, "-", "composite"], [261, 0, 0, "-", "custom"], [264, 0, 0, "-", "gaussian_process"], [279, 0, 0, "-", "linear"], [281, 0, 0, "-", "naive"], [283, 0, 0, "-", "ngboost"], [285, 0, 0, "-", "random_forest"], [287, 0, 0, "-", "utils"], [291, 0, 0, "-", "validation"]], "baybe.surrogates.bandit": [[253, 1, 1, "", "BetaBernoulliMultiArmedBanditSurrogate"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate": [[253, 2, 1, "", "__init__"], [253, 2, 1, "", "fit"], [253, 2, 1, "", "from_dict"], [253, 2, 1, "", "from_json"], [253, 2, 1, "", "posterior"], [253, 2, 1, "", "posterior_means"], [253, 2, 1, "", "posterior_modes"], [253, 2, 1, "", "posterior_stats"], [253, 3, 1, "", "prior"], [253, 2, 1, "", "replicate"], [253, 3, 1, "", "supports_multi_output"], [253, 3, 1, "", "supports_transfer_learning"], [253, 2, 1, "", "to_botorch"], [253, 2, 1, "", "to_dict"], [253, 2, 1, "", "to_json"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.fit.params": [[253, 4, 1, "", "measurements"], [253, 4, 1, "", "objective"], [253, 4, 1, "", "searchspace"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_dict.params": [[253, 4, 1, "", "dictionary"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.from_json.params": [[253, 4, 1, "", "string"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior.params": [[253, 4, 1, "", "candidates"]], "baybe.surrogates.bandit.BetaBernoulliMultiArmedBanditSurrogate.posterior_stats.params": [[253, 4, 1, "", "candidates"], [253, 4, 1, "", "stats"]], "baybe.surrogates.base": [[255, 1, 1, "", "IndependentGaussianSurrogate"], [256, 8, 1, "", "PosteriorStatistic"], [257, 1, 1, "", "Surrogate"], [258, 1, 1, "", "SurrogateProtocol"]], "baybe.surrogates.base.IndependentGaussianSurrogate": [[255, 2, 1, "", "__init__"], [255, 2, 1, "", "fit"], [255, 2, 1, "", "from_dict"], [255, 2, 1, "", "from_json"], [255, 2, 1, "", "posterior"], [255, 2, 1, "", "posterior_stats"], [255, 2, 1, "", "replicate"], [255, 3, 1, "", "supports_multi_output"], [255, 3, 1, "", "supports_transfer_learning"], [255, 2, 1, "", "to_botorch"], [255, 2, 1, "", "to_dict"], [255, 2, 1, "", "to_json"]], "baybe.surrogates.base.IndependentGaussianSurrogate.fit.params": [[255, 4, 1, "", "measurements"], [255, 4, 1, "", "objective"], [255, 4, 1, "", "searchspace"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_dict.params": [[255, 4, 1, "", "dictionary"]], "baybe.surrogates.base.IndependentGaussianSurrogate.from_json.params": [[255, 4, 1, "", "string"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior.params": [[255, 4, 1, "", "candidates"]], "baybe.surrogates.base.IndependentGaussianSurrogate.posterior_stats.params": [[255, 4, 1, "", "candidates"], [255, 4, 1, "", "stats"]], "baybe.surrogates.base.Surrogate": [[257, 2, 1, "", "__init__"], [257, 2, 1, "", "fit"], [257, 2, 1, "", "from_dict"], [257, 2, 1, "", "from_json"], [257, 2, 1, "", "posterior"], [257, 2, 1, "", "posterior_stats"], [257, 2, 1, "", "replicate"], [257, 3, 1, "", "supports_multi_output"], [257, 3, 1, "", "supports_transfer_learning"], [257, 2, 1, "", "to_botorch"], [257, 2, 1, "", "to_dict"], [257, 2, 1, "", "to_json"]], "baybe.surrogates.base.Surrogate.fit.params": [[257, 4, 1, "", "measurements"], [257, 4, 1, "", "objective"], [257, 4, 1, "", "searchspace"]], "baybe.surrogates.base.Surrogate.from_dict.params": [[257, 4, 1, "", "dictionary"]], "baybe.surrogates.base.Surrogate.from_json.params": [[257, 4, 1, "", "string"]], "baybe.surrogates.base.Surrogate.posterior.params": [[257, 4, 1, "", "candidates"]], "baybe.surrogates.base.Surrogate.posterior_stats.params": [[257, 4, 1, "", "candidates"], [257, 4, 1, "", "stats"]], "baybe.surrogates.base.SurrogateProtocol": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "fit"], [258, 2, 1, "", "to_botorch"]], "baybe.surrogates.composite": [[260, 1, 1, "", "CompositeSurrogate"]], "baybe.surrogates.composite.CompositeSurrogate": [[260, 2, 1, "", "__init__"], [260, 2, 1, "", "fit"], [260, 2, 1, "", "from_dict"], [260, 2, 1, "", "from_json"], [260, 2, 1, "", "from_replication"], [260, 2, 1, "", "posterior"], [260, 2, 1, "", "posterior_stats"], [260, 3, 1, "", "surrogates"], [260, 2, 1, "", "to_botorch"], [260, 2, 1, "", "to_dict"], [260, 2, 1, "", "to_json"]], "baybe.surrogates.composite.CompositeSurrogate.from_dict.params": [[260, 4, 1, "", "dictionary"]], "baybe.surrogates.composite.CompositeSurrogate.from_json.params": [[260, 4, 1, "", "string"]], "baybe.surrogates.custom": [[262, 1, 1, "", "CustomONNXSurrogate"], [263, 5, 1, "", "register_custom_architecture"]], "baybe.surrogates.custom.CustomONNXSurrogate": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "fit"], [262, 2, 1, "", "from_dict"], [262, 2, 1, "", "from_json"], [262, 3, 1, "", "onnx_input_name"], [262, 3, 1, "", "onnx_str"], [262, 2, 1, "", "posterior"], [262, 2, 1, "", "posterior_stats"], [262, 2, 1, "", "replicate"], [262, 3, 1, "", "supports_multi_output"], [262, 3, 1, "", "supports_transfer_learning"], [262, 2, 1, "", "to_botorch"], [262, 2, 1, "", "to_dict"], [262, 2, 1, "", "to_json"], [262, 2, 1, "", "validate_compatibility"]], "baybe.surrogates.custom.CustomONNXSurrogate.fit.params": [[262, 4, 1, "", "measurements"], [262, 4, 1, "", "objective"], [262, 4, 1, "", "searchspace"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_dict.params": [[262, 4, 1, "", "dictionary"]], "baybe.surrogates.custom.CustomONNXSurrogate.from_json.params": [[262, 4, 1, "", "string"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior.params": [[262, 4, 1, "", "candidates"]], "baybe.surrogates.custom.CustomONNXSurrogate.posterior_stats.params": [[262, 4, 1, "", "candidates"], [262, 4, 1, "", "stats"]], "baybe.surrogates.custom.CustomONNXSurrogate.validate_compatibility.params": [[262, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process": [[265, 0, 0, "-", "core"], [267, 0, 0, "-", "kernel_factory"], [271, 0, 0, "-", "presets"]], "baybe.surrogates.gaussian_process.core": [[266, 1, 1, "", "GaussianProcessSurrogate"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate": [[266, 2, 1, "", "__init__"], [266, 2, 1, "", "fit"], [266, 2, 1, "", "from_dict"], [266, 2, 1, "", "from_json"], [266, 2, 1, "", "from_preset"], [266, 3, 1, "", "kernel_factory"], [266, 2, 1, "", "posterior"], [266, 2, 1, "", "posterior_stats"], [266, 2, 1, "", "replicate"], [266, 3, 1, "", "supports_multi_output"], [266, 3, 1, "", "supports_transfer_learning"], [266, 2, 1, "", "to_botorch"], [266, 2, 1, "", "to_dict"], [266, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.fit.params": [[266, 4, 1, "", "measurements"], [266, 4, 1, "", "objective"], [266, 4, 1, "", "searchspace"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_dict.params": [[266, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.from_json.params": [[266, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior.params": [[266, 4, 1, "", "candidates"]], "baybe.surrogates.gaussian_process.core.GaussianProcessSurrogate.posterior_stats.params": [[266, 4, 1, "", "candidates"], [266, 4, 1, "", "stats"]], "baybe.surrogates.gaussian_process.kernel_factory": [[268, 1, 1, "", "KernelFactory"], [269, 1, 1, "", "PlainKernelFactory"], [270, 5, 1, "", "to_kernel_factory"]], "baybe.surrogates.gaussian_process.kernel_factory.KernelFactory": [[268, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory": [[269, 2, 1, "", "__init__"], [269, 2, 1, "", "from_dict"], [269, 2, 1, "", "from_json"], [269, 3, 1, "", "kernel"], [269, 2, 1, "", "to_dict"], [269, 2, 1, "", "to_json"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_dict.params": [[269, 4, 1, "", "dictionary"]], "baybe.surrogates.gaussian_process.kernel_factory.PlainKernelFactory.from_json.params": [[269, 4, 1, "", "string"]], "baybe.surrogates.gaussian_process.presets": [[272, 0, 0, "-", "core"], [275, 0, 0, "-", "default"], [277, 0, 0, "-", "edbo"]], "baybe.surrogates.gaussian_process.presets.core": [[273, 1, 1, "", "GaussianProcessPreset"], [274, 5, 1, "", "make_gp_from_preset"]], "baybe.surrogates.gaussian_process.presets.core.GaussianProcessPreset": [[273, 3, 1, "", "BAYBE"]], "baybe.surrogates.gaussian_process.presets.default": [[276, 1, 1, "", "DefaultKernelFactory"]], "baybe.surrogates.gaussian_process.presets.default.DefaultKernelFactory": [[276, 2, 1, "", "__init__"]], "baybe.surrogates.gaussian_process.presets.edbo": [[278, 1, 1, "", "EDBOKernelFactory"]], "baybe.surrogates.gaussian_process.presets.edbo.EDBOKernelFactory": [[278, 2, 1, "", "__init__"]], "baybe.surrogates.linear": [[280, 1, 1, "", "BayesianLinearSurrogate"]], "baybe.surrogates.linear.BayesianLinearSurrogate": [[280, 2, 1, "", "__init__"], [280, 2, 1, "", "fit"], [280, 2, 1, "", "from_dict"], [280, 2, 1, "", "from_json"], [280, 3, 1, "", "model_params"], [280, 2, 1, "", "posterior"], [280, 2, 1, "", "posterior_stats"], [280, 2, 1, "", "replicate"], [280, 3, 1, "", "supports_multi_output"], [280, 3, 1, "", "supports_transfer_learning"], [280, 2, 1, "", "to_botorch"], [280, 2, 1, "", "to_dict"], [280, 2, 1, "", "to_json"]], "baybe.surrogates.linear.BayesianLinearSurrogate.fit.params": [[280, 4, 1, "", "measurements"], [280, 4, 1, "", "objective"], [280, 4, 1, "", "searchspace"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_dict.params": [[280, 4, 1, "", "dictionary"]], "baybe.surrogates.linear.BayesianLinearSurrogate.from_json.params": [[280, 4, 1, "", "string"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior.params": [[280, 4, 1, "", "candidates"]], "baybe.surrogates.linear.BayesianLinearSurrogate.posterior_stats.params": [[280, 4, 1, "", "candidates"], [280, 4, 1, "", "stats"]], "baybe.surrogates.naive": [[282, 1, 1, "", "MeanPredictionSurrogate"]], "baybe.surrogates.naive.MeanPredictionSurrogate": [[282, 2, 1, "", "__init__"], [282, 2, 1, "", "fit"], [282, 2, 1, "", "from_dict"], [282, 2, 1, "", "from_json"], [282, 2, 1, "", "posterior"], [282, 2, 1, "", "posterior_stats"], [282, 2, 1, "", "replicate"], [282, 3, 1, "", "supports_multi_output"], [282, 3, 1, "", "supports_transfer_learning"], [282, 2, 1, "", "to_botorch"], [282, 2, 1, "", "to_dict"], [282, 2, 1, "", "to_json"]], "baybe.surrogates.naive.MeanPredictionSurrogate.fit.params": [[282, 4, 1, "", "measurements"], [282, 4, 1, "", "objective"], [282, 4, 1, "", "searchspace"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_dict.params": [[282, 4, 1, "", "dictionary"]], "baybe.surrogates.naive.MeanPredictionSurrogate.from_json.params": [[282, 4, 1, "", "string"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior.params": [[282, 4, 1, "", "candidates"]], "baybe.surrogates.naive.MeanPredictionSurrogate.posterior_stats.params": [[282, 4, 1, "", "candidates"], [282, 4, 1, "", "stats"]], "baybe.surrogates.ngboost": [[284, 1, 1, "", "NGBoostSurrogate"]], "baybe.surrogates.ngboost.NGBoostSurrogate": [[284, 2, 1, "", "__init__"], [284, 2, 1, "", "fit"], [284, 2, 1, "", "from_dict"], [284, 2, 1, "", "from_json"], [284, 3, 1, "", "model_params"], [284, 2, 1, "", "posterior"], [284, 2, 1, "", "posterior_stats"], [284, 2, 1, "", "replicate"], [284, 3, 1, "", "supports_multi_output"], [284, 3, 1, "", "supports_transfer_learning"], [284, 2, 1, "", "to_botorch"], [284, 2, 1, "", "to_dict"], [284, 2, 1, "", "to_json"]], "baybe.surrogates.ngboost.NGBoostSurrogate.fit.params": [[284, 4, 1, "", "measurements"], [284, 4, 1, "", "objective"], [284, 4, 1, "", "searchspace"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_dict.params": [[284, 4, 1, "", "dictionary"]], "baybe.surrogates.ngboost.NGBoostSurrogate.from_json.params": [[284, 4, 1, "", "string"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior.params": [[284, 4, 1, "", "candidates"]], "baybe.surrogates.ngboost.NGBoostSurrogate.posterior_stats.params": [[284, 4, 1, "", "candidates"], [284, 4, 1, "", "stats"]], "baybe.surrogates.random_forest": [[286, 1, 1, "", "RandomForestSurrogate"]], "baybe.surrogates.random_forest.RandomForestSurrogate": [[286, 2, 1, "", "__init__"], [286, 2, 1, "", "fit"], [286, 2, 1, "", "from_dict"], [286, 2, 1, "", "from_json"], [286, 3, 1, "", "model_params"], [286, 2, 1, "", "posterior"], [286, 2, 1, "", "posterior_stats"], [286, 2, 1, "", "replicate"], [286, 3, 1, "", "supports_multi_output"], [286, 3, 1, "", "supports_transfer_learning"], [286, 2, 1, "", "to_botorch"], [286, 2, 1, "", "to_dict"], [286, 2, 1, "", "to_json"]], "baybe.surrogates.random_forest.RandomForestSurrogate.fit.params": [[286, 4, 1, "", "measurements"], [286, 4, 1, "", "objective"], [286, 4, 1, "", "searchspace"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_dict.params": [[286, 4, 1, "", "dictionary"]], "baybe.surrogates.random_forest.RandomForestSurrogate.from_json.params": [[286, 4, 1, "", "string"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior.params": [[286, 4, 1, "", "candidates"]], "baybe.surrogates.random_forest.RandomForestSurrogate.posterior_stats.params": [[286, 4, 1, "", "candidates"], [286, 4, 1, "", "stats"]], "baybe.surrogates.utils": [[288, 5, 1, "", "batchify_ensemble_predictor"], [289, 5, 1, "", "batchify_mean_var_prediction"], [290, 5, 1, "", "catch_constant_targets"]], "baybe.surrogates.utils.batchify_ensemble_predictor.params": [[288, 4, 1, "", "base_predictor"]], "baybe.surrogates.utils.catch_constant_targets.params": [[290, 4, 1, "", "cls"], [290, 4, 1, "", "std_threshold"]], "baybe.surrogates.validation": [[292, 5, 1, "", "make_dict_validator"], [293, 8, 1, "", "type_validation_converter"], [294, 5, 1, "", "validate_custom_architecture_cls"]], "baybe.surrogates.validation.make_dict_validator.params": [[292, 4, 1, "", "specification"]], "baybe.surrogates.validation.validate_custom_architecture_cls.params": [[294, 4, 1, "", "model_cls"]], "baybe.targets": [[296, 0, 0, "-", "base"], [298, 0, 0, "-", "binary"], [301, 0, 0, "-", "enum"], [304, 0, 0, "-", "numerical"], [306, 0, 0, "-", "transforms"]], "baybe.targets.base": [[297, 1, 1, "", "Target"]], "baybe.targets.base.Target": [[297, 2, 1, "", "__init__"], [297, 2, 1, "", "from_dict"], [297, 2, 1, "", "from_json"], [297, 3, 1, "", "name"], [297, 2, 1, "", "summary"], [297, 2, 1, "", "to_dict"], [297, 2, 1, "", "to_json"], [297, 2, 1, "", "to_objective"], [297, 2, 1, "", "transform"]], "baybe.targets.base.Target.from_dict.params": [[297, 4, 1, "", "dictionary"]], "baybe.targets.base.Target.from_json.params": [[297, 4, 1, "", "string"]], "baybe.targets.base.Target.transform.params": [[297, 4, 1, "", "series"]], "baybe.targets.binary": [[299, 1, 1, "", "BinaryTarget"], [300, 8, 1, "", "ChoiceValue"]], "baybe.targets.binary.BinaryTarget": [[299, 2, 1, "", "__init__"], [299, 3, 1, "", "failure_value"], [299, 2, 1, "", "from_dict"], [299, 2, 1, "", "from_json"], [299, 3, 1, "", "name"], [299, 3, 1, "", "success_value"], [299, 2, 1, "", "summary"], [299, 2, 1, "", "to_dict"], [299, 2, 1, "", "to_json"], [299, 2, 1, "", "to_objective"], [299, 2, 1, "", "transform"]], "baybe.targets.binary.BinaryTarget.from_dict.params": [[299, 4, 1, "", "dictionary"]], "baybe.targets.binary.BinaryTarget.from_json.params": [[299, 4, 1, "", "string"]], "baybe.targets.binary.BinaryTarget.transform.params": [[299, 4, 1, "", "series"]], "baybe.targets.enum": [[302, 1, 1, "", "TargetMode"], [303, 1, 1, "", "TargetTransformation"]], "baybe.targets.enum.TargetMode": [[302, 3, 1, "", "MATCH"], [302, 3, 1, "", "MAX"], [302, 3, 1, "", "MIN"]], "baybe.targets.enum.TargetTransformation": [[303, 3, 1, "", "BELL"], [303, 3, 1, "", "LINEAR"], [303, 3, 1, "", "TRIANGULAR"]], "baybe.targets.numerical": [[305, 1, 1, "", "NumericalTarget"]], "baybe.targets.numerical.NumericalTarget": [[305, 2, 1, "", "__init__"], [305, 3, 1, "", "bounds"], [305, 2, 1, "", "from_dict"], [305, 2, 1, "", "from_json"], [305, 3, 1, "", "mode"], [305, 3, 1, "", "name"], [305, 2, 1, "", "summary"], [305, 2, 1, "", "to_dict"], [305, 2, 1, "", "to_json"], [305, 2, 1, "", "to_objective"], [305, 2, 1, "", "transform"], [305, 3, 1, "", "transformation"]], "baybe.targets.numerical.NumericalTarget.from_dict.params": [[305, 4, 1, "", "dictionary"]], "baybe.targets.numerical.NumericalTarget.from_json.params": [[305, 4, 1, "", "string"]], "baybe.targets.numerical.NumericalTarget.transform.params": [[305, 4, 1, "", "series"]], "baybe.targets.transforms": [[307, 5, 1, "", "bell_transform"], [308, 5, 1, "", "linear_transform"], [309, 5, 1, "", "triangular_transform"]], "baybe.targets.transforms.bell_transform.params": [[307, 4, 1, "", "arr"], [307, 4, 1, "", "lower"], [307, 4, 1, "", "upper"]], "baybe.targets.transforms.linear_transform.params": [[308, 4, 1, "", "arr"], [308, 4, 1, "", "descending"], [308, 4, 1, "", "lower"], [308, 4, 1, "", "upper"]], "baybe.targets.transforms.triangular_transform.params": [[309, 4, 1, "", "arr"], [309, 4, 1, "", "lower"], [309, 4, 1, "", "upper"]], "baybe.telemetry": [[311, 5, 1, "", "get_user_details"], [312, 5, 1, "", "is_enabled"], [313, 5, 1, "", "telemetry_record_recommended_measurement_percentage"], [314, 5, 1, "", "telemetry_record_value"]], "baybe.telemetry.telemetry_record_recommended_measurement_percentage.params": [[313, 4, 1, "", "cached_recommendation"], [313, 4, 1, "", "measurements"], [313, 4, 1, "", "parameters"]], "baybe.telemetry.telemetry_record_value.params": [[314, 4, 1, "", "instrument_name"], [314, 4, 1, "", "value"]], "baybe.utils": [[316, 0, 0, "-", "augmentation"], [319, 0, 0, "-", "basic"], [335, 0, 0, "-", "boolean"], [339, 0, 0, "-", "chemistry"], [344, 0, 0, "-", "clustering_algorithms"], [348, 0, 0, "-", "conversion"], [352, 0, 0, "-", "dataframe"], [369, 0, 0, "-", "interval"], [374, 0, 0, "-", "memory"], [376, 0, 0, "-", "numerical"], [383, 0, 0, "-", "random"], [386, 0, 0, "-", "sampling_algorithms"], [390, 0, 0, "-", "scaling"], [392, 0, 0, "-", "torch"], [395, 0, 0, "-", "validation"]], "baybe.utils.augmentation": [[317, 5, 1, "", "df_apply_dependency_augmentation"], [318, 5, 1, "", "df_apply_permutation_augmentation"]], "baybe.utils.augmentation.df_apply_dependency_augmentation.params": [[317, 4, 1, "", "affected"], [317, 4, 1, "", "causing"], [317, 4, 1, "", "df"]], "baybe.utils.augmentation.df_apply_permutation_augmentation.params": [[318, 4, 1, "", "column_groups"], [318, 4, 1, "", "df"]], "baybe.utils.basic": [[320, 1, 1, "", "Dummy"], [321, 8, 1, "", "UNSPECIFIED"], [322, 1, 1, "", "UnspecifiedType"], [323, 1, 1, "", "classproperty"], [324, 5, 1, "", "convert_to_float"], [325, 5, 1, "", "find_subclass"], [326, 5, 1, "", "get_baseclasses"], [327, 5, 1, "", "get_subclasses"], [328, 5, 1, "", "group_duplicate_values"], [329, 5, 1, "", "hilberts_factory"], [330, 5, 1, "", "is_all_instance"], [331, 5, 1, "", "match_attributes"], [332, 5, 1, "", "refers_to"], [333, 5, 1, "", "register_hooks"], [334, 5, 1, "", "to_tuple"]], "baybe.utils.basic.Dummy": [[320, 2, 1, "", "__init__"]], "baybe.utils.basic.classproperty": [[323, 2, 1, "", "__init__"]], "baybe.utils.basic.get_baseclasses.params": [[326, 4, 1, "", "abstract"], [326, 4, 1, "", "cls"], [326, 4, 1, "", "recursive"]], "baybe.utils.basic.get_subclasses.params": [[327, 4, 1, "", "abstract"], [327, 4, 1, "", "cls"], [327, 4, 1, "", "recursive"]], "baybe.utils.basic.group_duplicate_values.params": [[328, 4, 1, "", "dictionary"]], "baybe.utils.basic.match_attributes.params": [[331, 4, 1, "", "callable_"], [331, 4, 1, "", "ignore"], [331, 4, 1, "", "object"], [331, 4, 1, "", "strict"]], "baybe.utils.basic.register_hooks.params": [[333, 4, 1, "", "post_hooks"], [333, 4, 1, "", "pre_hooks"], [333, 4, 1, "", "target"]], "baybe.utils.boolean": [[336, 5, 1, "", "check_if_in"], [337, 5, 1, "", "is_abstract"], [338, 5, 1, "", "strtobool"]], "baybe.utils.boolean.check_if_in.params": [[336, 4, 1, "", "allowed"], [336, 4, 1, "", "element"]], "baybe.utils.boolean.is_abstract.params": [[337, 4, 1, "", "cls"]], "baybe.utils.boolean.strtobool.params": [[338, 4, 1, "", "val"]], "baybe.utils.chemistry": [[340, 5, 1, "", "get_canonical_smiles"], [341, 5, 1, "", "get_fingerprint_class"], [342, 5, 1, "", "name_to_smiles"], [343, 5, 1, "", "smiles_to_fingerprint_features"]], "baybe.utils.chemistry.get_fingerprint_class.params": [[341, 4, 1, "", "encoding"]], "baybe.utils.chemistry.name_to_smiles.params": [[342, 4, 1, "", "name"]], "baybe.utils.chemistry.smiles_to_fingerprint_features.params": [[343, 4, 1, "", "encoding"], [343, 4, 1, "", "kwargs_conformer"], [343, 4, 1, "", "kwargs_fingerprint"], [343, 4, 1, "", "prefix"], [343, 4, 1, "", "smiles"]], "baybe.utils.clustering_algorithms": [[345, 0, 0, "-", "third_party"]], "baybe.utils.clustering_algorithms.third_party": [[346, 0, 0, "-", "kmedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids": [[347, 1, 1, "", "KMedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids": [[347, 2, 1, "", "__init__"], [347, 2, 1, "", "fit"], [347, 2, 1, "", "fit_predict"], [347, 2, 1, "", "fit_transform"], [347, 2, 1, "", "get_metadata_routing"], [347, 2, 1, "", "get_params"], [347, 2, 1, "", "predict"], [347, 2, 1, "", "set_output"], [347, 2, 1, "", "set_params"], [347, 2, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit.params": [[347, 4, 1, "", "-------"], [347, 4, 1, "", "Returns"], [347, 4, 1, "", "X"], [347, 4, 1, "", "self"], [347, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_predict.params": [[347, 4, 1, "", "**kwargs"], [347, 4, 1, "", "X"], [347, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.fit_transform.params": [[347, 4, 1, "", "**fit_params"], [347, 4, 1, "", "X"], [347, 4, 1, "", "y"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.get_params.params": [[347, 4, 1, "", "deep"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params": [[347, 4, 1, "", "                [4"], [347, 4, 1, "", "-----"], [347, 4, 1, "", "--------"], [347, 4, 1, "", "----------"], [347, 4, 1, "", "0"], [347, 4, 1, "", "0]"], [347, 4, 1, "", "0]])"], [347, 4, 1, "", "1"], [347, 4, 1, "", "1])"], [347, 4, 1, "", "2]"], [347, 4, 1, "", "4]"], [347, 4, 1, "", "4]])"], [347, 4, 1, "", "A simple and fast algorithm for K-medoids"], [347, 4, 1, "", "Also"], [347, 4, 1, "", "Attributes"], [347, 4, 1, "", "Examples"], [347, 4, 1, "", "Jun"], [347, 4, 1, "", "KMeans"], [347, 4, 1, "", "Maranzana"], [347, 4, 1, "", "Notes"], [347, 4, 1, "", "On the location of supply points to minimize"], [347, 4, 1, "", "Park"], [347, 4, 1, "", "References"], [347, 4, 1, "", "X "], [347, 4, 1, "", "[1"], [347, 4, 1, "", "[4"], [347, 4, 1, "", "all pairwise distances are calculated and stored in memory for"], [347, 4, 1, "", "array([0"], [347, 4, 1, "", "cluster_centers_"], [347, 4, 1, "", "duration of fit"], [347, 4, 1, "", "import numpy as np"], [347, 4, 1, "", "inertia_"], [347, 4, 1, "", "init"], [347, 4, 1, "", "kmedoids "], [347, 4, 1, "", "labels_"], [347, 4, 1, "", "max_iter"], [347, 4, 1, "", "medoid_indices_"], [347, 4, 1, "", "method"], [347, 4, 1, "", "metric"], [347, 4, 1, "", "n_clusters"], [347, 4, 1, "", "random_state"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.2": [[347, 4, 1, "", "]"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.8": [[347, 4, 1, "", "0"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.C.H": [[347, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.F.E": [[347, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.KMedoids with various distance metrics": [[347, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.array([[1": [[347, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.from baybe.utils": [[347, 4, 1, "", "clustering_algorithms import KMedoids"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.kmedoids": [[347, 4, 1, "", "cluster_centers_"], [347, 4, 1, "", "inertia_"], [347, 4, 1, "", "labels_"], [347, 4, 1, "", "predict([[0"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.scikit-learn-extra/examples/plot_kmedoids_digits": [[347, 4, 1, "", "py for examples"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.params.space complexity is O(n_samples ** 2)": [[347, 4, 1, "", ""]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.predict.params": [[347, 4, 1, "", "-------"], [347, 4, 1, "", "Returns"], [347, 4, 1, "", "X"], [347, 4, 1, "", "labels"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_output.params": [[347, 4, 1, "", "transform"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.set_params.params": [[347, 4, 1, "", "**params"]], "baybe.utils.clustering_algorithms.third_party.kmedoids.KMedoids.transform.params": [[347, 4, 1, "", "-------"], [347, 4, 1, "", "Returns"], [347, 4, 1, "", "X"], [347, 4, 1, "", "X_new"]], "baybe.utils.conversion": [[349, 5, 1, "", "fraction_to_float"], [350, 5, 1, "", "nonstring_to_tuple"], [351, 5, 1, "", "to_string"]], "baybe.utils.conversion.fraction_to_float.params": [[349, 4, 1, "", "value"]], "baybe.utils.conversion.to_string.params": [[351, 4, 1, "", "*fields"], [351, 4, 1, "", "header"], [351, 4, 1, "", "single_line"]], "baybe.utils.dataframe": [[353, 5, 1, "", "add_fake_measurements"], [354, 5, 1, "", "add_noise_to_perturb_degenerate_rows"], [355, 5, 1, "", "add_parameter_noise"], [356, 5, 1, "", "arrays_to_dataframes"], [357, 5, 1, "", "create_fake_input"], [358, 5, 1, "", "df_drop_single_value_columns"], [359, 5, 1, "", "df_drop_string_columns"], [360, 5, 1, "", "df_uncorrelated_features"], [361, 5, 1, "", "filter_df"], [362, 5, 1, "", "fuzzy_row_match"], [363, 5, 1, "", "get_transform_objects"], [364, 5, 1, "", "handle_missing_values"], [365, 5, 1, "", "normalize_input_dtypes"], [366, 5, 1, "", "pretty_print_df"], [367, 5, 1, "", "to_tensor"], [368, 5, 1, "", "transform_target_columns"]], "baybe.utils.dataframe.add_fake_measurements.params": [[353, 4, 1, "", "bad_intervals"], [353, 4, 1, "", "data"], [353, 4, 1, "", "good_intervals"], [353, 4, 1, "", "good_reference_values"], [353, 4, 1, "", "targets"]], "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows.params": [[354, 4, 1, "", "df"], [354, 4, 1, "", "noise_ratio"]], "baybe.utils.dataframe.add_parameter_noise.params": [[355, 4, 1, "", "data"], [355, 4, 1, "", "noise_level"], [355, 4, 1, "", "noise_type"], [355, 4, 1, "", "parameters"]], "baybe.utils.dataframe.arrays_to_dataframes.params": [[356, 4, 1, "", "input_labels"], [356, 4, 1, "", "output_labels"], [356, 4, 1, "", "use_torch"]], "baybe.utils.dataframe.create_fake_input.params": [[357, 4, 1, "", "**kwargs"], [357, 4, 1, "", "n_rows"], [357, 4, 1, "", "parameters"], [357, 4, 1, "", "targets"]], "baybe.utils.dataframe.df_drop_single_value_columns.params": [[358, 4, 1, "", "df"], [358, 4, 1, "", "lst_exclude"]], "baybe.utils.dataframe.df_drop_string_columns.params": [[359, 4, 1, "", "df"], [359, 4, 1, "", "ignore_list"]], "baybe.utils.dataframe.df_uncorrelated_features.params": [[360, 4, 1, "", "df"], [360, 4, 1, "", "exclude_list"], [360, 4, 1, "", "threshold"]], "baybe.utils.dataframe.filter_df.params": [[361, 4, 1, "", "complement"], [361, 4, 1, "", "df"], [361, 4, 1, "", "to_keep"]], "baybe.utils.dataframe.fuzzy_row_match.params": [[362, 4, 1, "", "left_df"], [362, 4, 1, "", "parameters"], [362, 4, 1, "", "right_df"]], "baybe.utils.dataframe.get_transform_objects.params": [[363, 4, 1, "", "allow_extra"], [363, 4, 1, "", "allow_missing"], [363, 4, 1, "", "df"], [363, 4, 1, "", "objects"]], "baybe.utils.dataframe.handle_missing_values.params": [[364, 4, 1, "", "columns"], [364, 4, 1, "", "data"], [364, 4, 1, "", "drop"]], "baybe.utils.dataframe.normalize_input_dtypes.params": [[365, 4, 1, "", "df"], [365, 4, 1, "", "objects"]], "baybe.utils.dataframe.pretty_print_df.params": [[366, 4, 1, "", "df"], [366, 4, 1, "", "max_columns"], [366, 4, 1, "", "max_colwidth"], [366, 4, 1, "", "max_rows"], [366, 4, 1, "", "precision"]], "baybe.utils.dataframe.to_tensor.params": [[367, 4, 1, "", "*x"]], "baybe.utils.interval": [[370, 7, 1, "", "InfiniteIntervalError"], [371, 1, 1, "", "Interval"], [372, 5, 1, "", "convert_bounds"], [373, 5, 1, "", "use_fallback_constructor_hook"]], "baybe.utils.interval.InfiniteIntervalError": [[370, 2, 1, "", "__init__"], [370, 2, 1, "", "__new__"]], "baybe.utils.interval.Interval": [[371, 2, 1, "", "__init__"], [371, 6, 1, "", "center"], [371, 2, 1, "", "contains"], [371, 2, 1, "", "create"], [371, 2, 1, "", "from_dict"], [371, 2, 1, "", "from_json"], [371, 6, 1, "", "is_bounded"], [371, 6, 1, "", "is_degenerate"], [371, 6, 1, "", "is_fully_unbounded"], [371, 6, 1, "", "is_half_bounded"], [371, 6, 1, "", "is_left_bounded"], [371, 6, 1, "", "is_right_bounded"], [371, 3, 1, "", "lower"], [371, 2, 1, "", "to_dict"], [371, 2, 1, "", "to_json"], [371, 2, 1, "", "to_ndarray"], [371, 2, 1, "", "to_tensor"], [371, 2, 1, "", "to_tuple"], [371, 3, 1, "", "upper"]], "baybe.utils.interval.Interval.contains.params": [[371, 4, 1, "", "number"]], "baybe.utils.interval.Interval.from_dict.params": [[371, 4, 1, "", "dictionary"]], "baybe.utils.interval.Interval.from_json.params": [[371, 4, 1, "", "string"]], "baybe.utils.interval.convert_bounds.params": [[372, 4, 1, "", "bounds"]], "baybe.utils.memory": [[375, 5, 1, "", "bytes_to_human_readable"]], "baybe.utils.memory.bytes_to_human_readable.params": [[375, 4, 1, "", "num"]], "baybe.utils.numerical": [[377, 3, 1, "", "DTypeFloatNumpy"], [378, 3, 1, "", "DTypeFloatONNX"], [379, 8, 1, "", "VARNAME_NUMPY_USE_SINGLE_PRECISION"], [380, 5, 1, "", "closer_element"], [381, 5, 1, "", "closest_element"], [382, 5, 1, "", "geom_mean"]], "baybe.utils.numerical.closer_element.params": [[380, 4, 1, "", "target"], [380, 4, 1, "", "x"], [380, 4, 1, "", "y"]], "baybe.utils.numerical.closest_element.params": [[381, 4, 1, "", "array"], [381, 4, 1, "", "target"]], "baybe.utils.numerical.geom_mean.params": [[382, 4, 1, "", "arr"], [382, 4, 1, "", "weights"]], "baybe.utils.random": [[384, 5, 1, "", "set_random_seed"], [385, 5, 1, "", "temporary_seed"]], "baybe.utils.random.set_random_seed.params": [[384, 4, 1, "", "seed"]], "baybe.utils.random.temporary_seed.params": [[385, 4, 1, "", "seed"]], "baybe.utils.sampling_algorithms": [[387, 1, 1, "", "DiscreteSamplingMethod"], [388, 5, 1, "", "farthest_point_sampling"], [389, 5, 1, "", "sample_numerical_df"]], "baybe.utils.sampling_algorithms.DiscreteSamplingMethod": [[387, 3, 1, "", "FPS"], [387, 3, 1, "", "Random"]], "baybe.utils.sampling_algorithms.farthest_point_sampling.params": [[388, 4, 1, "", "initialization"], [388, 4, 1, "", "n_samples"], [388, 4, 1, "", "points"], [388, 4, 1, "", "random_tie_break"]], "baybe.utils.sampling_algorithms.sample_numerical_df.params": [[389, 4, 1, "", "df"], [389, 4, 1, "", "method"], [389, 4, 1, "", "n_points"]], "baybe.utils.scaling": [[391, 1, 1, "", "ColumnTransformer"]], "baybe.utils.scaling.ColumnTransformer": [[391, 2, 1, "", "__init__"], [391, 2, 1, "", "fit"], [391, 3, 1, "", "mapping"], [391, 2, 1, "", "transform"]], "baybe.utils.torch": [[393, 8, 1, "", "DTypeFloatTorch"], [394, 8, 1, "", "VARNAME_TORCH_USE_SINGLE_PRECISION"]], "baybe.utils.validation": [[396, 5, 1, "", "finite_float"], [397, 5, 1, "", "non_inf_float"], [398, 5, 1, "", "non_nan_float"], [399, 5, 1, "", "validate_not_nan"], [400, 5, 1, "", "validate_parameter_input"], [401, 5, 1, "", "validate_target_input"]], "baybe.utils.validation.validate_parameter_input.params": [[400, 4, 1, "", "data"], [400, 4, 1, "", "numerical_measurements_must_be_within_tolerance"], [400, 4, 1, "", "parameters"]], "baybe.utils.validation.validate_target_input.params": [[401, 4, 1, "", "data"], [401, 4, 1, "", "targets"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"], "8": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception", "8": "py:data"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 196, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 329, 347, 367, 371, 402, 405, 412, 416, 419, 420, 423, 424, 426, 427, 428, 429, 430, 432, 437, 441, 442, 443, 446, 447, 448, 451, 452, 453, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 467], "0": [8, 13, 16, 22, 31, 34, 44, 45, 51, 109, 144, 152, 155, 175, 183, 184, 185, 196, 221, 244, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 307, 308, 309, 317, 318, 338, 347, 354, 355, 360, 361, 378, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 421, 423, 424, 426, 427, 429, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 446, 451, 452, 453, 454, 455, 459, 460, 462, 463, 464, 466, 469], "00": [436, 462], "000": [416, 438], "0006810840000071039": 419, "001": [44, 354, 423, 455], "005": [404, 405, 406, 408, 409], "01": [175, 411, 412, 417, 420, 435, 436, 443], "015695": 427, "019003": 427, "019650": 434, "02": 443, "021": [278, 360], "025773": 427, "026002": 427, "027329": 427, "03213": [278, 360], "05": 443, "052766": 434, "053246": 435, "056835": 431, "057": [404, 405, 406, 408, 409, 419], "058874": 431, "06": [221, 290, 423], "064160": 427, "067086": 434, "071766": 427, "077857": 427, "08": 443, "093946": 434, "094114": 434, "09653736976391157": 429, "0f": 420, "1": [13, 16, 26, 31, 44, 109, 126, 144, 155, 186, 196, 213, 244, 246, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 307, 308, 309, 314, 317, 318, 328, 338, 347, 355, 357, 361, 378, 382, 388, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 421, 423, 424, 426, 427, 429, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 446, 447, 451, 453, 454, 455, 459, 460, 462, 463, 464, 466, 469], "10": [13, 16, 196, 246, 278, 360, 403, 405, 408, 414, 415, 416, 420, 423, 424, 426, 427, 429, 431, 432, 434, 436, 438, 439, 440, 442, 443, 446, 453, 454, 456, 460, 464, 469], "100": [409, 414, 415, 416, 417, 420, 423, 424, 426, 427, 431, 432, 438, 443, 458, 459, 460, 464, 466, 469], "1000": [432, 464], "102": 435, "1024": [149, 448, 460], "1038": [278, 360], "104": 436, "105": [404, 405, 406, 408, 409, 419, 431, 462], "11": [323, 426, 427, 447, 453], "111": 438, "112451": 427, "1147": 416, "1148": 416, "1149": 416, "115": 431, "1150": 416, "116219": 431, "116298": 431, "119642": 431, "12": [426, 427, 436, 453, 454, 462], "120": [404, 405, 406, 408, 409, 414, 416, 419, 460], "120000": 435, "120587": 427, "122": 438, "124": 436, "124057": 434, "126": [414, 416, 417, 447], "1268824": [404, 405, 406], "127": 408, "128": 10, "129": 347, "13": [426, 427, 442, 449, 462], "130229": 427, "1337": [420, 421, 469], "135": 347, "138652": 436, "139849": 427, "14": [426, 462], "142": 409, "14448993259018328": 429, "1454": 448, "15": [246, 416, 426, 442, 443, 446, 454, 462], "150": [414, 417, 455], "1500": 460, "151": 416, "153": [404, 405, 406, 408, 409, 419], "16": [366, 378, 426], "165053": 427, "17": [409, 426, 427, 431], "172116": 427, "177": 438, "177585": 436, "18": [426, 431, 454], "180": 414, "182221": 431, "186293": 431, "188": 438, "19": [426, 427, 431], "190497": 427, "192": 416, "1963": 347, "1e": [221, 290, 423], "2": [8, 13, 16, 22, 109, 111, 126, 246, 317, 318, 328, 347, 353, 361, 382, 388, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 420, 421, 423, 424, 426, 427, 429, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 446, 451, 453, 454, 455, 458, 459, 460, 462, 463, 464, 466], "20": [13, 16, 155, 246, 403, 404, 405, 406, 420, 421, 426, 427, 431, 448, 460, 467, 469], "200": [405, 414, 416, 423, 424, 429, 438], "2000": 423, "2004": 451, "2007": 467, "200732": 427, "2009": 347, "201": 435, "2021": 405, "2022": 446, "2025": 446, "203": 409, "203777": 427, "205119": 427, "209587": 434, "21": [426, 427, 439], "22": [13, 16, 409, 426, 431, 454], "221": 448, "222": 438, "224207": 409, "227": 431, "23": [426, 436, 454, 464], "235213": 434, "235516": 431, "24": [415, 426, 427, 462], "241": 460, "242109": 436, "242254": 434, "25": [420, 426, 427, 442, 462], "250": [408, 452], "253": 431, "256": 431, "258": 431, "259": 431, "26": [426, 462], "262835": 434, "265173": 431, "266851": 431, "267": 431, "27": [426, 427, 462], "277": 431, "277727": 427, "278": 431, "279": 431, "279665": 434, "28": 426, "280": 431, "286900": 436, "287920": 427, "289708": 431, "29": [426, 427, 446], "298252": 427, "3": [246, 317, 318, 323, 328, 361, 366, 404, 405, 406, 409, 412, 414, 415, 416, 417, 419, 421, 424, 426, 427, 429, 431, 432, 434, 435, 436, 438, 439, 442, 443, 446, 447, 449, 451, 453, 454, 455, 458, 460, 462, 463, 464, 466, 467], "30": [403, 417, 421, 426, 427, 460], "300": [347, 423], "302168": 436, "303580": 434, "304880": 434, "3078f3": 448, "309078": 427, "31": [408, 426, 427, 431, 439], "310315": 431, "32": [415, 426, 435, 454, 460], "33": [415, 426, 431], "3336": 347, "3341": 347, "334798": 431, "34": [415, 431, 454], "348236": 427, "349473": 431, "35": [415, 426], "350703": 427, "351403": 431, "354581": 434, "355050": 427, "36": [347, 427], "374083": 434, "376050": 435, "38": 454, "380052": 427, "389460": 436, "39": [427, 431, 460], "390856": 431, "394437": 427, "3d": 421, "4": [13, 16, 149, 317, 318, 347, 366, 409, 411, 412, 414, 415, 416, 417, 421, 426, 427, 429, 431, 434, 435, 436, 446, 451, 453, 454, 455, 460, 462], "40": [426, 459, 460], "405289": 427, "407055": 434, "407423": 427, "40x": 448, "42": [429, 432, 454], "428927": 434, "434337": 436, "447": 414, "448": 414, "448160": 427, "449": 414, "45": [426, 427, 431, 466], "450": 414, "451094": 434, "451324": 427, "46": 409, "468": 448, "472032": 427, "477448": 434, "487243": 431, "493902": 427, "494737": 427, "498848": 427, "499243": 427, "4x": 448, "5": [109, 155, 317, 318, 404, 406, 411, 414, 415, 416, 417, 420, 423, 424, 426, 427, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 446, 451, 452, 453, 454, 455, 460, 462, 464, 467, 469], "50": [417, 424, 426, 429, 442, 443, 451, 452, 460, 462, 466], "500": [421, 460], "500790": 427, "501995": 427, "503178": 431, "506013": 431, "5066666666666667": 429, "51": 431, "52": 431, "524982": 427, "529192": 431, "53": 431, "5313": 334, "534439": 431, "538164": 436, "54": [431, 446, 454], "55": [431, 466], "551621": 431, "56": [454, 464], "57": 427, "574018": 427, "574458": 436, "58": 427, "583835": 408, "59": [427, 438, 446, 454], "590": 405, "593469": 434, "594942": 427, "594953": 427, "595116": 434, "6": [317, 318, 366, 404, 405, 406, 414, 415, 416, 417, 426, 427, 429, 431, 434, 436, 438, 451, 455, 462], "60": [431, 459], "602596": 427, "602968": 427, "608557": 431, "616012": 427, "618873": 431, "62": [429, 454], "626533": 427, "63": [427, 431], "630297": 427, "631381": 427, "633391": 431, "64": 196, "640210": 434, "640909": 427, "642970": 427, "649312": 409, "65": [429, 431], "650050": 427, "66": 427, "660281": 427, "66368270ffd51418ec58bd793f2d9b1b": 467, "666762": 427, "672427": 427, "672654": 431, "673733": 431, "677950": 431, "680172": 427, "681281": 431, "682177": 427, "69": [404, 405, 406, 431], "692087": 408, "698737": 427, "7": [155, 317, 318, 360, 415, 417, 421, 426, 427, 431, 432, 434, 442, 451, 453, 454, 460, 462], "70": 426, "706616": 427, "706667": 435, "71": 460, "72": 454, "726727": 434, "73": 431, "730679": 436, "732399": 427, "734076": 434, "738528": 427, "740818": 431, "743801": 434, "743866": 434, "745": 469, "745640": 427, "747188": 427, "75": [426, 462], "764611": 434, "771629": 427, "774511": 431, "778": 438, "785027": 431, "785265": 434, "79": 446, "794312": 409, "799348": 436, "7gz": 460, "7hf": 460, "8": [318, 347, 404, 406, 414, 416, 417, 426, 427, 429, 431, 434, 446, 451, 453, 455], "80": [427, 455], "801012": 427, "817066": 427, "820085": 427, "83": 454, "834210": 427, "8389": 334, "84": 431, "8417": 334, "848033": 427, "85": [431, 436], "855169": 427, "857": 416, "860714": 434, "861": 417, "862": 417, "863": 417, "864": 417, "87": [438, 454], "88": 438, "882087": 431, "8859": 423, "889": 438, "889465": 434, "889713": 431, "89": [405, 435, 438], "890268": 427, "894510": 434, "899066": 434, "8jq": 460, "9": [13, 16, 417, 421, 423, 426, 427, 431, 434, 451, 453, 454, 462, 463], "90": [404, 405, 406, 408, 409, 419, 438, 462], "902836": 427, "908522": 427, "909837": 427, "91": 454, "915693": 434, "922035": 431, "929116": 434, "930456": 434, "934289": 436, "934856": 434, "935984": 434, "938738": 427, "939510": 427, "95": [431, 435], "951126": 431, "957597": 434, "96": 405, "961521": 427, "964099": 427, "968339": 427, "97": 431, "973791": 434, "974796": 427, "986706": 434, "987523": 427, "99": 431, "999": 455, "A": [0, 13, 16, 26, 31, 38, 40, 41, 42, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 73, 75, 79, 81, 82, 83, 84, 87, 90, 92, 97, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 130, 132, 138, 141, 142, 144, 152, 155, 157, 158, 159, 168, 169, 170, 171, 172, 173, 174, 175, 178, 184, 185, 186, 188, 191, 194, 196, 198, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 222, 223, 238, 239, 244, 246, 248, 250, 253, 255, 257, 260, 262, 266, 268, 269, 276, 278, 280, 282, 284, 286, 297, 299, 305, 307, 308, 309, 317, 323, 326, 327, 328, 331, 341, 347, 353, 360, 361, 363, 364, 375, 382, 386, 388, 391, 403, 415, 424, 426, 427, 429, 431, 439, 440, 445, 447, 448, 449, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467], "AND": [54, 416, 451, 455], "AS": [446, 451], "And": 423, "As": [404, 405, 406, 421, 429, 431, 442, 443, 446, 447, 448, 453, 454, 455, 458, 461, 462, 464], "But": 466, "By": [97, 125, 158, 221, 337, 361, 427, 449, 453, 454, 456, 457, 459, 461, 462], "FOR": 451, "For": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 165, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 244, 250, 253, 255, 257, 258, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 297, 299, 305, 310, 333, 362, 368, 371, 388, 391, 404, 405, 406, 408, 409, 415, 419, 420, 421, 426, 427, 429, 431, 436, 442, 443, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469], "If": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 97, 101, 122, 125, 126, 130, 132, 134, 157, 158, 163, 164, 184, 185, 188, 194, 196, 213, 215, 221, 227, 228, 244, 246, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 308, 313, 318, 326, 327, 331, 333, 336, 338, 341, 347, 349, 351, 353, 354, 355, 357, 360, 361, 362, 363, 364, 388, 389, 400, 401, 409, 411, 420, 426, 435, 436, 439, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469], "In": [31, 45, 57, 157, 196, 215, 242, 244, 331, 366, 404, 405, 406, 408, 420, 421, 423, 426, 427, 429, 431, 432, 435, 436, 439, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469], "It": [26, 178, 185, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 242, 261, 282, 347, 353, 404, 408, 409, 415, 424, 426, 429, 431, 436, 438, 439, 440, 442, 453, 454, 455, 456, 460, 461, 462, 464, 469], "Its": [246, 423], "No": [362, 404, 405, 420, 434, 445, 448], "Not": [347, 451, 455], "OF": [446, 451], "OR": [446, 451], "Of": [409, 418, 444, 463], "On": [347, 423, 429], "One": [146, 404, 406, 432, 446], "Or": 456, "Such": [409, 455, 458, 464], "That": [44, 215, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 308, 409, 414, 426, 449, 462, 464, 467], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 97, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 165, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 233, 234, 236, 238, 242, 244, 246, 248, 253, 255, 257, 258, 260, 262, 266, 269, 280, 282, 284, 286, 288, 290, 294, 297, 299, 302, 305, 307, 308, 309, 311, 313, 314, 317, 318, 323, 326, 327, 328, 331, 333, 336, 337, 338, 341, 347, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 375, 380, 381, 382, 384, 385, 388, 389, 400, 401, 404, 405, 406, 409, 414, 415, 416, 417, 419, 420, 421, 423, 424, 426, 431, 435, 436, 440, 442, 443, 445, 447, 448, 449, 451, 453, 454, 455, 456, 458, 459, 460, 461, 462, 465, 466, 468, 469], "Then": 421, "There": [86, 290, 378, 426, 434, 446, 447, 449, 453, 457, 462, 465], "These": [311, 402, 405, 406, 407, 410, 413, 418, 422, 425, 428, 430, 433, 437, 441, 446, 449, 453, 455, 456, 460, 462], "To": [404, 409, 420, 421, 427, 429, 432, 438, 442, 443, 446, 447, 449, 453, 454, 455, 456, 457, 459, 460, 464, 465], "Will": 452, "With": [353, 420, 421, 426, 429, 432, 442, 443, 446, 453, 455, 460, 463], "_": [134, 163, 164, 218, 224, 231, 347, 411, 420, 421, 443], "__": [134, 347], "__class__": [419, 429], "__excepthook__": 447, "__init__": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 253, 255, 257, 258, 260, 262, 266, 268, 269, 276, 278, 280, 282, 284, 286, 297, 299, 305, 320, 323, 347, 370, 371, 391, 462, 463], "__name__": [419, 429], "__new__": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 146, 147, 149, 370], "__str__": 448, "__version__": 448, "_amount": 426, "_ardregressionparam": 280, "_arraylik": 356, "_buffer": [13, 16, 126, 159, 307, 308, 309, 381, 382], "_c": 327, "_cumbest": 244, "_default_my_attribut": 449, "_discretelabellikeparamet": [141, 144, 155], "_expectedhypervolumeimprov": [13, 16], "_fit": 294, "_has_switch": 186, "_iterbest": 244, "_label": 426, "_measur": 244, "_n_last_measur": [183, 184, 185], "_nbase": 343, "_nestedsequ": [13, 16, 126, 159, 307, 308, 309, 381, 382], "_ngbregressorparam": 284, "_no_tl": 442, "_option": 448, "_posterior": 294, "_posterior_comp": 448, "_randomforestregressorparam": 286, "_sphinx_paramlinks_bayb": 347, "_step": [183, 184, 185], "_supportsarrai": [13, 16, 126, 159, 307, 308, 309, 381, 382], "_surrogategett": 260, "_t": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 226, 234, 235, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 328, 329, 330, 350, 363, 365, 371], "_target": 448, "_tparamet": 158, "_tsurrog": [289, 290], "_u": 328, "_validate_my_attribut": 449, "_was_us": [183, 184, 185], "a1": 318, "a2": 318, "ab": [417, 426], "abbrevi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 325, 332, 448, 468], "abc": [24, 34, 35, 36, 37, 38, 40, 104, 105, 106, 122, 138, 139, 167, 181, 191, 194, 201, 206, 255, 257, 297, 337], "abil": [452, 453, 457, 467], "abl": [421, 447, 453, 455, 460, 463, 469], "about": [8, 26, 31, 139, 155, 297, 314, 404, 405, 406, 426, 435, 436, 446, 448, 449, 454, 458, 460, 462, 465], "abov": [290, 309, 337, 360, 403, 409, 416, 417, 419, 420, 427, 434, 446, 449, 451, 452, 453, 454, 455, 456, 457, 460, 463, 464, 465, 467], "absenc": 459, "absolut": [44, 152, 355, 446], "abstract": [24, 34, 35, 36, 37, 38, 40, 104, 105, 106, 122, 137, 138, 139, 167, 181, 191, 194, 201, 257, 297, 326, 327, 337, 448, 455, 467], "abstractli": 429, "acceler": [446, 448, 450, 467], "accept": [31, 184, 253, 255, 257, 262, 266, 280, 282, 284, 286, 356, 420, 421, 448, 451, 456, 459, 460, 464, 466], "access": [213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 404, 405, 406, 414, 419, 443, 448, 453, 455, 460, 463], "accord": [44, 179, 427, 452, 455, 456, 461, 469], "accordingli": [196, 454, 457, 459, 463], "account": 453, "accumul": [169, 429, 467], "accur": [347, 454], "acet": [404, 405, 406, 408, 409], "aceton": 426, "achiev": [21, 221, 421, 426, 429, 432, 446, 449, 452, 454, 455, 457, 465], "ack": 446, "acq_funct": 409, "acq_valu": 454, "acqf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 420, 421, 429], "acqf1": 463, "acqf2": 463, "acquisit": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 70, 82, 194, 196, 414, 415, 416, 417, 420, 421, 429, 431, 438, 446, 448, 452, 459, 461, 463, 465, 468], "acquisition_funct": [31, 194, 196, 409, 420, 421, 429, 439, 440, 448], "acquisition_function_cl": 448, "acquisition_valu": [31, 194, 196, 420, 421, 448, 454], "acquisitionfunct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 31, 194, 196, 429, 448, 463], "across": [426, 429, 442, 453, 461, 467], "act": [426, 448, 451, 455, 464], "action": [21, 419, 429, 445, 448, 468], "activ": [15, 34, 157, 186, 196, 420, 421, 429, 446, 447, 448, 449, 455, 456, 457, 458, 461, 467, 468, 469], "activate_paramet": 448, "active_dim": [104, 105, 106, 109, 111, 113, 114, 115], "active_valu": [138, 141, 142, 144, 152, 155, 442, 443, 448, 457, 460, 467], "actual": [184, 215, 242, 435, 448, 458, 462, 464, 467, 469], "ad": [31, 221, 313, 317, 347, 353, 388, 426, 427, 445, 449, 452, 456, 457, 465, 466, 468], "adapt": [185, 278, 338, 360], "add": [31, 236, 246, 353, 354, 409, 423, 424, 426, 431, 442, 446, 451, 453, 454, 455, 458, 462, 467, 469], "add_collection3d": 421, "add_fake_measur": [357, 408, 409, 414, 415, 416, 417, 423, 424, 431, 448, 453, 464, 469], "add_fake_result": 448, "add_measur": [31, 357, 408, 409, 411, 412, 414, 415, 416, 417, 421, 423, 424, 429, 431, 432, 435, 436, 446, 448, 453, 454, 456, 457], "add_noise_to_perturb_degenerate_row": 448, "add_parameter_nois": [357, 448, 469], "add_subplot": 421, "addendum": 451, "addit": [31, 97, 122, 125, 130, 132, 184, 196, 215, 236, 244, 246, 248, 347, 355, 357, 404, 405, 406, 427, 435, 443, 446, 448, 450, 451, 454, 455, 456, 458, 459, 460, 462, 463, 464, 467, 469], "addition": [419, 427, 446, 458], "additiveexplain": [95, 98], "additivekernel": 448, "address": 464, "adher": [448, 449], "adjust": [157, 185, 405, 409, 435, 448, 457, 459], "adopt": 409, "adrian": [446, 450], "advanc": [185, 429, 447, 448, 456, 459, 463, 467, 468], "advantag": [426, 449], "advic": 449, "advis": [451, 464], "affect": [31, 53, 63, 65, 196, 213, 317, 419, 438, 445, 447, 455], "affected_paramet": [53, 414, 415, 416, 417, 426, 455], "affili": [446, 456], "afford": 454, "aforement": [215, 456], "after": [186, 333, 408, 409, 414, 415, 416, 417, 421, 431, 438, 446, 454, 458, 459, 460, 463], "afterward": 463, "again": [420, 453, 454, 455, 467], "against": [91, 313, 331, 426, 451, 457, 467], "agent": 427, "aggreg": 459, "agraw": 450, "agre": [446, 451, 458], "agreement": 451, "ai": [102, 165, 378], "aim": [453, 454, 458], "akin": 453, "al": [405, 446, 460], "aldrich": 450, "alex": 450, "alexand": [446, 450], "algorithm": [189, 196, 347, 353, 386, 388, 403, 426, 431, 446, 448, 453, 458, 461], "alia": [154, 198, 256, 460], "alias": 448, "align": [157, 213, 333, 420, 462, 467], "all": [23, 24, 33, 35, 40, 44, 53, 55, 61, 63, 97, 103, 104, 105, 106, 121, 122, 125, 136, 139, 144, 148, 155, 166, 167, 177, 180, 181, 184, 190, 191, 193, 196, 200, 201, 213, 215, 222, 223, 246, 253, 254, 257, 296, 297, 317, 330, 331, 347, 353, 365, 404, 405, 406, 409, 411, 412, 414, 415, 419, 420, 421, 426, 427, 429, 431, 434, 435, 442, 443, 446, 448, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469], "allclos": [411, 412, 427], "alleg": 451, "allow": [21, 31, 34, 44, 51, 55, 122, 125, 130, 132, 152, 158, 185, 215, 221, 248, 280, 286, 292, 314, 336, 362, 363, 400, 401, 404, 405, 406, 409, 426, 427, 442, 443, 446, 448, 452, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 466, 469], "allow_": [448, 457], "allow_extra": [122, 125, 130, 132, 213, 215, 221, 226, 363, 368, 431, 448], "allow_miss": [122, 125, 130, 132, 213, 215, 221, 226, 363, 368, 448], "allow_recommending_already_measur": [31, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 429, 439, 440, 445, 448, 454], "allow_recommending_already_recommend": [31, 421, 429, 439, 440, 445, 448, 454], "allow_recommending_pending_experi": [31, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 448, 454], "allow_repeated_recommend": [188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 448], "almost": 405, "alon": [448, 451], "along": [382, 451, 460, 467], "alongsid": 451, "alpha": [169, 421, 432], "alpha_1": 423, "alpha_2": 423, "alpha_init": 423, "alphabet": [160, 448], "alreadi": [31, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 426, 436, 446, 448, 452, 453, 454, 457, 462, 464, 465, 467, 469], "also": [31, 44, 57, 97, 158, 253, 255, 257, 262, 266, 280, 282, 284, 286, 314, 331, 333, 347, 353, 354, 355, 404, 411, 412, 420, 421, 423, 424, 426, 431, 432, 435, 436, 438, 442, 443, 446, 448, 449, 452, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469], "alter": [426, 448, 454, 457], "altern": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 290, 347, 382, 419, 426, 427, 434, 446, 448, 456, 457, 465, 468, 469], "although": [426, 436, 439, 462, 464], "alwai": [15, 31, 40, 231, 232, 388, 423, 426, 427, 446, 452, 454, 455, 464, 465, 467, 469], "ambigu": [152, 321, 322, 462], "amend": 455, "among": [34, 426, 446, 459, 467], "amount": [318, 389, 427, 442, 443, 453, 458, 460, 469], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 70, 71, 72, 74, 76, 77, 78, 82, 88, 91, 92, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 234, 236, 238, 242, 244, 246, 248, 253, 255, 257, 260, 262, 263, 266, 269, 280, 282, 284, 286, 288, 289, 292, 297, 299, 305, 317, 321, 322, 329, 331, 333, 336, 342, 347, 350, 351, 360, 361, 362, 364, 366, 370, 371, 372, 381, 388, 389, 404, 406, 407, 409, 416, 417, 419, 420, 423, 424, 427, 431, 434, 438, 439, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "analog": [215, 353, 455, 462, 463], "analogi": [179, 461], "analysi": [446, 458, 465], "analyt": [3, 4, 7, 8, 82, 453, 464, 467], "analyz": [446, 449, 458], "angl": 421, "ani": [13, 16, 64, 65, 88, 97, 126, 137, 138, 139, 141, 142, 144, 155, 158, 159, 162, 163, 164, 231, 232, 236, 240, 241, 248, 307, 308, 309, 314, 317, 330, 331, 333, 334, 336, 337, 351, 357, 362, 364, 371, 373, 381, 382, 396, 397, 398, 399, 401, 419, 426, 442, 443, 445, 446, 447, 448, 449, 451, 453, 454, 456, 457, 460, 463, 464, 467], "annot": [333, 419, 451], "anonym": [446, 456], "anoth": [53, 347, 372, 405, 415, 416, 423, 424, 426, 436, 449, 455, 467], "ansatz": 448, "answer": 454, "anti": 361, "anymor": [448, 467], "anyth": 338, "anywai": 465, "anywher": 411, "apach": [446, 451], "apart": [449, 454], "api": [347, 446, 447, 463], "aplei": 458, "appar": 463, "appdata": 447, "appear": [331, 447, 448, 451, 463], "append": [421, 443], "appendix": 451, "appli": [31, 40, 41, 42, 57, 196, 215, 242, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 331, 342, 355, 357, 391, 409, 410, 413, 414, 416, 417, 419, 420, 426, 442, 447, 448, 451, 455, 458, 459, 461, 462, 463, 464, 465, 466, 467], "applic": [347, 351, 446, 449, 451, 460, 461, 464], "approach": [221, 347, 420, 429, 446, 449, 452, 454, 457, 459, 461, 463, 465, 467], "appropri": [47, 48, 221, 429, 449, 451, 457, 462], "approxim": [10, 21, 455, 458], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 69, 80, 84, 85, 86, 97, 122, 125, 126, 130, 132, 138, 141, 142, 144, 152, 155, 157, 158, 159, 164, 178, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 244, 246, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 309, 311, 313, 314, 317, 318, 326, 327, 328, 330, 331, 333, 337, 338, 347, 353, 354, 356, 357, 358, 362, 363, 365, 388, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 421, 424, 426, 427, 429, 431, 434, 435, 438, 439, 442, 443, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469], "arang": [411, 421, 460], "arbitrari": [185, 215, 373, 448, 455, 460, 461, 464, 467, 469], "arbitrarili": [459, 463], "architectur": [253, 255, 257, 262, 266, 280, 282, 284, 286, 294, 448, 465, 467], "ard_num_dim": [104, 105, 106, 109, 111, 113, 114, 115], "ardregress": 280, "area": 421, "arg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 108, 110, 112, 117, 118, 119, 167, 169, 170, 171, 172, 173, 174, 175, 178, 198, 258, 263, 268, 370, 449], "argu": 426, "argument": [31, 71, 92, 97, 102, 155, 158, 165, 181, 183, 184, 185, 186, 194, 196, 213, 221, 248, 258, 260, 333, 347, 357, 361, 409, 424, 431, 448, 455, 458, 460, 461, 462, 463, 464, 467], "aris": [56, 426, 448, 451, 455, 463, 469], "arithmet": [128, 459], "arizona": 450, "arm": [252, 253, 444, 450], "arm_index": 429, "around": [13, 16, 44, 205, 248, 250, 431, 448, 461, 463, 469], "arr": [307, 308, 309, 382, 432], "arrai": [13, 16, 126, 159, 307, 308, 309, 320, 347, 356, 367, 377, 381, 382, 388, 421, 448, 461, 465], "arrays_to_datafram": [411, 412, 421, 432, 435, 436, 442, 443, 448, 464], "arriv": [446, 457], "artifici": 469, "aryl": [404, 405, 406, 408, 446, 460], "asarrai": 347, "ascend": 431, "ask": [426, 446, 448, 449, 454, 457], "aspect": [407, 411, 412, 436, 453, 456], "assembl": [426, 463, 465], "assembli": [465, 468], "assert": [65, 134, 362, 414, 415, 416, 417, 423, 424, 426, 427, 434, 438, 448, 451, 454, 455, 463, 465], "assess": [448, 458, 464], "assign": [353, 420, 427, 434, 460], "associ": [215, 429, 451, 454, 456, 459, 467], "assum": [26, 45, 261, 333, 362, 363, 404, 405, 406, 409, 411, 412, 414, 415, 416, 417, 423, 424, 426, 429, 431, 435, 436, 438, 446, 451, 453, 455, 457, 460, 463, 465, 466, 469], "assumpt": 464, "assur": 455, "asymmetr": 44, "asynchron": [446, 454, 468], "atol": [411, 412], "atompair": 149, "atompairfingerprint": 149, "attach": [26, 333, 419, 420, 421, 451], "attempt": [81, 88, 261, 429, 447, 448, 453, 455, 458, 459, 461], "attent": 186, "attr": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 253, 255, 257, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 292, 297, 299, 305, 331, 334, 371, 391, 399, 448], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 91, 94, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 149, 151, 152, 153, 155, 158, 162, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 215, 216, 220, 221, 230, 234, 236, 253, 254, 255, 257, 260, 262, 266, 269, 273, 276, 278, 280, 282, 284, 286, 291, 294, 297, 298, 299, 302, 303, 305, 319, 322, 331, 347, 350, 363, 371, 376, 387, 391, 392, 395, 396, 397, 398, 399, 434, 448, 449, 451, 455, 461, 463, 465, 466], "audit": [448, 449], "augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 215, 288, 289, 290, 448, 454], "author": 451, "authorship": 451, "auto": [12, 13, 14, 16, 17, 448, 450], "auto_tutori": 378, "autocorr": 149, "autocorrfingerprint": 149, "autodoc": 448, "automat": [31, 196, 266, 403, 421, 435, 447, 448, 449, 458, 459, 461, 462, 465, 467, 468], "avail": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 75, 83, 128, 144, 146, 147, 149, 155, 184, 185, 244, 246, 273, 302, 303, 314, 387, 388, 389, 406, 408, 411, 412, 426, 431, 435, 436, 446, 447, 448, 449, 451, 453, 454, 456, 458, 460, 461, 462, 463, 464, 467, 468], "available_acq_funct": 409, "avalon": 149, "avalonfingerprint": 149, "averag": [282, 420, 421, 443, 460, 464], "avoid": [215, 334, 382, 448, 449, 453, 454, 460, 462], "awai": [13, 16, 157, 466], "awar": [426, 442, 443, 448, 452, 457, 463], "ax": [97, 403, 405, 420, 421, 432, 442, 443], "axes3d": 421, "axi": [213, 244, 382, 403, 411, 412, 417, 420, 421, 426, 427, 429, 431, 432, 435, 436, 442, 443, 462], "azim": 421, "azur": 448, "b": [44, 56, 175, 278, 317, 328, 360, 361, 405, 415, 424, 429, 439, 440, 445, 446, 449, 451, 454, 457, 460, 463], "b1": 318, "b2": 318, "back": [0, 438, 445, 448, 449, 457], "backend": 314, "background": [97, 101, 448, 453, 458], "background_data": 97, "backport": 447, "backtest": [242, 243, 249, 406, 441, 444, 446, 448, 461, 464], "backtick": 449, "backward": [197, 198, 215, 448], "bad": [431, 454, 456, 466], "bad_interv": 353, "badg": 448, "bai": 446, "baird": 450, "balanc": [125, 429, 446], "banana": 449, "bandit": [253, 409, 444, 446, 448, 450], "banner": 448, "bar": [97, 99, 423, 424, 426, 438, 439, 440, 446, 448, 458, 465], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 182, 183, 184, 185, 186, 188, 191, 194, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 220, 221, 234, 236, 238, 253, 255, 257, 258, 260, 261, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 290, 292, 297, 299, 302, 303, 305, 320, 322, 323, 325, 326, 327, 347, 356, 361, 371, 387, 388, 391, 403, 408, 409, 420, 421, 423, 425, 429, 444, 446, 448, 451, 452, 454, 455, 456, 458, 460, 461, 462, 463, 465], "base1": 427, "base2": 427, "base_data": 420, "base_kernel": [117, 118, 119], "base_nam": [403, 405, 420, 421, 442, 443], "base_predictor": 288, "base_smil": 420, "baseestim": 347, "basefingerprinttransform": 341, "baselin": [403, 405, 442, 446, 460], "basesequentialmetarecommend": [184, 185], "bashrc": 456, "basi": [113, 446, 451, 453, 458], "basic": [104, 108, 109, 110, 111, 112, 113, 114, 115, 169, 170, 171, 172, 173, 174, 175, 244, 320, 322, 323, 404, 405, 406, 409, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 431, 435, 436, 437, 438, 441, 444, 448, 449, 457, 459, 460, 464, 468], "basic_transfer_learn": 443, "basickernel": [108, 109, 110, 111, 112, 113, 114, 115, 448], "batch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 247, 288, 289, 409, 414, 415, 416, 417, 421, 431, 435, 436, 438, 442, 443, 448, 453, 457, 461, 464], "batch_quant": 448, "batch_shap": [104, 105, 106, 109, 111, 113, 114, 115], "batch_siz": [31, 44, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 244, 248, 250, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 421, 423, 424, 427, 429, 431, 432, 435, 436, 438, 439, 442, 443, 446, 448, 453, 454, 456, 457, 464], "batchnr": 431, "bayb": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 215, 216, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 297, 299, 302, 303, 305, 320, 322, 323, 347, 371, 387, 391, 402, 403, 404, 405, 406, 407, 409, 411, 412, 414, 415, 416, 417, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469], "baybe_cach": 456, "baybe_cache_dir": [448, 456], "baybe_deactivate_polar": [448, 456], "baybe_debug_fake_hosthash": 448, "baybe_debug_fake_userhash": 448, "baybe_numpy_use_single_precis": [379, 448, 456], "baybe_parallel_simulation_run": [248, 456], "baybe_telemetry_en": [446, 456], "baybe_telemetry_endpoint": [448, 456], "baybe_telemetry_host": 448, "baybe_telemetry_hostnam": [448, 456], "baybe_telemetry_usernam": [448, 456], "baybe_telemetry_vpn_check": [448, 456], "baybe_telemetry_vpn_check_timeout": [448, 456], "baybe_torch_use_single_precis": [394, 448, 456], "bayesian": [0, 188, 194, 196, 242, 244, 248, 250, 261, 280, 429, 448, 452, 454, 458, 465, 468], "bayesian_recommend": 421, "bayesianlinearmodel": 424, "bayesianlinearsurrog": [409, 448, 465], "bayesianrecommend": [188, 196, 261, 448, 461], "bayesianridg": 423, "bcut2d": [149, 448], "bcut2dfingerprint": 149, "bcw07": 467, "becaus": [44, 86, 152, 157, 215, 221, 250, 337, 419, 420, 426, 443, 449, 452, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 467], "becom": [215, 426, 448, 452, 454, 455, 463, 466, 469], "been": [26, 31, 81, 82, 184, 253, 255, 257, 262, 266, 280, 282, 284, 286, 362, 404, 405, 446, 447, 448, 451, 453, 454, 459, 461, 467], "beeswarm": [97, 99, 458], "befor": [81, 186, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 333, 403, 406, 409, 415, 420, 446, 448, 449, 456, 457, 460, 462], "begin": [184, 414, 416, 434, 438, 461, 465], "behalf": 451, "behav": [421, 438, 463], "behavior": [157, 196, 446, 448, 456, 459, 461, 462, 467], "behind": [459, 463, 464, 465, 466], "being": [13, 16, 119, 353, 429, 447, 448, 455, 456, 460, 462], "bell": [303, 307, 431, 466], "belong": [347, 419, 463], "below": [186, 290, 309, 416, 419, 420, 426, 449, 451, 452, 454, 455, 459, 463, 465, 466, 467], "benchmark": [404, 405, 420, 446, 448, 450], "benefici": [451, 452, 456], "benefit": [455, 467], "benzo": 467, "bernoulli": [253, 428, 444, 450], "besid": [446, 459, 466], "best": [12, 13, 14, 16, 17, 244, 246, 248, 406, 429, 446, 456, 461], "bet": 454, "beta": [8, 22, 169, 253, 409, 448, 452], "betabernoullimultiarmedbanditsurrog": [409, 429, 448], "betaprior": [253, 448], "better": [10, 353, 405, 448, 454, 455, 457, 459, 460], "between": [13, 16, 34, 53, 152, 185, 213, 221, 276, 361, 419, 421, 426, 429, 431, 432, 436, 442, 443, 446, 448, 449, 453, 454, 455, 456, 459, 460, 461, 462, 463, 466, 467], "beyond": [157, 446, 458], "bias": 460, "big": 347, "bin": 426, "binar": 448, "binari": [299, 401, 438, 446, 447, 448, 463], "binarytarget": [300, 429, 448], "bind": [419, 421, 451], "bit": [448, 460], "black": [242, 464, 467], "blackbox": [402, 403, 444], "blank": 449, "blob": 278, "block": [420, 426, 446, 447, 448, 456, 463], "blue": 432, "boacquisitionfunct": [194, 196], "bodi": 419, "bonilla": 467, "bool": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 97, 100, 101, 122, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 226, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 299, 300, 307, 308, 309, 312, 326, 327, 331, 332, 337, 338, 347, 351, 356, 361, 363, 364, 368, 371, 381, 382, 388, 400, 429], "boolean": [13, 16, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 101, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 181, 183, 184, 185, 186, 363, 448, 454, 456], "boost": [284, 443], "both": [10, 13, 16, 157, 158, 215, 221, 250, 309, 333, 403, 415, 420, 423, 426, 427, 429, 431, 432, 442, 443, 446, 448, 449, 452, 454, 455, 458, 460, 462, 463, 465, 466, 469], "botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 188, 196, 198, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 411, 412, 421, 436, 442, 443, 448, 456, 461], "botorch_acqf": 26, "botorch_function_wrapp": 448, "botorchrecommend": [188, 198, 409, 414, 415, 416, 417, 420, 421, 423, 424, 429, 431, 436, 438, 439, 440, 446, 448, 453, 454, 455, 457, 461], "bottom": 454, "bound": [8, 22, 34, 44, 151, 157, 158, 175, 213, 215, 221, 226, 289, 290, 305, 306, 327, 333, 363, 365, 371, 372, 403, 409, 411, 412, 421, 427, 431, 432, 434, 435, 436, 442, 443, 448, 460, 463, 466, 468, 469], "boundari": [44, 221, 307, 308, 431], "boundary_onli": [221, 426], "bounded": 448, "bounds_transform_func": 448, "box": [175, 242, 464, 467], "brain": [464, 467], "branch": [446, 449], "break": [261, 463], "brettpho": [404, 405, 406, 408, 409], "briefli": [464, 467], "bring": [446, 448], "bro": 278, "broad": 463, "broadcast": 159, "brute": [196, 461], "bu": [404, 405, 406, 408, 409], "bucket": 426, "budget": 454, "bug": [448, 449], "build": [213, 221, 261, 347, 420, 426, 447, 448, 449, 455, 458, 463, 465, 467, 468, 469], "built": [221, 423, 446, 449, 454, 461, 465], "builtin": 323, "bump": 448, "button": 448, "butyl": [404, 405, 406, 408, 409], "butylphenylphosphin": [404, 405, 406, 408, 409], "butyornitril": [404, 405, 406, 408, 409], "bypass": [158, 420, 465], "byte": [13, 16, 126, 159, 220, 262, 307, 308, 309, 375, 381, 382, 448, 469], "c": [56, 317, 328, 347, 404, 405, 406, 408, 409, 414, 415, 416, 417, 424, 426, 439, 440, 446, 447, 451, 454, 457, 460, 462, 463], "c1": [404, 405, 406, 408, 409, 414, 415, 416, 417, 460], "c1c2": [404, 405, 406, 408, 409], "c1ccccc1": [404, 405, 406, 414, 416], "c1ccoc1": 455, "c2": [404, 405, 406, 408, 409, 414, 416, 417], "c2ccccc2": [404, 405, 406], "c2oc": [404, 405, 406, 408, 409], "c2p": [404, 405, 406, 408, 409], "c3": [404, 405, 406, 408, 409, 414, 416], "c3c": [404, 405, 406], "c3ccccc3": [404, 405, 406, 408, 409], "c4": [404, 405, 406, 414, 416], "c4ccccc4": [404, 405, 406, 408, 409], "c5": [414, 416], "c6": [414, 416], "c_": 432, "c_g2_min": 427, "c_g3_max": 427, "c_i": 455, "c_total_sum": 427, "cach": [31, 313, 448, 463, 468], "cached_recommend": 313, "calcul": [31, 313, 347, 382, 411, 421, 442, 454, 456, 458, 460, 462], "calibr": 467, "call": [45, 92, 181, 183, 184, 185, 186, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 313, 314, 333, 356, 404, 405, 406, 419, 424, 426, 427, 439, 440, 446, 447, 448, 452, 454, 455, 456, 460, 463, 464, 465, 467, 468], "callabl": [52, 71, 91, 158, 234, 242, 244, 246, 248, 250, 288, 289, 292, 294, 323, 329, 331, 333, 347, 356, 403, 419, 432, 448, 468], "callable_": 331, "campaign": [97, 244, 247, 248, 250, 353, 355, 357, 407, 408, 416, 418, 421, 429, 440, 442, 443, 444, 445, 446, 448, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469], "campaign1": 464, "campaign2": 464, "campaign_json": 454, "campaign_oh": 405, "campaign_par": 432, "campaign_rand": [404, 405, 406], "campaign_recr": 438, "campaign_stop": 420, "campaign_with_hook": 420, "campaign_y0": 432, "campaign_y1": 432, "campaignstoppedexcept": 420, "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 56, 97, 138, 144, 152, 155, 159, 178, 185, 188, 189, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 242, 246, 253, 255, 257, 258, 260, 261, 262, 266, 280, 282, 284, 286, 290, 300, 312, 314, 331, 333, 337, 347, 353, 355, 356, 378, 403, 404, 405, 406, 409, 410, 413, 414, 415, 416, 419, 420, 421, 423, 424, 426, 427, 429, 431, 432, 434, 435, 436, 439, 442, 443, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469], "canada": 450, "candid": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 194, 196, 206, 209, 213, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 388, 420, 421, 443, 448, 452, 461, 462, 468], "cannot": [15, 90, 91, 157, 261, 262, 290, 338, 429, 448, 451, 453, 455, 456, 460, 461, 463, 465, 467], "canon": [340, 463], "capabl": [402, 428, 430, 437, 441, 443, 448, 450, 454, 459, 465, 467], "captur": 460, "cardin": [34, 44, 51, 61, 63, 64, 65, 80, 196, 213, 446, 448, 450, 455], "cardinalityconstraint": [44, 51, 448], "care": [49, 426, 449, 455, 458, 459, 465], "carefulli": 456, "carlo": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 82, 248, 403, 405, 406, 420, 429, 442, 443, 448, 453, 464], "carri": [333, 419, 451, 459], "cartesian": [215, 221, 222, 223, 446, 448, 457, 462], "case": [157, 185, 250, 290, 333, 347, 353, 366, 420, 425, 426, 435, 436, 439, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 460, 463, 464, 465, 466, 467, 469], "cast": [45, 448], "cat": 361, "cat_1": 431, "cat_1_22": 431, "cat_1_33": 431, "cat_2": 431, "catch": 423, "catch_constant_target": 448, "categor": [31, 141, 142, 146, 221, 228, 362, 446, 448, 460, 462, 466], "categori": [405, 420, 446, 448, 463, 466], "categorical_1": [431, 454], "categorical_2": [431, 454], "categorical_paramet": 463, "categorical_parameter_json": 463, "categorical_parameter_reconstruct": 463, "categoricalencod": [141, 142, 414, 415, 416, 417, 431, 438], "categoricalparamet": [142, 221, 405, 414, 415, 416, 417, 424, 429, 431, 438, 439, 440, 446, 448, 457, 458, 462, 463, 468], "cattr": [233, 234, 236, 293, 440, 447, 448, 449], "cauchi": 171, "caus": [152, 317, 323, 448, 451], "caution": 467, "cc": [404, 405, 406, 408, 409, 414, 416, 417, 426, 460, 467], "cc1": [404, 405, 406, 408, 409, 460], "ccc": [414, 416, 424, 446], "cccc": [404, 405, 406, 408, 409, 414, 416], "ccccc": [414, 416, 439, 440], "cccccc": [414, 416], "cccccccco": [455, 460], "ccccoc": [404, 405, 406, 408, 409], "cco": 426, "ccoccoccn": [439, 440], "cdot": [455, 459], "ceil": 420, "cell": [423, 460, 464, 467], "cell_lin": 467, "center": [307, 309, 347, 371, 431, 432, 454], "center_y0": 432, "center_y1": 432, "central": [448, 454], "certain": [31, 53, 91, 186, 234, 236, 242, 314, 330, 353, 415, 420, 429, 446, 448, 449, 455, 457, 458, 461, 463, 467, 469], "cesium": [404, 405, 406, 408, 409], "chai": 467, "chain": [38, 181, 183, 184, 185, 186, 323, 455], "challeng": [449, 463], "chanc": 447, "chang": [53, 184, 353, 354, 355, 409, 426, 435, 446, 447, 449, 451, 454, 456, 458, 460, 462, 467], "charact": 451, "characterist": 323, "charg": 451, "chebyshev": 12, "check": [31, 61, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 313, 330, 332, 335, 336, 337, 338, 347, 362, 364, 365, 371, 380, 435, 436, 438, 446, 448, 449, 456, 458, 462, 463], "check_maximum": 61, "check_minimum": 61, "checker": 448, "checkout": 449, "chem": [446, 448, 460], "chemic": [342, 405, 408, 426, 448, 450, 455, 458, 460, 467], "cheminformat": [155, 446, 448], "chemistri": [144, 414, 416, 417], "child": [203, 204, 205, 206, 449], "chocol": 449, "choic": [244, 246, 388, 419, 426, 429, 436, 448, 455, 457, 459, 460, 461, 462, 463, 466], "choos": [179, 426, 427, 429, 431, 434, 435, 436, 445, 446, 451, 452, 454, 461, 465, 466], "chose": [435, 463], "chosen": [78, 188, 244, 246, 250, 384, 385, 388, 409, 429, 448, 452, 455, 460, 462], "christoph": 467, "ci": [412, 442, 443, 448, 449], "circular": 460, "circumv": [447, 463], "cl": [49, 231, 235, 290, 326, 327, 332, 337, 373], "claim": 451, "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 90, 94, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 219, 220, 221, 234, 236, 237, 238, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 319, 320, 322, 323, 325, 326, 327, 332, 337, 341, 346, 347, 351, 369, 371, 386, 387, 390, 391, 409, 419, 420, 423, 429, 439, 448, 454, 455, 458, 459, 460, 461, 462, 463, 465], "classic": [429, 459], "classifi": 460, "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 323, 371, 448], "classvalidationerror": [440, 447], "classvar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 253, 255, 257, 262, 266, 280, 282, 284, 286], "clean": [358, 359, 360, 447, 448, 449], "clear": [378, 467], "click": [429, 460], "clipboard": 423, "clone": 449, "close": [244, 250, 302, 403, 420, 442, 443, 464], "closer": [13, 16, 380, 460], "closest": [347, 381, 423], "closest_el": 448, "closur": [242, 464], "cluster": [203, 204, 205, 206, 344, 345, 346, 347, 409, 448, 450, 468], "cluster_centers_": 347, "clustering_algorithm": 347, "clustering_x": 448, "clustermixin": 347, "cmap": 421, "cn": [404, 405, 406, 408, 409], "co": 426, "co1": [404, 405, 406], "co2": [404, 405, 406], "co3": [404, 405, 406], "coars": [424, 438, 439, 440, 446], "coc": [424, 439, 440, 446], "cococ": [439, 440], "code": [261, 405, 424, 429, 435, 439, 440, 446, 447, 448, 451, 455, 456, 460, 464, 467, 469], "coeffici": [45, 47, 48, 411, 412, 427, 455], "coerc": 448, "collect": [31, 63, 64, 65, 107, 117, 118, 134, 158, 160, 168, 184, 186, 213, 221, 227, 228, 239, 246, 260, 315, 317, 319, 330, 331, 344, 345, 363, 364, 386, 388, 403, 409, 421, 426, 429, 432, 442, 443, 446, 448, 454, 456], "color": [421, 423, 432], "column": [40, 41, 42, 97, 122, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 244, 246, 248, 250, 317, 318, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 391, 400, 401, 405, 408, 414, 415, 416, 417, 420, 426, 431, 432, 438, 442, 443, 448, 454, 462, 463, 464], "column_group": 318, "com": [278, 334, 360, 446, 448], "comb": 426, "combin": [44, 54, 158, 196, 213, 215, 221, 222, 223, 323, 342, 404, 405, 406, 414, 416, 419, 420, 426, 431, 446, 447, 451, 455, 457, 458, 459, 460, 461, 462, 464, 467, 469], "combinatori": [196, 469], "combo_runn": 248, "come": [13, 16, 429, 446, 454, 455, 458, 463, 467, 469], "command": 447, "comment": 448, "commerci": 451, "commit": [446, 448, 449], "common": [168, 423, 427, 448, 449, 451, 453, 454, 455, 460, 463], "commonli": 459, "commun": [451, 459, 467], "comp_df": [138, 141, 142, 144, 152, 155, 448], "comp_rep": [221, 423, 448, 462], "comp_rep_bound": [213, 215, 221, 448], "comp_rep_byt": [220, 469], "comp_rep_column": [137, 138, 139, 141, 142, 144, 151, 152, 155, 213, 215, 221, 448], "comp_rep_human_read": [220, 469], "comp_rep_shap": [220, 469], "compar": [158, 184, 403, 426, 427, 429, 432, 442, 446, 448, 449, 455, 457, 460, 466], "comparison": [420, 432, 442, 443, 461, 463], "compat": [134, 158, 188, 191, 194, 196, 197, 198, 201, 203, 204, 205, 206, 209, 210, 215, 216, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 292, 333, 363, 399, 409, 414, 415, 416, 417, 419, 421, 431, 438, 448, 461, 465], "compens": 448, "compil": [447, 451], "complain": 449, "complaint": 449, "complement": [31, 361, 457], "complementari": 44, "complet": [75, 421, 426, 453, 455, 457, 459, 463], "complex": [13, 16, 126, 159, 307, 308, 309, 347, 381, 382, 426, 438, 442, 443, 449, 452, 453, 455, 457, 464, 467], "compli": 451, "complianc": 446, "complic": [426, 467], "compon": [69, 347, 426, 427, 449, 452, 454, 455, 456, 457, 463, 465, 467], "compos": [116, 260, 448, 463], "composit": [105, 117, 118, 119, 260, 448, 468], "composite_a": 465, "composite_b": 465, "compositekernel": [117, 118, 119, 448], "compositesurrog": [253, 255, 257, 262, 266, 280, 282, 284, 286, 448, 453, 458, 459, 465], "compound": 342, "comprehens": [446, 465], "compress": 463, "comput": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 87, 97, 101, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 194, 196, 213, 215, 220, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 290, 297, 299, 305, 343, 347, 382, 414, 415, 416, 417, 419, 426, 427, 431, 432, 438, 448, 451, 452, 454, 456, 460, 462, 463, 464, 468, 469], "computation": 196, "compute_ref_point": [13, 16], "compute_scor": 423, "computedstyl": 423, "concat": [411, 412, 420, 421, 431, 432, 435, 436, 442, 443], "concentr": [169, 170, 404, 405, 406, 408, 409, 414, 419, 420, 455], "concentrati": 414, "concentration_valu": 420, "concept": [317, 426, 459, 460, 463], "concis": 448, "concret": [448, 463], "conda": 448, "condit": [34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 353, 361, 405, 411, 415, 416, 417, 426, 432, 446, 448, 451, 467, 468], "conduct": [31, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 404, 405, 406, 446, 449, 454, 467], "confid": [8, 22, 409], "config": [423, 424, 437, 444, 448, 468], "config_json": 31, "configur": [13, 16, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 85, 86, 178, 185, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 242, 244, 250, 253, 255, 257, 258, 260, 262, 266, 272, 280, 282, 284, 286, 347, 353, 388, 407, 408, 426, 433, 436, 440, 446, 447, 448, 451, 452, 453, 454, 455, 456, 460, 461, 462, 464, 466, 467, 468, 469], "confirm": 421, "conflict": [446, 449, 459], "conform": [155, 343, 460], "confront": [429, 446, 457], "conjunct": 465, "connect": [57, 353, 448, 456, 460, 466], "consequ": [406, 447, 455, 456, 461, 462, 464, 465], "consequenti": 451, "consid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 125, 138, 141, 142, 144, 152, 155, 157, 159, 184, 196, 215, 248, 353, 362, 363, 403, 426, 429, 431, 442, 443, 446, 448, 449, 453, 455, 457, 458, 459, 460, 463, 469], "consider": [215, 453], "consist": [179, 220, 347, 421, 449, 451, 458], "consol": [423, 447], "consolid": [448, 461], "consortium": 450, "conspicu": 451, "const": 423, "constant": [282, 290, 308, 431, 448, 449, 460, 462], "constitut": 451, "constrain": [448, 455, 466, 467], "constraint": [31, 34, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 80, 139, 196, 213, 215, 221, 320, 423, 424, 431, 438, 439, 440, 444, 446, 448, 450, 456, 460, 468], "constraint_1": 416, "constraint_2": 416, "constraint_3": 416, "constraints_augment": 215, "constraints_cardin": 213, "constraints_lin_eq": 213, "constraints_lin_ineq": 213, "constraints_nonlin": 213, "constru": 451, "construct": [31, 213, 215, 221, 262, 292, 403, 432, 434, 442, 443, 446, 448, 452, 455, 458, 463, 465, 468], "constructor": [203, 204, 205, 206, 215, 235, 280, 284, 286, 426, 434, 439, 440, 448, 452, 454, 457, 459, 460, 465, 468, 469], "consult": 446, "consum": [184, 419, 448], "consumpt": 456, "cont_ind": 436, "cont_indic": [435, 436], "cont_paramet": 436, "cont_recommend": [188, 436], "contact": [446, 450], "contain": [13, 16, 31, 34, 40, 41, 42, 44, 65, 68, 73, 97, 122, 125, 126, 130, 132, 134, 138, 141, 142, 144, 152, 155, 157, 158, 159, 163, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 222, 223, 227, 242, 244, 246, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 297, 299, 305, 307, 308, 309, 317, 318, 333, 343, 347, 351, 353, 355, 361, 362, 364, 371, 382, 388, 400, 401, 405, 406, 420, 421, 427, 429, 436, 442, 443, 447, 448, 449, 451, 454, 455, 457, 458, 461, 462, 463, 464, 469], "content": [158, 184, 215, 246, 354, 389, 423, 448, 451, 463], "context": [75, 83, 157, 181, 183, 184, 185, 186, 194, 196, 242, 258, 260, 385, 419, 429, 434, 442, 443, 448, 454, 457, 458, 460, 463, 464, 465, 467, 469], "contextu": 467, "continu": [10, 15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 73, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 188, 196, 213, 215, 216, 221, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 409, 411, 414, 415, 416, 417, 427, 431, 432, 433, 436, 438, 444, 446, 448, 454, 456, 457, 461, 463, 464, 468], "continuous_subspac": 462, "continuouscardinalityconstraint": [63, 64, 213, 448, 468], "continuousconstraint": [37, 45, 213, 448, 455, 457], "continuouslinearconstraint": [213, 411, 412, 427, 448, 468], "continuouslinearequalityconstraint": 448, "continuouslinearinequalityconstraint": 448, "continuousnonlinearconstraint": [44, 213, 448], "continuousparamet": [151, 213, 448], "contour": 432, "contract": 451, "contrast": [221, 337, 427, 429, 453, 457, 459], "contribut": [446, 448, 451, 469], "contributor": [446, 451], "contributori": 451, "control": [13, 15, 16, 21, 158, 169, 196, 213, 221, 363, 431, 435, 446, 448, 451, 452, 455, 456, 459, 460, 461, 466, 468], "convei": 463, "conveni": [448, 462, 463, 465], "convent": [215, 347], "converg": 458, "convers": [31, 185, 423, 434, 448, 451, 458, 465, 468], "convert": [28, 123, 217, 230, 293, 324, 334, 338, 342, 349, 350, 365, 366, 367, 372, 375, 378, 424, 439, 440, 448, 454, 456, 463, 464], "convert_sklearn": 423, "convert_sklearn_bayesian_ridg": 423, "convertibletofloat": [13, 16, 324], "cooki": 449, "coordin": [13, 16, 388], "copi": [157, 253, 255, 257, 262, 266, 280, 282, 284, 286, 345, 365, 420, 423, 446, 448, 451, 469], "copy_x": 423, "copyright": [446, 451], "copytoclipboard": 423, "core": [31, 213, 215, 216, 221, 248, 250, 253, 255, 257, 258, 260, 262, 266, 273, 280, 282, 284, 286, 409, 446, 448, 457, 466], "coregion": 467, "coretest": [448, 449], "corpu": 460, "correct": [31, 294, 421, 446, 448, 449, 463], "correctli": [426, 436, 448], "correl": [144, 155, 360, 460, 467], "correspond": [26, 31, 44, 122, 125, 130, 132, 157, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 234, 242, 244, 246, 253, 255, 256, 257, 262, 266, 280, 282, 284, 286, 292, 307, 313, 333, 336, 338, 341, 342, 353, 356, 357, 363, 364, 365, 366, 368, 400, 401, 403, 408, 409, 426, 429, 432, 436, 442, 443, 446, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "correspondingli": 31, "corrupt": 355, "cost": [347, 405, 429, 456], "costli": [215, 218, 224, 454], "could": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 152, 349, 409, 419, 420, 426, 427, 443, 448, 453, 455, 460, 464, 466, 467], "count": [314, 420, 426, 455], "counterclaim": 451, "counterpart": [333, 462], "coupl": 421, "cours": [442, 443, 449, 463, 467], "cousin": 455, "cov": [448, 449], "cover": [337, 353, 455, 457], "coverag": [448, 449], "cp": [404, 405, 406], "craft": 464, "crash": [447, 448], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 222, 223, 238, 246, 253, 255, 257, 258, 260, 262, 266, 269, 274, 280, 282, 284, 286, 297, 299, 305, 351, 353, 356, 357, 371, 388, 408, 419, 420, 421, 426, 427, 432, 436, 437, 444, 445, 446, 447, 448, 449, 453, 455, 456, 457, 458, 460, 463, 464, 465, 466, 468, 469], "create_example_plot": [403, 405, 420, 421, 442, 443, 448], "create_from_config": [423, 424], "create_pi_plot": 421, "creation": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 158, 218, 221, 224, 415, 417, 423, 424, 462, 463, 468], "criteria": 421, "criterion": [347, 420, 452], "critic": 448, "cross": [442, 451], "crucial": [446, 466], "csv": [404, 405, 420], "cube": 455, "cuda": 447, "cultur": [460, 467], "curran": 467, "current": [10, 31, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 248, 250, 261, 312, 378, 420, 421, 426, 452, 453, 454, 455, 456, 457, 460, 464, 466, 467, 469], "curv": [307, 421, 431, 455, 466], "custom": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 137, 138, 139, 141, 142, 144, 147, 151, 152, 155, 158, 262, 294, 297, 299, 305, 333, 366, 402, 409, 413, 420, 429, 436, 444, 446, 448, 454, 455, 460, 461, 464, 467, 468, 469], "custom_blackbox": 403, "custom_conversion_funct": 423, "custom_filt": 455, "custom_funct": 414, "customari": 451, "customconstraint": 414, "customdiscreteparamet": [448, 458, 468], "customencod": 144, "customonnxsurrog": [409, 423, 448], "cycl": [184, 446, 448, 457], "cyclic": 184, "d": [13, 16, 26, 56, 126, 317, 328, 382, 388, 421, 424, 439, 440, 442, 443, 446, 451, 462, 467], "d401": 414, "damag": 451, "daniel": 450, "darmstadt": [446, 450, 456], "dashboard": 448, "data": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 72, 77, 89, 97, 101, 125, 130, 132, 144, 152, 155, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 244, 248, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 299, 305, 314, 316, 320, 347, 353, 355, 362, 364, 377, 378, 389, 393, 400, 401, 402, 403, 408, 409, 411, 412, 414, 415, 416, 417, 420, 424, 426, 431, 432, 435, 438, 439, 440, 442, 443, 444, 445, 446, 448, 452, 453, 454, 455, 456, 458, 460, 461, 463, 464, 465, 468, 469], "data_typ": 423, "databas": [31, 431, 446, 463], "dataclass": [419, 429], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 89, 97, 101, 122, 125, 130, 132, 138, 141, 142, 144, 152, 155, 158, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 222, 223, 226, 240, 241, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 299, 305, 313, 317, 318, 342, 343, 347, 389, 400, 401, 403, 404, 408, 409, 414, 415, 416, 417, 420, 421, 423, 424, 426, 427, 431, 432, 435, 438, 442, 443, 448, 453, 454, 455, 457, 460, 468, 469], "datapoint": 448, "dataset": [184, 242, 347, 423, 464], "datatyp": 448, "date": 451, "dditiv": 458, "de": [233, 437, 446, 447, 448, 449, 454, 455, 461, 468], "deactiv": [446, 448, 456], "deal": [406, 453, 460, 464], "debug": 448, "decid": [152, 426, 429, 436, 452], "declar": [53, 57, 65, 206, 415, 449, 455], "decod": 423, "decor": [119, 290, 323, 356, 419, 448, 449, 464], "decorrel": [144, 155, 162, 439, 440, 460], "decreas": [184, 308, 431, 463, 467], "deduc": [411, 412, 435], "dedupl": 448, "deep": [347, 420], "deepcopi": 448, "deeper": 458, "deepli": 465, "def": [403, 414, 419, 420, 421, 426, 429, 432, 442, 449, 455, 464], "default": [13, 16, 42, 97, 125, 144, 155, 158, 188, 194, 196, 203, 204, 205, 206, 213, 215, 221, 233, 253, 273, 276, 347, 361, 403, 404, 406, 409, 423, 424, 431, 436, 446, 448, 449, 454, 455, 456, 458, 459, 460, 468], "default_campaign": 403, "defaultkernelfactori": [409, 414, 415, 416, 417, 431, 438], "defaultscal": 448, "defend": 451, "defer": 448, "defin": [26, 31, 41, 44, 45, 52, 147, 157, 178, 184, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 221, 242, 266, 268, 269, 294, 355, 360, 361, 391, 404, 405, 406, 408, 414, 415, 416, 417, 423, 424, 429, 434, 448, 449, 451, 454, 455, 457, 460, 463, 464, 466], "definit": [213, 221, 337, 427, 432, 446, 448, 451, 459, 462], "degener": [354, 371, 448], "degr": 438, "degre": 463, "degree_c": [423, 424, 438], "deliber": 451, "delici": 449, "deliveri": 460, "demand": [31, 443], "demo": 448, "demonstr": [402, 403, 404, 407, 410, 413, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 433, 437, 438, 441, 442, 443, 448, 459, 462, 463, 467], "denot": 26, "densiti": 421, "depend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 53, 57, 88, 215, 221, 242, 308, 317, 405, 409, 413, 426, 427, 434, 444, 445, 447, 448, 449, 455, 456, 457, 458, 462, 464, 465, 466, 467, 469], "dependenciesconstraint": 448, "deprec": [67, 149, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 221, 226, 263, 323, 414, 416, 417], "deprecationwarn": [414, 416, 417, 420], "depth": 462, "deriv": [203, 204, 205, 206, 221, 337, 451, 455, 462], "descend": 308, "describ": [203, 204, 205, 206, 253, 255, 257, 262, 266, 280, 282, 284, 286, 292, 409, 414, 419, 420, 427, 429, 431, 432, 449, 451, 453, 454, 455, 459, 460, 463, 464], "descript": 449, "descriptor": [155, 343, 448, 458, 460, 467], "deseri": [231, 235, 240, 438, 447, 448, 454, 468], "deserialize_datafram": 463, "design": [0, 21, 26, 244, 347, 356, 419, 423, 426, 429, 451, 452, 455, 457, 458, 459, 461, 463], "desir": [125, 128, 357, 430, 431, 444, 446, 448, 452, 456, 458, 459, 461, 463, 466, 469], "desirabilityobject": [31, 431, 446, 448, 453, 454, 463, 465, 468], "desktop": 448, "despit": 448, "detail": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 165, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 244, 248, 253, 255, 257, 258, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 297, 299, 305, 310, 311, 361, 368, 371, 391, 404, 406, 411, 412, 423, 431, 436, 445, 446, 447, 448, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467], "detect": [320, 362, 447, 449], "determin": [13, 16, 31, 44, 97, 186, 221, 248, 337, 361, 375, 380, 388, 404, 426, 429, 448, 451, 456, 461], "determinist": [388, 448], "detriment": 460, "dev": [446, 448, 449], "develop": [446, 448, 460, 464], "deviat": [6, 18, 290, 362, 423, 448, 454], "df": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 122, 125, 130, 132, 158, 213, 215, 221, 226, 241, 246, 317, 318, 342, 354, 358, 359, 360, 361, 363, 365, 366, 368, 389, 403, 414, 429, 446, 455, 462, 463, 464], "df_y": 432, "dfa": [317, 318], "di": [404, 405, 406, 408, 409, 450], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 203, 204, 205, 206, 213, 215, 218, 221, 224, 234, 235, 236, 238, 248, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 311, 328, 331, 343, 347, 353, 371, 391, 420, 423, 442, 443, 448], "dict_bas": [404, 405, 406, 408, 409], "dict_ligand": [404, 405, 406, 408, 409], "dict_solv": [404, 405, 406, 408, 409, 414, 415, 416, 417, 426, 455], "dictat": [122, 125, 130, 132, 196, 215, 442, 443], "dictionari": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 234, 236, 238, 248, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 290, 292, 297, 299, 305, 328, 331, 353, 371, 404, 405, 406, 408, 424, 460, 464], "diff": 449, "differ": [13, 16, 55, 125, 196, 213, 215, 216, 221, 242, 250, 313, 318, 353, 355, 391, 405, 414, 419, 426, 429, 431, 432, 435, 436, 442, 443, 446, 448, 449, 451, 453, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467], "differenti": [464, 467], "difficult": 467, "digit": 366, "dilemma": 429, "dim": [26, 411, 412, 421, 423, 435, 436, 442, 443], "dimens": [26, 388, 403, 411, 412, 421, 423, 434, 435, 442, 443, 448, 460, 462, 465, 467], "dimension": [13, 16, 126, 137, 138, 139, 141, 142, 144, 151, 152, 155, 276, 356, 388, 403, 442, 443, 448], "dimethylisoxazol": 467, "direct": [13, 16, 404, 405, 406, 408, 446, 448, 451, 457, 460, 469], "direct_aryl": [404, 405, 420], "directli": [13, 16, 337, 443, 446, 448, 455, 456, 459, 463, 465], "directori": [404, 405, 420, 436, 448], "disabl": [253, 255, 257, 262, 266, 280, 282, 284, 286, 312, 414, 416, 417, 448, 454, 456, 457], "disadvantag": 463, "disappear": 448, "disc_ind": 436, "disc_indic": [435, 436], "disc_paramet": 436, "disc_recommend": [188, 436], "discard": [8, 426], "disclaim": 451, "discourag": 454, "discret": [15, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 73, 137, 138, 139, 141, 142, 144, 151, 152, 155, 188, 196, 203, 204, 205, 206, 209, 213, 215, 216, 220, 221, 250, 387, 408, 411, 417, 420, 421, 423, 431, 433, 436, 438, 443, 444, 446, 448, 452, 457, 458, 461, 463, 464, 468, 469], "discrete_param": [421, 442, 443], "discrete_spac": [411, 412, 436], "discrete_subspac": 462, "discretecardinalityconstraint": [448, 468], "discreteconstraint": [31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 221, 448, 455, 457], "discretecust": 414, "discretecustomconstraint": [414, 448, 468], "discretedep": 415, "discretedependenciesconstraint": [57, 65, 415, 426, 468], "discreteexcl": 416, "discreteexcludeconstraint": [416, 448, 457, 468], "discretelinkedparametersconstraint": [448, 468], "discretenolabelduplicatesconstraint": [57, 426, 448, 468], "discreteparamet": [152, 221, 222, 223, 448], "discretepermutationinvarianceconstraint": [426, 468], "discreteprod": 417, "discreteproductconstraint": [417, 448, 468], "discretesamplingmethod": [15, 196, 389, 448, 452], "discretesumc": 417, "discretesumconstraint": [411, 417, 426, 448, 468], "discuss": [431, 451, 455, 462, 464], "disjoint": 221, "disk": [448, 468], "displai": [366, 420, 451, 458], "distanc": [152, 208, 347, 388], "distinct": [419, 454, 461], "distinguish": [354, 426, 448, 455, 460, 467], "distribut": [31, 165, 168, 253, 255, 257, 262, 266, 280, 282, 284, 286, 426, 431, 436, 446, 448, 451, 452, 453, 465], "distutil": 338, "div": 423, "divers": 465, "divid": 427, "divis": 382, "dll": 447, "dmac": [404, 405, 406, 408, 409], "dmf": 455, "do": [63, 215, 221, 261, 419, 423, 424, 426, 429, 436, 438, 439, 440, 442, 445, 446, 447, 451, 453, 455, 456, 457, 458, 460, 461, 463, 467, 468, 469], "do_baybe_work": 456, "doc": [102, 165, 323, 446, 448], "doc101": 449, "doc103": 449, "docstr": 448, "doctest": 448, "document": [31, 378, 423, 446, 448, 449, 450, 451, 454, 458, 464], "doe": [30, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 97, 157, 196, 242, 244, 246, 248, 253, 255, 257, 261, 262, 266, 280, 282, 284, 286, 294, 333, 342, 362, 378, 406, 409, 420, 423, 424, 426, 439, 440, 442, 443, 448, 449, 451, 453, 455, 459, 461, 464, 465, 467, 469], "doi": [278, 360], "domain": [253, 255, 257, 262, 266, 280, 282, 284, 286, 403, 446, 448, 462, 464], "don": [445, 457], "done": [31, 361, 362, 406, 408, 414, 415, 416, 417, 423, 424, 431, 438, 448, 452, 454, 455, 456, 457], "doubl": [378, 449, 456], "down": [463, 469], "downsid": 185, "draft": 448, "dramat": 467, "drastic": 460, "draw": [10, 114, 213, 427, 429, 434], "draw_arm": 429, "drawback": 459, "drawn": [21, 196], "drive": [421, 467], "driven": [353, 452], "driver": 447, "drop": [358, 359, 360, 364, 420, 448, 453, 455], "drug": 453, "dry_run": 31, "dtype": [13, 16, 126, 159, 307, 308, 309, 347, 365, 381, 382, 448], "due": [157, 314, 443, 446, 448, 452, 455, 456, 460, 461, 462, 463, 466], "duplic": [31, 57, 164, 320, 328, 448, 455], "durat": [347, 453], "dure": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 215, 221, 242, 331, 388, 426, 429, 442, 443, 446, 447, 448, 449, 450, 454, 455, 456, 457, 458, 462, 463, 464, 465], "dynam": [429, 448, 463, 468], "d\u00fcbendorf": 450, "e": [8, 21, 26, 31, 34, 44, 53, 55, 56, 73, 100, 144, 158, 159, 186, 215, 221, 242, 314, 320, 326, 327, 343, 347, 353, 361, 362, 371, 396, 404, 405, 406, 420, 424, 426, 427, 429, 446, 447, 448, 449, 452, 453, 455, 456, 458, 460, 461, 462, 463, 464, 467, 469], "e3fp": 149, "e3fpfingerprint": 149, "each": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 122, 125, 130, 132, 158, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 215, 244, 246, 248, 250, 253, 255, 257, 261, 262, 266, 280, 282, 284, 286, 318, 343, 347, 353, 354, 362, 403, 405, 406, 409, 421, 426, 427, 429, 431, 432, 436, 442, 443, 448, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 469], "eagerli": 448, "earli": [420, 448], "earlier": [31, 445, 447], "earn": 429, "earned_reward": 429, "easi": [342, 449, 463], "easier": [449, 453, 469], "easiest": [446, 449], "easili": [420, 446, 449, 454, 457, 460, 462, 463, 467], "ecfp": [149, 405, 448, 460], "ecfpfingerprint": 149, "ecosystem": 463, "edbo": [276, 278, 360, 448], "edbokernelfactori": [276, 448], "edg": 157, "edit": [446, 449], "editor": 467, "editori": 451, "edwin": 467, "effect": [55, 181, 183, 184, 185, 186, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 419, 420, 429, 443, 448, 452, 455, 460, 461, 464, 467, 469], "effici": [221, 347, 426, 446, 448, 462], "effortlessli": 464, "ei": [3, 409], "either": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 216, 244, 250, 266, 290, 362, 405, 416, 431, 436, 446, 451, 459, 460, 461, 462, 464, 465], "elabor": 451, "elaps": 419, "elapsedtimeprint": 419, "electron": [450, 451], "electroshap": 149, "electroshapefingerprint": 149, "eleg": [442, 463], "element": [40, 41, 42, 52, 159, 250, 320, 330, 336, 347, 351, 380, 381, 423, 426, 442, 443, 448, 455, 464], "elev": 421, "elif": [435, 436], "elimin": [449, 452], "els": [337, 338, 403, 404, 405, 406, 411, 412, 414, 415, 417, 420, 421, 429, 432, 435, 436, 442, 443], "elsewher": 423, "emd": 450, "emdgroup": [310, 446], "emelin": 450, "emerg": 454, "empir": 429, "emploi": [31, 429, 461], "employe": [446, 456], "empow": 465, "empti": [101, 213, 215, 221, 228, 318, 333, 342, 361, 366, 400, 401, 426, 431, 436, 438, 448, 462], "empty_encod": [215, 221], "emptysearchspaceerror": 228, "emul": [21, 447, 448], "en": [102, 165], "enabl": [185, 248, 312, 313, 404, 405, 406, 426, 442, 446, 447, 448, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 466, 467], "encapsul": 347, "encod": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 215, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 341, 343, 404, 405, 406, 408, 409, 414, 415, 416, 417, 420, 424, 426, 429, 431, 438, 439, 440, 442, 443, 446, 448, 455, 462, 463, 467], "encompass": 454, "encount": [157, 181, 183, 184, 185, 186, 388, 447, 448, 449, 459], "end": [0, 309, 371, 420, 424, 429, 431, 438, 451, 455, 463], "endeavor": 452, "endpoint": [448, 456], "enforc": [379, 394, 448, 449, 460], "engin": [447, 461, 463, 464, 469], "enhanc": [26, 446], "enlarg": 460, "enough": [213, 463], "ensembl": 288, "ensur": [157, 158, 365, 404, 405, 406, 426, 427, 446, 448, 455, 463, 464], "enter": [79, 221, 462], "entir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 313, 371, 389, 448, 449, 452, 454, 456, 469], "entiti": 451, "entri": [31, 38, 41, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 236, 253, 255, 257, 262, 266, 280, 282, 284, 286, 318, 353, 362, 389, 406, 414, 415, 416, 417, 426, 445, 448, 455, 456, 457, 458, 466, 469], "enum": [128, 146, 147, 148, 149, 208, 216, 273, 302, 303, 322, 387, 448, 463], "enumer": [127, 145, 301, 421, 442, 443, 459], "env": [448, 449], "envar_nam": 456, "environ": [248, 312, 379, 394, 403, 404, 405, 406, 412, 414, 415, 417, 420, 421, 423, 429, 432, 442, 443, 446, 447, 448, 449, 468], "envvar": 310, "envvar_nam": 456, "eq": [414, 426], "equal": [45, 125, 186, 213, 429, 431, 438, 448, 455, 459, 462, 463, 466], "equat": [45, 455, 464], "equidist": [388, 448, 460], "equip": 455, "equival": [21, 34, 57, 412, 434, 452, 455, 464], "erg": 149, "ergfingerprint": 149, "err": 423, "errno": [404, 405, 420], "erron": 448, "error": [184, 244, 246, 248, 263, 331, 364, 382, 406, 423, 424, 429, 447, 448, 453, 455, 459, 461], "esian": 446, "especi": [449, 453], "essenti": [454, 461], "establish": [420, 442, 443, 467], "estat": 149, "estatefingerprint": 149, "ester": [404, 405, 406, 408, 409], "estim": [215, 220, 221, 253, 347, 429, 448, 465, 468], "estimate_product_space_s": [215, 221, 469], "estimated_win_r": 429, "estimation_bia": 429, "estimation_vari": 429, "et": [405, 446, 460], "etc": [40, 41, 42, 139, 215, 297, 467], "ethanol": [426, 455], "euclidean": [347, 388], "eval_during_augment": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_cr": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "eval_during_model": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "evalu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 194, 196, 288, 289, 338, 435, 436, 448, 454, 456, 461, 464, 467], "even": [186, 290, 359, 442, 443, 451, 453, 454, 456, 460, 464, 465, 467, 469], "event": [31, 313, 420, 451], "everi": [347, 453, 469], "everyth": [449, 455], "evolv": [421, 449], "ex": 458, "exabyt": 469, "exact": [31, 362, 419, 447, 448, 455, 459, 460, 465], "exactexplain": [95, 98, 458], "exactli": [13, 16, 44, 122, 125, 130, 132, 215, 426, 448, 453, 454, 462, 463], "examin": 454, "exampl": [13, 16, 157, 158, 246, 317, 318, 328, 337, 347, 361, 402, 403, 407, 410, 413, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433, 434, 437, 441, 442, 443, 447, 448, 449, 450, 451, 453, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469], "example_input_nam": 423, "exceed": 420, "exceedingli": 464, "except": [31, 333, 342, 350, 369, 370, 404, 405, 406, 420, 424, 439, 440, 446, 447, 448, 451, 457, 465], "excepthook": 447, "exceptiongroup": [63, 448], "excess": 469, "exclud": [31, 56, 358, 414, 415, 416, 417, 431, 438, 448, 451, 455, 468], "exclude_list": 360, "exclus": [54, 413, 444, 448, 451, 455, 464, 468], "execut": [31, 67, 244, 333, 403, 405, 447, 448, 449, 451, 456, 463, 464, 467], "exemplari": 454, "exercis": 451, "exhaust": [184, 196, 458, 461], "exist": [31, 119, 215, 313, 323, 333, 426, 447, 448, 449, 452, 454, 455, 457, 463, 465, 467], "exp_rep": [221, 414, 415, 416, 417, 426, 462], "exp_rep_byt": [220, 469], "exp_rep_human_read": [220, 469], "exp_rep_shap": [220, 469], "expect": [3, 4, 9, 11, 13, 14, 16, 17, 52, 75, 83, 258, 260, 268, 333, 356, 365, 409, 415, 421, 423, 426, 427, 429, 440, 448, 449, 454, 455, 458, 459, 460, 463, 464, 466, 469], "expens": [10, 196, 411, 464], "experi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 242, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 404, 405, 406, 408, 409, 435, 436, 448, 452, 454, 455, 457, 459, 460, 461, 466, 467, 468], "experiment": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 101, 122, 125, 130, 132, 138, 141, 142, 144, 152, 155, 178, 181, 182, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 215, 220, 221, 242, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 297, 299, 305, 353, 355, 414, 415, 416, 417, 421, 431, 438, 446, 448, 452, 453, 455, 457, 459, 460, 462, 463, 464, 466, 467, 468, 469], "experimentalist": 445, "expert": 347, "explain": [72, 96, 97, 98, 100, 101, 421, 448, 450, 465, 468], "explain_target": [97, 448], "explainer_cl": [97, 101, 458], "explan": [97, 101, 448, 454, 458, 465], "explanation_index": [97, 458], "explicit": [158, 185, 419, 420, 424, 426, 434, 439, 440, 448, 449, 459, 463, 465, 467, 468], "explicitli": [213, 221, 419, 436, 443, 451, 457, 462, 467], "exploit": [8, 21, 429, 448], "explor": [8, 31, 429, 452, 461, 462, 467], "exploratori": 452, "exponenti": 221, "expos": [31, 419, 448], "exposur": 448, "expr": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "express": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 446, 448, 451, 455], "extend": [157, 457, 460, 467], "extens": [448, 461], "extra": [347, 405, 446, 448], "extract": [31, 181, 183, 184, 185, 186, 363, 421, 442, 458, 468], "extract_pi": 421, "f": [338, 347, 403, 404, 405, 406, 411, 412, 414, 415, 416, 417, 419, 420, 421, 426, 427, 431, 434, 435, 436, 442, 443, 469], "f1": 464, "f2": 464, "fa": 423, "fabian": 450, "face": [253, 255, 257, 262, 266, 280, 282, 284, 286, 427, 429], "facilit": 461, "fact": [21, 421, 426, 445, 455, 459], "factor": [13, 16, 446, 454, 455, 469], "factori": [158, 213, 266, 267, 268, 269, 270, 276, 278, 329, 409, 414, 415, 416, 417, 431, 438, 448], "fail": [423, 436, 440, 447, 448, 465], "failur": [299, 448, 451], "failure_valu": 299, "fairli": 459, "fake": [246, 353, 357, 408, 409, 423, 424, 431, 448, 453, 464, 468], "fall": [157, 186, 420, 454, 466], "fallback": [221, 248, 373, 423, 448, 462], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 97, 101, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 183, 184, 185, 186, 213, 215, 221, 226, 253, 255, 257, 262, 266, 280, 282, 284, 286, 299, 308, 326, 327, 331, 337, 338, 351, 356, 361, 363, 364, 368, 400, 409, 414, 415, 416, 417, 423, 431, 438, 439, 440, 446, 448, 456], "falsi": 456, "famili": 455, "familiar": [404, 405, 406, 409, 411, 412, 414, 415, 416, 417, 423, 424, 431, 435, 436, 438], "fang": 450, "fantasi": 10, "far": 454, "farthest": [208, 209, 387, 388, 409, 446, 448, 450, 452, 461], "farthest_point_sampl": [209, 448], "fashion": [307, 309], "fast": [347, 414, 416, 417, 453, 462, 466], "faster": [221, 347, 453], "fault": 92, "faulti": 447, "favicon": 448, "favor": 448, "fc": [404, 405, 406], "feasibl": [76, 454, 458], "featur": [97, 114, 155, 360, 446, 447, 448, 449, 455, 458, 465, 467], "fed": [446, 458], "feder": 450, "fee": 451, "feed": [347, 432, 445, 446, 457, 467], "feedback": 450, "feel": 420, "few": [403, 429, 448, 449, 452, 460, 463, 465, 467, 469], "field": [235, 350, 351, 448, 467, 468], "fifti": 451, "fig": [421, 432], "figsiz": 432, "figur": 421, "file": [404, 405, 406, 420, 423, 424, 436, 446, 448, 451, 456, 463, 467], "filenotfounderror": [404, 405, 406, 420], "fill": [31, 246, 421], "filler": 455, "filter": [31, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 215, 221, 358, 361, 414, 426, 448, 455, 457, 462, 467, 469], "filter_attribut": 448, "filter_df": [31, 448], "filterwarn": 420, "final": [403, 405, 408, 420, 426, 443], "find": [215, 331, 381, 446, 452, 454, 455, 459, 467], "fine": [424, 438, 439, 440, 446], "finer": [158, 446], "fingerprint": [149, 155, 341, 343, 446, 448, 450, 460], "finish": 453, "finit": [184, 242, 250, 370, 396, 429, 460, 464], "first": [208, 215, 248, 380, 388, 403, 405, 408, 409, 414, 419, 420, 423, 424, 426, 431, 432, 436, 440, 442, 443, 446, 447, 448, 454, 455, 459, 460, 461, 462, 467, 469], "fit": [31, 206, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 347, 389, 391, 404, 405, 406, 414, 415, 416, 417, 423, 431, 438, 448, 451, 453, 455, 460, 465], "fit_gpytorch_ml": 448, "fit_gpytorch_mll_torch": 448, "fit_intercept": 423, "fit_param": 347, "fit_predict": 347, "fit_transform": 347, "fitnr": [31, 431], "fitzner": [446, 450], "fix": [242, 269, 420, 421, 426, 429, 432, 435, 436, 449, 454, 460, 464, 467, 469], "flag": [26, 31, 53, 97, 101, 122, 125, 130, 132, 196, 215, 216, 221, 356, 363, 445, 448, 454, 456, 457, 458, 461], "flake8": 448, "flexibl": [419, 434, 448, 463, 464], "flexibli": [459, 461], "float": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 42, 44, 45, 47, 48, 108, 109, 110, 111, 112, 113, 114, 115, 119, 125, 126, 144, 151, 152, 155, 159, 162, 163, 169, 170, 171, 172, 173, 174, 175, 194, 196, 220, 221, 244, 248, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 290, 299, 300, 307, 308, 309, 314, 324, 347, 349, 353, 354, 355, 360, 371, 375, 377, 378, 380, 381, 382, 393, 396, 397, 398, 419, 421, 423, 429, 431, 448, 449, 453, 454, 468], "float64": [393, 432], "floattensortyp": 423, "fly": [185, 463, 465], "fn": 323, "focu": 454, "focus": [132, 432, 436, 446], "folder": [405, 446, 449, 456, 465], "follow": [159, 181, 183, 184, 185, 186, 215, 244, 246, 248, 347, 404, 405, 406, 409, 411, 412, 414, 415, 416, 417, 419, 420, 424, 429, 431, 436, 439, 440, 442, 443, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "footprint": [10, 215], "forbid": 399, "forc": [97, 99, 157, 196, 448, 449, 458, 461], "foreach": 423, "forest": [285, 286], "forgiv": 466, "fork": 449, "form": [221, 242, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 347, 353, 445, 446, 451, 452, 454, 459, 460, 461, 462, 463, 464, 469], "formal": [427, 445], "format": [45, 311, 347, 366, 372, 375, 423, 424, 438, 439, 446, 447, 448, 449, 454, 456, 463, 464], "format_except": 447, "former": [426, 448], "formul": [453, 467], "formula": 426, "forrest": 448, "found": [90, 158, 213, 221, 331, 341, 378, 381, 420, 426, 431, 446, 447, 449, 454, 455, 461, 467], "foundat": 461, "four": 426, "fourier": 114, "fourth": 455, "fp": [387, 448, 452], "fp_size": [149, 460], "fpsiniti": 209, "fpsrecommend": [409, 423, 424, 438, 439, 440, 446, 448, 453, 461], "frac": [443, 459], "frac1": 415, "fraction": [15, 109, 349, 420, 452, 455, 456], "fraction1": 415, "fraction_1": 455, "fraction_2": 455, "fraction_3": 455, "fractur": 455, "frame": [355, 458, 469], "frame1": 415, "frame2": 415, "frame_1": 455, "frame_2": 455, "framea": 415, "framea_a": 415, "frameb": 415, "framework": [454, 460], "free": [449, 451, 456], "freedom": 463, "freeli": 426, "frequenc": 114, "frequent": 429, "fresh": 420, "frictionless": 463, "friendli": 448, "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 149, 151, 152, 155, 157, 158, 165, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 238, 246, 248, 250, 253, 255, 257, 260, 262, 266, 269, 274, 278, 280, 282, 284, 286, 290, 297, 299, 305, 308, 309, 333, 337, 338, 342, 345, 347, 355, 356, 358, 360, 371, 382, 388, 389, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 421, 423, 424, 426, 427, 429, 431, 432, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 449, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469], "from_bound": [213, 448, 462], "from_campaign": [97, 458], "from_config": [31, 439, 440, 454], "from_datafram": [213, 215, 221, 448, 457, 462, 463, 469], "from_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 371, 423], "from_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 371, 423, 424, 438, 454, 463], "from_paramet": [213, 215, 221, 448], "from_preset": 266, "from_product": [213, 215, 221, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 421, 423, 424, 426, 427, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 446, 448, 455, 457, 462, 463, 464], "from_recommend": [97, 458], "from_record": [463, 464], "from_repl": [260, 465], "from_simplex": [221, 426, 448, 457, 462, 469], "from_surrog": [97, 458], "front": 459, "frontier": 432, "frozenset": [44, 213, 426], "fsspec": 448, "fulfil": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 420, 426, 427], "full": [26, 213, 378, 402, 444, 448, 454, 457, 458, 460, 467, 468], "full_factori": 213, "full_lik": 421, "full_lookup": [404, 405, 406], "fulli": [426, 446, 448, 456, 457, 464], "fullparamnam": 423, "fulltest": 449, "func": [347, 449], "func_nam": 442, "funci": 448, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 39, 45, 46, 52, 60, 62, 70, 82, 92, 94, 97, 113, 121, 124, 129, 131, 133, 156, 157, 161, 194, 196, 197, 214, 219, 225, 229, 230, 238, 239, 242, 243, 245, 247, 248, 249, 254, 261, 267, 272, 287, 291, 296, 303, 306, 307, 308, 309, 310, 313, 314, 316, 319, 335, 339, 348, 352, 355, 357, 362, 363, 366, 369, 374, 376, 383, 386, 395, 408, 414, 415, 416, 417, 419, 421, 423, 426, 429, 432, 438, 442, 443, 446, 447, 448, 452, 455, 456, 457, 459, 461, 462, 464, 465, 466, 467, 468, 469], "function_nam": [442, 443], "functionalgroup": 149, "functionalgroupsfingerprint": 149, "fundament": [460, 463], "furo": 448, "further": [13, 16, 362, 426, 427, 438, 446, 453, 457, 461, 462, 465, 467, 468], "furthermor": [431, 453], "furyl": [404, 405, 406], "futur": [57, 215, 261, 414, 416, 417, 420, 442, 458, 466], "fuzzi": 313, "fuzzy_row_match": [313, 448], "g": [53, 55, 56, 73, 100, 144, 158, 215, 221, 320, 343, 362, 429, 446, 447, 448, 449, 452, 453, 455, 456, 458, 460, 461, 462, 464, 469], "g1": 427, "g2": 427, "g3": 427, "gain": [221, 454, 458], "gamma": 170, "gammaprior": 448, "garbag": 448, "gather": [186, 442, 443, 452, 467], "gaussian": [102, 203, 255, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 307, 409, 431, 448, 455, 461, 467], "gaussian_kd": 421, "gaussian_process": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 266, 268, 269, 273, 276, 278, 409, 448], "gaussianmixtureclusteringrecommend": 461, "gaussianprocesspreset": [266, 274], "gaussianprocesssurrog": [274, 409, 414, 415, 416, 417, 421, 431, 438, 439, 440, 448, 465], "gcf": [404, 406], "ge": 412, "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 148, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 253, 255, 257, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 297, 299, 305, 311, 337, 343, 347, 354, 371, 383, 391, 403, 409, 419, 426, 432, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 463, 464, 465, 466, 467, 468, 469], "geom_mean": [125, 128, 431, 459], "geometr": [128, 382, 431, 459], "germani": [446, 450, 456], "get": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 194, 196, 213, 266, 347, 353, 409, 420, 423, 426, 435, 436, 445, 446, 448, 453, 468, 469], "get_absolute_threshold": [44, 448], "get_acquisition_funct": [31, 194, 196, 448], "get_candid": [221, 420, 421], "get_cmap": 421, "get_comp_rep_parameter_indic": [215, 448], "get_current_recommend": [181, 183, 184, 185, 186, 448], "get_integration_point": 15, "get_invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_invalid_polar": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59], "get_lin": 420, "get_metadata_rout": 347, "get_next_recommend": [181, 183, 184, 185, 186, 448], "get_non_meta_recommend": [181, 183, 184, 185, 186, 448], "get_param": 347, "get_parameters_by_nam": [213, 215, 221], "get_parameters_from_datafram": [213, 221], "get_subclass": 409, "get_surrog": [31, 97, 194, 196, 448, 458, 465], "get_transform_object": [368, 448], "get_transform_paramet": 448, "get_valid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 448], "getawai": 149, "getawayfingerprint": 149, "getcomputedstyl": 423, "ghosecrippen": 149, "ghosecrippenfingerprint": 149, "git": [446, 449], "github": [278, 310, 334, 360, 423, 448, 449, 450], "give": [347, 423, 424, 426, 443, 451, 454, 455, 459, 463], "given": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 29, 31, 34, 40, 41, 42, 44, 65, 90, 97, 100, 101, 122, 125, 130, 132, 134, 155, 157, 158, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 227, 242, 246, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 290, 302, 314, 318, 326, 327, 331, 332, 333, 336, 337, 340, 341, 349, 351, 353, 356, 363, 371, 372, 380, 382, 388, 391, 414, 415, 416, 417, 420, 426, 429, 431, 436, 442, 443, 448, 453, 454, 462, 464, 465], "glass_transition_tempc": 460, "global": [15, 384, 448, 468, 469], "gmean": 382, "gmm": 203, "go": [317, 426, 446], "goal": [403, 429, 459, 467], "goe": 465, "good": [353, 420, 431, 454, 456, 466], "good_interv": 353, "good_reference_valu": 353, "goodwil": 451, "googl": [448, 449], "govern": 446, "gp": [253, 255, 257, 262, 266, 280, 282, 284, 286, 448], "gpytorch": [102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 165, 167, 169, 170, 171, 172, 173, 174, 175, 448], "grab": 445, "gradient": [10, 196, 284, 448, 456, 461], "grant": [448, 451], "granular": [424, 438, 439, 440, 446], "granularity_coar": 438, "granularity_fin": 438, "great": [429, 463], "greater": [186, 196], "greatli": 449, "greedi": [196, 347, 448, 461], "green": 423, "grid": [432, 442, 443], "grid_d": [442, 443], "grossli": 451, "ground": 448, "group": [88, 196, 318, 328, 391, 427, 446, 448, 454, 458], "groupbi": [248, 250], "grow": 469, "gt": [417, 426], "gu16": 460, "guarante": [448, 455, 456, 461], "guid": [347, 408, 446, 447, 448, 449, 452, 454, 457, 459, 462, 464, 467], "guidelin": [448, 449, 452], "h": 347, "ha": [31, 53, 76, 77, 81, 82, 97, 184, 213, 215, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 317, 331, 333, 337, 354, 365, 388, 389, 405, 409, 414, 415, 416, 417, 426, 431, 436, 438, 446, 448, 449, 451, 453, 454, 455, 458, 460, 462, 463, 464, 466, 467], "had": [242, 455, 460, 464], "half": [152, 171, 172, 371, 436, 453], "halfcauchyprior": 448, "halfnormalprior": 448, "hamster": 467, "hand": [45, 155, 248, 427, 429, 432, 442, 443, 446, 454, 463, 465], "handi": 455, "handl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 97, 130, 139, 244, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 364, 369, 414, 415, 429, 431, 448, 454, 459, 469], "happen": [89, 184, 431, 436, 443, 447, 448, 449, 462, 463, 467], "happili": 459, "hard": [448, 467, 469], "hardcod": 448, "harmless": 451, "hartmann": [421, 442, 443], "hasattr": [411, 412, 435, 436], "hash": [311, 446, 456, 460], "hashabledict": 448, "have": [26, 31, 38, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 122, 125, 130, 132, 155, 157, 206, 215, 242, 261, 294, 318, 328, 331, 347, 353, 362, 363, 378, 404, 405, 408, 409, 414, 415, 419, 421, 426, 427, 429, 431, 435, 436, 442, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 457, 459, 460, 461, 463, 464, 465, 467, 469], "head": 448, "header": 351, "heart": 467, "heatmap": [97, 99], "help": [429, 463, 464, 467], "helper": [419, 421, 423, 426, 463], "henc": [342, 426, 429, 438, 453, 455, 460, 469], "here": [56, 378, 404, 406, 408, 411, 412, 419, 420, 424, 426, 427, 435, 436, 438, 442, 443, 445, 446, 447, 453, 455, 457, 459, 460, 461, 462, 463, 464, 466, 467], "herebi": 451, "herein": [451, 454], "heurist": [196, 347], "hierarch": 463, "hierarchi": [90, 448, 449, 454, 463], "high": [276, 403, 429, 448, 449, 452, 454, 455, 460, 463], "higher": [155, 429, 447, 455, 458, 461], "highest": [452, 463], "highlight": 467, "hint": 449, "histogram": 314, "histor": 460, "histori": 449, "hoc": 459, "hold": [44, 328, 451, 463], "home": [414, 416, 417], "homepag": [446, 448], "hood": 460, "hook": [49, 221, 230, 234, 333, 444, 447, 448, 449], "hopp": [446, 450], "host": [446, 448, 456], "hostnam": [311, 456], "hot": [146, 405, 429, 446, 448, 460], "how": [54, 244, 246, 347, 362, 388, 403, 404, 406, 407, 408, 409, 410, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 429, 436, 438, 439, 440, 443, 446, 454, 455, 456, 459, 464, 465, 466, 467], "howev": [158, 221, 261, 333, 419, 426, 429, 435, 436, 445, 447, 449, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 465, 467, 469], "hrovatin": 450, "html": [102, 165, 310, 323, 378, 423, 448], "http": [102, 165, 278, 310, 323, 334, 360, 378, 446, 448, 451, 467], "hue": [403, 404, 405, 406, 420, 442, 443], "human": [220, 375, 438, 448, 450, 463], "hybrid": [25, 26, 73, 187, 188, 196, 210, 215, 216, 409, 410, 414, 415, 416, 417, 431, 433, 438, 444, 446, 448, 461, 462], "hybrid_recommend": 436, "hybrid_sampl": [196, 461], "hyperrectangl": [213, 462], "hypervolum": [13, 16], "hypothesi": [446, 448, 449], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 72, 73, 79, 81, 82, 84, 86, 97, 100, 101, 116, 119, 126, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 228, 242, 244, 246, 248, 250, 253, 255, 257, 258, 260, 261, 262, 266, 276, 280, 282, 284, 286, 290, 294, 302, 307, 308, 309, 312, 313, 314, 318, 321, 322, 323, 326, 327, 331, 333, 334, 336, 337, 338, 341, 342, 347, 351, 353, 354, 355, 356, 357, 361, 362, 363, 366, 370, 371, 378, 380, 381, 388, 389, 396, 400, 401, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 421, 423, 424, 426, 427, 429, 431, 435, 436, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469], "ibm": 347, "icon": 423, "ideal": [453, 455, 464], "ident": [158, 317, 318, 457, 460, 463, 467], "identif": 429, "identifi": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 248, 328, 342, 362, 363, 420, 448, 455, 458, 459, 460, 462, 463, 464, 467], "idx_offset": 45, "ignor": [122, 125, 130, 132, 184, 196, 215, 244, 246, 248, 331, 347, 360, 406, 420, 436, 448, 455, 463, 469], "ignore_exampl": 448, "ignore_list": 359, "ii": 451, "iii": 451, "illustr": [432, 434, 457], "iloc": 453, "imag": [429, 448], "imagin": [426, 429], "immedi": [419, 454], "immut": 448, "impact": [405, 443, 456], "imperfect": 355, "implement": [21, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 126, 178, 189, 250, 258, 335, 414, 420, 426, 442, 448, 449, 450, 452, 458, 461, 462, 464, 467], "impli": [426, 446, 451, 455, 460], "implicitli": 463, "import": [13, 16, 88, 97, 125, 246, 347, 420, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "impos": [426, 427, 455], "imposs": [446, 456, 457, 463], "improv": [3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 409, 412, 418, 420, 444, 446, 448, 451, 456], "imput": [244, 246, 402, 406, 444, 446], "impute_mod": [244, 246, 248, 406, 464], "inabl": [446, 451], "inaccuraci": 446, "inact": [44, 157, 159, 196, 213, 448], "inactive_parameter_combin": [44, 213, 448], "inc": 467, "incident": 451, "includ": [63, 65, 122, 125, 130, 132, 157, 186, 244, 326, 327, 359, 404, 415, 424, 426, 439, 440, 443, 448, 449, 451, 452, 453, 455, 457, 469], "inclus": 451, "incom": 463, "incompat": [69, 70, 71, 72, 73, 74, 101, 262, 416, 455], "incompatibilityerror": 31, "incompatibleacquisitionfunctionerror": 453, "incompatibleexplainererror": 458, "incomplet": [448, 453], "inconsist": 448, "incorpor": [451, 453, 465, 469], "incorrect": 448, "incorrectli": 448, "increas": [10, 184, 248, 308, 309, 431, 442, 443, 448, 452, 460, 467], "increment": 221, "incur": 451, "inde": 454, "indefinit": [184, 244], "indemn": 451, "indemnifi": 451, "indent": [351, 448], "independ": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 188, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 423, 448, 459, 461, 464, 465], "independentgaussiansurrog": [262, 280, 282, 284, 448], "index": [31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 215, 248, 260, 317, 318, 347, 361, 362, 423, 424, 431, 436, 438, 448, 453, 458, 460, 462, 464], "indexkernel": 448, "indic": [13, 16, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 92, 100, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 181, 183, 184, 185, 186, 215, 253, 255, 257, 262, 266, 280, 282, 284, 286, 317, 318, 321, 322, 347, 356, 388, 426, 436, 448, 451, 453, 457, 461, 464, 465], "indirect": [326, 327, 451], "indistinguish": 426, "individu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 53, 54, 117, 118, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 244, 260, 366, 420, 427, 432, 451, 454, 457, 459, 461, 467], "induc": [44, 429], "industri": 467, "ineffici": 221, "inequ": [45, 213, 462], "inertia_": 347, "inf": [8, 414, 415, 416, 417, 438], "infeas": [455, 457], "infer": [158, 442, 443, 448, 462], "infin": 163, "infinit": [184, 185, 329, 370, 396, 397, 448, 460], "influenti": 467, "info": [314, 448], "inform": [26, 139, 297, 347, 363, 404, 405, 406, 421, 426, 435, 436, 443, 446, 448, 449, 451, 453, 456, 457, 460, 462, 467, 468], "infring": 451, "ingest": [221, 244, 448, 460, 461], "ingredi": [426, 427, 455], "inher": [21, 157, 253, 255, 257, 262, 266, 280, 282, 284, 286, 426, 465], "inherit": 449, "init": 347, "initi": [108, 109, 110, 111, 112, 113, 114, 115, 119, 186, 188, 196, 203, 204, 205, 206, 208, 209, 221, 244, 248, 313, 347, 388, 402, 414, 415, 416, 417, 420, 421, 431, 438, 443, 444, 448, 450, 453, 454, 456, 460, 461, 463, 464, 467], "initial_data": [244, 248, 404, 443, 464], "initial_recommend": [186, 409, 420, 421, 423, 424, 429, 438, 439, 440, 446, 461], "initial_recommender_cl": 448, "initial_strategi": 448, "initial_typ": 423, "initialis": 347, "inject": 463, "inner": [179, 361, 458, 461, 463], "innerhtml": 423, "inplac": [405, 442, 443, 469], "input": [40, 41, 42, 77, 126, 138, 141, 142, 144, 152, 155, 213, 215, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 297, 299, 305, 307, 328, 347, 349, 350, 355, 356, 357, 361, 364, 365, 371, 373, 380, 388, 400, 401, 403, 423, 431, 432, 442, 443, 448, 459, 463, 464, 467], "input_dim": 423, "input_label": 356, "inputtransform": 391, "insid": [420, 423, 424, 447, 463], "insight": [97, 420, 446, 448, 450, 468], "inspect": [337, 419, 426], "instabl": [448, 455], "instal": [448, 449, 456, 458, 460, 469], "instanc": [40, 41, 42, 53, 56, 97, 186, 215, 347, 353, 415, 420, 426, 427, 446, 447, 449, 453, 454, 455, 456, 458, 460, 462, 463, 464, 469], "instanti": [420, 454], "instead": [181, 183, 184, 185, 186, 313, 342, 356, 364, 414, 416, 417, 446, 447, 448, 454, 455, 459, 460, 463, 464, 466, 467, 469], "institut": [450, 451], "instruct": [446, 448, 466, 468], "instrument_nam": 314, "int": [10, 13, 15, 16, 21, 31, 34, 44, 45, 51, 97, 104, 105, 106, 109, 111, 112, 113, 114, 115, 122, 125, 126, 130, 132, 146, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 244, 248, 250, 299, 300, 307, 308, 309, 314, 347, 357, 366, 381, 382, 384, 385, 388, 389, 391, 414, 416, 417, 426, 429, 431, 443, 448, 449, 460], "int64": 347, "integ": [34, 146, 215, 248, 436, 448, 449, 460], "integr": [15, 448, 449, 452, 454], "intend": [408, 419, 442, 449, 461], "intens": 460, "intention": 451, "interact": [30, 31, 408, 446, 447, 454, 457, 463], "interchang": 426, "interconnect": 454, "interest": [454, 458, 459, 460, 469], "interfac": [178, 258, 268, 419, 421, 448, 451, 454, 457, 458], "intermedi": [206, 388], "intern": [31, 45, 57, 184, 403, 420, 431, 448, 453, 455, 456, 460, 461, 462, 463], "internet": 446, "internship": 450, "interplai": 448, "interpol": [109, 276, 448], "interpret": [13, 16, 215, 242, 349, 424, 426, 439, 440, 443, 456, 462, 464], "interrupt": 67, "intersect": 436, "interv": [31, 44, 151, 157, 159, 253, 255, 257, 262, 266, 280, 282, 284, 286, 305, 307, 308, 309, 431, 448, 454, 460, 463, 466], "intrins": 467, "introduc": [347, 447, 448, 455, 460, 461, 464], "intuit": [454, 458], "invalid": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 78, 221, 342, 389, 424, 439, 447, 454, 455, 462], "invalid_config": 440, "invalid_surrogate_model": 424, "invalid_typ": 440, "invari": [53, 56, 57, 317, 318, 455], "invers": [234, 463], "invert": [31, 361], "investig": [242, 464, 465], "invok": [464, 468, 469], "involv": [31, 221, 260, 419, 426, 446, 456, 458, 459, 460, 463, 467], "io": 310, "irrelev": [426, 448, 455], "irrevoc": 451, "is_bound": [371, 448], "is_cardinality_fulfil": 448, "is_continu": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155], "is_degener": 371, "is_discret": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155], "is_empti": [213, 221, 448], "is_eq": 45, "is_finit": 448, "is_fully_unbound": 371, "is_half_bound": 371, "is_in_rang": [137, 138, 139, 141, 142, 144, 151, 152, 155], "is_inact": 448, "is_left_bound": 371, "is_mc": 448, "is_multi_output": [122, 125, 130, 132, 448], "is_numer": [137, 138, 139, 141, 142, 144, 151, 152, 155, 448], "is_right_bound": 371, "is_stat": [181, 183, 184, 185, 186, 448, 457], "iso": 423, "isol": 454, "isoxazol": 467, "issu": [261, 323, 334, 365, 448, 451, 464, 469], "item": [41, 137, 138, 139, 141, 142, 144, 151, 152, 155, 426, 429, 442, 443, 460], "iter": [13, 16, 31, 44, 151, 184, 185, 213, 215, 244, 261, 305, 324, 329, 347, 353, 355, 357, 365, 372, 400, 401, 404, 414, 415, 416, 417, 420, 421, 429, 442, 443, 446, 448, 452, 454, 460, 461, 464, 465, 469], "its": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 213, 215, 221, 238, 248, 250, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 314, 317, 325, 333, 337, 353, 371, 375, 403, 409, 419, 421, 426, 427, 429, 443, 446, 447, 449, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 467, 469], "itself": [253, 255, 257, 262, 266, 280, 282, 284, 286, 419, 442, 447, 467], "j": [405, 446, 460, 467], "jackiepho": [404, 405, 406], "januari": 451, "javadi": 450, "jin": 450, "join": [361, 447], "joint": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 194, 196, 260, 454, 465], "joint_acq_valu": 454, "joint_acquisition_valu": [31, 194, 196, 448, 454], "jointli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 432, 454], "journal": 347, "json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 371, 423, 424, 438, 439, 448, 468], "json_str": 463, "juli": 450, "julian": 450, "jump": [448, 467], "jun": 347, "jupyt": 423, "just": [429, 445, 449, 463], "k": [152, 204, 347, 388, 403, 404, 405, 406, 408, 409, 411, 412, 420, 426, 432, 434, 435, 436, 448, 457, 461, 469], "karin": 450, "kde": 421, "keep": [52, 155, 213, 221, 420, 448, 449], "kei": [280, 286, 292, 328, 353, 405, 449, 458], "kept": [361, 460, 465], "kernel": [104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 266, 267, 268, 269, 270, 276, 278, 347, 409, 414, 415, 416, 417, 431, 438, 448, 455, 467], "kernel_factori": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 266, 268, 269], "kernel_or_factori": 266, "kernelexplain": [95, 97, 98, 101, 458], "kernelfactori": [266, 269, 270, 276, 278, 448], "keyword": [97, 155, 406, 409, 436, 443, 448, 453, 455, 462, 464], "kgaa": [446, 450, 456], "kian": 467, "kickstart": 463, "kind": [196, 446, 448, 451, 455, 460, 461], "kiter": [414, 415, 416, 417, 431], "klekotaroth": 149, "klekotarothfingerprint": 149, "kmean": [347, 409], "kmeansclusteringrecommend": [409, 461], "knob": 446, "know": [429, 439, 446, 447, 459, 463, 467], "knowledg": [8, 10, 446, 448, 467], "known": [455, 457, 465, 467], "koller": 467, "kwarg": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 108, 110, 112, 117, 118, 119, 167, 169, 170, 171, 172, 173, 174, 175, 178, 198, 258, 263, 268, 343, 347, 357, 370], "kwargs_conform": [155, 343, 460], "kwargs_fingerprint": [155, 343, 460], "l0": 34, "l1": 460, "l664": 278, "label": [56, 57, 144, 155, 314, 347, 356, 426, 427, 432, 446, 448, 455, 457, 462, 464], "labelpad": 421, "labels_": 347, "laboratori": 432, "laggner": 149, "laggnerfingerprint": 149, "lambda": [414, 416, 417, 420, 426, 442, 465], "lambda_1": 423, "lambda_2": 423, "lambda_init": 423, "lanat": 458, "land": 448, "languag": [323, 427, 446], "larg": [155, 221, 347, 411, 412, 427, 448, 456, 460, 464, 469], "larger": [109, 152, 389, 409, 416, 454, 455, 463, 467], "largest": [208, 388, 429, 452], "last": [184, 429, 449, 454, 461], "last_call_tim": 419, "lastli": 421, "latent": 460, "later": [152, 447, 453, 454, 463], "latest": [185, 446, 449, 454], "latter": [21, 31, 317, 337, 347, 420, 426, 454, 459, 467], "law": [446, 451], "lawsuit": 451, "layer": 149, "layeredfingerprint": 149, "layout": 448, "lazi": [223, 392, 448], "lazili": [448, 456], "lazyfram": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 223], "le": 412, "le_method": 449, "lead": [87, 431, 448, 456, 463], "lean": 449, "learn": [15, 249, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 347, 409, 414, 415, 416, 417, 429, 431, 438, 442, 444, 446, 448, 455, 458, 460, 465, 466, 468], "least": [159, 184, 427, 446, 451, 453, 454], "leav": 463, "lee": 450, "left": [84, 85, 175, 244, 354, 362, 371, 415, 432, 448, 459], "left_df": 362, "leftov": 448, "legal": 451, "legend": [404, 406, 432], "len": [415, 420, 421, 426, 427, 429], "length": [110, 184, 185, 253], "lengthi": 454, "lengthscal": [109, 110, 111, 113, 114, 115], "lengthscale_initial_valu": [109, 110, 111, 113, 114, 115], "lengthscale_prior": [109, 110, 111, 113, 114, 115], "leq": 34, "less": [8, 318, 357, 420, 421, 429, 454, 469], "let": [403, 405, 419, 420, 421, 423, 424, 426, 427, 432, 434, 443, 446, 453, 455, 459, 463], "level": [355, 448, 449, 453, 454, 455, 461, 463], "leverag": [420, 453, 454, 461], "li": [159, 460], "liabil": 451, "liabl": 451, "lib": 447, "librari": 447, "licensor": 451, "lie": [31, 253, 255, 257, 262, 266, 280, 282, 284, 286, 353], "liebig": 450, "life": [446, 449, 450, 469], "lifecycl": 454, "ligand": [404, 405, 406, 408, 409, 420, 446, 458, 460], "ligand_data": 420, "ligand_smil": 420, "like": [13, 16, 159, 206, 248, 320, 347, 421, 426, 429, 446, 447, 448, 449, 453, 454, 455, 457, 463, 464, 467, 469], "likelihood": 253, "lime": [97, 100, 458], "limetabular": [95, 96, 458], "limit": [8, 276, 314, 421, 446, 450, 451, 455, 462, 468], "line": [351, 371, 404, 406, 420, 429, 448, 449, 452, 454, 460, 464, 467], "linear": [45, 108, 213, 280, 303, 308, 409, 410, 431, 444, 448, 449, 458, 462, 466], "linear_model": 423, "linear_regressor": 423, "linearkernel": 448, "linearli": [276, 308, 309, 431, 448], "lineplot": [403, 404, 405, 406, 420, 442, 443], "lingo": 149, "lingofingerprint": 149, "link": [55, 447, 448, 451, 460], "linspac": [414, 415, 416, 417, 421, 423, 424, 426, 432, 435, 436, 438, 442, 443, 469], "lint": [446, 448, 449], "linter": [448, 449], "list": [34, 35, 36, 37, 38, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 158, 164, 184, 185, 213, 215, 221, 222, 223, 226, 227, 228, 244, 248, 250, 313, 326, 327, 328, 336, 343, 353, 358, 359, 360, 363, 388, 404, 409, 414, 415, 416, 417, 421, 426, 427, 429, 431, 435, 436, 443, 446, 448, 449, 451, 455, 459, 460, 461, 462, 464], "liter": [31, 97, 184, 244, 246, 248, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 355, 388, 449], "literatur": 448, "litig": 451, "littl": 447, "live": 465, "liver": [464, 467], "ll": 457, "load": [392, 420, 423, 439, 440, 447, 448], "loc": [173, 174, 404, 406, 432, 453], "local": [447, 449, 456, 458, 468], "locat": [13, 16, 173, 174, 347, 453, 456, 467], "lock": 448, "lockfil": 448, "log": [173, 314, 409, 446, 456], "logarithm": [4, 11, 13, 14, 382], "logei": [4, 448], "logic": [179, 260, 353, 356, 403, 448, 455, 461, 464, 469], "lognormalprior": 448, "logo": 448, "long": [454, 463, 464], "longer": [157, 448, 456], "look": [246, 409, 426, 429, 447, 452, 454, 455, 457, 458, 463, 464, 466], "look_up_target": 244, "lookup": [242, 244, 248, 250, 356, 362, 402, 403, 421, 432, 435, 444, 448, 456, 458, 468], "lookup_df": 246, "lookup_test_task": 443, "lookup_training_task": 443, "lookup_valu": [411, 412, 421, 435, 436], "lookup_withmiss": 406, "loop": [242, 244, 250, 414, 415, 416, 417, 420, 431, 448, 453, 458, 464, 469], "loss": 451, "lost": 463, "lot": 434, "low": [276, 429, 447, 448, 458, 460, 463], "lower": [159, 175, 307, 308, 309, 371, 404, 406, 421, 431, 442, 443, 455, 460, 466], "lower_bound": 462, "lower_threshold": 159, "lst_exclud": 358, "lt": 447, "luxuri": 454, "m": 426, "m1": 447, "mac": 447, "macc": 149, "maccsfingerprint": 149, "machin": [429, 446, 447, 449, 452, 456, 460, 466, 467], "machineri": [21, 196, 447, 449, 457, 467, 469], "made": [31, 88, 244, 388, 406, 446, 447, 451, 455, 456, 464], "magic": 467, "magnitud": [354, 355, 469], "mai": [31, 44, 122, 125, 130, 132, 215, 333, 347, 445, 446, 451, 454, 457, 463, 464, 465], "mail": 451, "main": [30, 31, 446, 448], "maintain": [290, 449, 457, 459], "major": [448, 464], "make": [57, 196, 253, 255, 257, 262, 266, 280, 282, 284, 286, 288, 289, 290, 323, 354, 356, 404, 406, 409, 411, 426, 427, 446, 447, 448, 449, 451, 453, 454, 455, 457, 458, 460, 463, 465, 467, 469], "make_explainer_for_surrog": 97, "malfunct": 451, "manag": [30, 213, 214, 215, 221, 385, 448, 451, 464], "mandatori": [445, 448, 466], "mani": [196, 389, 426, 435, 436, 446, 454, 460, 463, 466, 467], "manipul": [448, 456], "manner": 456, "manual": [436, 447, 448, 463, 465], "map": [144, 149, 155, 246, 248, 260, 307, 308, 309, 331, 347, 356, 391, 404, 405, 406, 431, 464, 466], "mapfingerprint": 149, "mapl": [95, 96, 97, 100, 458], "maranzana": 347, "margin": 448, "mark": [451, 454, 467, 468], "markdown": [424, 439, 440, 448], "marker": [403, 404, 405, 406, 420, 442, 443, 448], "markers": [403, 405, 420, 432, 442, 443], "market": 429, "marketplac": 448, "martin": [446, 450], "mask_bad1": 414, "mask_bad2": 414, "mask_bad3": 414, "mask_good": [414, 455], "mass": 169, "master": 278, "match": [31, 89, 91, 138, 141, 142, 144, 152, 155, 158, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 297, 299, 302, 305, 313, 331, 333, 362, 363, 400, 419, 421, 431, 436, 446, 448, 453, 454, 457, 459, 463, 464, 468], "match_attribut": 448, "match_targeta": 466, "match_targetb": 466, "materi": [429, 450, 467], "matern": 109, "maternkernel": 448, "math": [420, 426], "mathemat": 448, "matmin": 447, "matplotlib": [404, 406, 421, 432, 448], "matrix": 347, "matter": [426, 434, 449, 459], "max": [246, 302, 354, 404, 405, 406, 408, 409, 414, 415, 416, 417, 420, 421, 423, 424, 429, 431, 432, 438, 439, 440, 446, 448, 459, 463, 464, 468], "max_cardin": [34, 44, 51, 455], "max_column": [366, 426], "max_colwidth": 366, "max_it": [347, 423], "max_n_subspac": [196, 448, 455], "max_nonzero": 221, "max_row": [366, 426], "max_sum": [221, 426, 462], "max_target": 466, "max_yield": [404, 406], "maxim": [6, 13, 16, 302, 408, 421, 429, 431, 446, 448, 458, 466], "maximum": [6, 34, 44, 51, 61, 155, 196, 213, 215, 221, 307, 347, 366, 426, 427, 431, 448, 455, 460, 462], "mc": [429, 453], "md": 448, "me2pph": [404, 405, 406], "mean": [5, 8, 21, 31, 57, 128, 204, 242, 244, 246, 248, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 290, 347, 382, 406, 409, 423, 429, 431, 432, 448, 449, 451, 452, 453, 454, 455, 457, 459, 460, 461, 463, 465, 468], "meaning": 459, "meaningless": [426, 452], "meanpredictionsurrog": [290, 409, 465], "meantim": [449, 455], "measur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 75, 83, 97, 157, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 242, 244, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 297, 299, 305, 313, 353, 357, 362, 404, 405, 406, 409, 411, 412, 414, 415, 416, 417, 419, 420, 421, 431, 435, 436, 438, 445, 446, 448, 449, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468], "mechan": [31, 67, 125, 126, 128, 242, 245, 246, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 333, 347, 361, 373, 388, 403, 419, 420, 421, 442, 443, 448, 451, 457, 458, 460, 462, 463, 465, 467, 468], "mechanist": 446, "media": [451, 460, 467], "medic": 453, "mediocr": 466, "medium": [424, 438, 446, 451, 460], "medoid": [205, 347, 448, 461], "medoid_indices_": 347, "meet": [353, 451], "mem_estim": 469, "member": [337, 455, 460], "memori": [10, 215, 220, 221, 347, 448, 456, 468], "memorys": [215, 221, 469], "mention": 452, "merchant": 451, "merck": [446, 450, 456], "mere": [451, 459], "merg": 449, "meshgrid": [432, 442, 443], "messag": [89, 420], "meta": [31, 84, 181, 183, 184, 185, 186, 189, 414, 415, 416, 417, 431, 438, 446, 448, 468], "metadata": [31, 213, 221, 311, 347, 448], "metadatarequest": 347, "metarecommend": [183, 184, 185, 186, 448, 457], "methanol": 426, "method": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 92, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 215, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 268, 269, 276, 278, 280, 282, 284, 286, 289, 294, 297, 299, 305, 320, 323, 333, 337, 347, 371, 387, 388, 389, 391, 421, 424, 439, 440, 445, 448, 450, 453, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467], "methodtyp": [419, 420, 421], "methyldiphenylphosphin": [404, 405, 406], "methylisoxazol": 467, "metric": [347, 429, 446, 456, 460], "mhfp": 149, "mhfpfingerprint": 149, "micromamba": 448, "middl": 457, "midpoint": 466, "might": [53, 57, 155, 215, 405, 409, 411, 415, 436, 443, 447, 453, 454, 455, 456, 458, 462, 464, 467, 469], "mimic": [102, 165, 455], "min": [302, 354, 403, 411, 412, 421, 431, 432, 435, 436, 442, 443, 446, 448, 459, 463, 468], "min_cardin": [34, 44, 51, 455], "min_nonzero": 221, "min_target": 466, "mind": [429, 465], "miniconda": 448, "minim": [6, 302, 347, 431, 442, 443, 448, 455, 462, 466], "minimum": [34, 44, 51, 61, 80, 152, 213, 215, 221, 388, 448, 455], "minimumcardinalityviolatedwarn": [448, 455], "minor": 448, "mirror": [13, 16, 454, 463], "miss": [244, 246, 364, 400, 401, 406, 448, 449], "mistak": [31, 449], "mix": [250, 426, 427, 446, 455, 460, 463, 467], "mixin": 238, "mixtur": [203, 444, 448, 455, 460, 461, 467, 469], "mobil": 448, "mode": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 144, 155, 184, 244, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 302, 305, 308, 331, 353, 402, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 420, 421, 423, 424, 435, 436, 438, 439, 440, 442, 443, 444, 446, 447, 448, 454, 459, 461, 463, 468], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 78, 81, 97, 101, 102, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 253, 255, 257, 258, 259, 260, 261, 262, 266, 280, 282, 284, 286, 290, 294, 378, 411, 412, 422, 432, 442, 443, 446, 448, 450, 452, 453, 454, 455, 459, 460, 461, 463, 464, 466, 467, 468], "model_cl": 294, "model_cluster_num_parameter_nam": [203, 204, 205, 206], "model_from_config": 423, "model_from_python": 423, "model_json": 423, "model_param": [203, 204, 205, 206, 280, 284, 286, 424, 448], "modellist": 260, "modelnottrainederror": [253, 255, 257, 262, 266, 280, 282, 284, 286], "modif": [447, 451], "modifi": [185, 246, 290, 353, 354, 355, 448, 451, 469], "modul": [0, 1, 32, 93, 94, 102, 120, 135, 153, 165, 176, 179, 189, 192, 199, 211, 229, 230, 242, 251, 254, 264, 271, 291, 295, 298, 315, 319, 344, 345, 376, 392, 395, 446, 447, 448, 449], "modular": 449, "molecul": [55, 155, 342, 426, 460], "molecular": [343, 460], "moment": [250, 276, 449], "monitor": [448, 456], "monkeypatch": 447, "mont": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 82, 248, 403, 405, 406, 420, 429, 442, 443, 448, 453, 464], "monte_carlo_run": [248, 420], "mordr": [149, 155, 404, 405, 406, 408, 409, 415, 420, 424, 426, 439, 440, 446, 448, 455, 460], "mordredcommun": 448, "mordredfingerprint": [149, 460], "more": [8, 10, 57, 65, 85, 155, 184, 185, 213, 215, 221, 228, 244, 290, 310, 313, 337, 347, 351, 368, 406, 409, 421, 426, 427, 442, 445, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 460, 462, 463, 464, 465, 466, 469], "morgan": 460, "morgan_fp": [149, 448], "mors": 149, "morsefingerprint": 149, "most": [221, 244, 407, 429, 446, 449, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469], "motiv": 448, "mous": 453, "move": [13, 16, 157, 448, 463], "mpl_toolkit": 421, "mplot3d": 421, "mqn": 149, "mqnsfingerprint": 149, "mse": 429, "mu": [173, 174], "much": [405, 459, 460], "multi": [97, 129, 252, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 432, 444, 446, 448, 450, 453, 467, 468], "multiarmedbandit": 429, "multipl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 40, 122, 125, 130, 132, 247, 248, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 355, 404, 405, 406, 415, 426, 429, 446, 448, 453, 455, 458, 459, 465, 466, 467, 468], "multipli": 118, "multitask": 448, "must": [53, 122, 125, 130, 132, 215, 221, 246, 250, 333, 347, 355, 400, 409, 419, 420, 426, 429, 431, 448, 449, 451, 452, 455, 456, 457, 458, 459, 460, 464], "mutual": 464, "my_attribut": 449, "my_valu": 456, "mypi": [323, 334, 446, 448, 449], "mystr": 449, "n": [26, 253, 318, 338, 388, 404, 405, 406, 408, 409, 414, 415, 416, 417, 424, 426, 429, 431, 435, 436, 438], "n_arm": 429, "n_batches_don": 31, "n_cluster": [204, 205, 347], "n_combin": 426, "n_combinations_actu": 426, "n_combinations_expect": 426, "n_compon": 203, "n_doe_iter": [244, 248, 250, 403, 404, 405, 406, 420, 421, 442, 443, 464], "n_duplic": 426, "n_estim": 424, "n_featur": 347, "n_features_new": 347, "n_fits_don": 31, "n_grid_point": 432, "n_inactive_parameter_combin": [44, 213, 448], "n_index": 347, "n_interrupted_campaign": 420, "n_iter": [411, 412, 414, 415, 416, 417, 429, 431], "n_mc_iter": [248, 250, 403, 405, 406, 420, 442, 443, 456, 464], "n_mc_run": 429, "n_mc_sampl": 21, "n_output": [122, 125, 130, 132, 347, 448], "n_permut": 426, "n_pis_ov": 420, "n_pis_over_requir": 420, "n_point": [213, 389], "n_queri": 347, "n_raw_sampl": [196, 448, 461], "n_restart": [196, 448, 461], "n_row": 357, "n_sampl": [347, 388], "n_task": 215, "n_task_param": 448, "n_training_data": 432, "n_wrong_sum": 426, "na": 453, "nactivevalu": [414, 415, 416, 417, 431, 438], "naiv": [188, 282, 290, 409, 448, 462], "naivehybridrecommend": 448, "naivehybridspacerecommend": [436, 448, 461], "nake": [313, 456], "name": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 44, 65, 88, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 160, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 227, 236, 248, 260, 262, 297, 299, 305, 317, 325, 331, 332, 333, 342, 343, 347, 351, 353, 358, 362, 363, 364, 379, 394, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 421, 423, 424, 426, 427, 429, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 446, 448, 449, 451, 453, 454, 455, 456, 459, 462, 463, 464, 465, 466, 467, 469], "name_or_abbr": [325, 332], "namedtupl": 429, "namespac": [197, 448, 449], "nan": [163, 253, 364, 396, 398, 399, 400, 401, 414, 415, 416, 417, 431, 438, 448, 453], "nativ": [423, 448, 465], "natur": [284, 405, 449, 455, 461, 463, 466], "navig": [423, 446, 454], "nbase": 343, "nbsp": 423, "nbviewer": 423, "nd": 446, "ndarrai": [13, 16, 126, 159, 307, 308, 309, 347, 356, 367, 371, 382, 388, 421, 429, 432, 448, 464], "ne": 426, "nearli": 466, "necessari": [363, 419, 448, 449, 454, 455, 459, 460, 462, 464, 465], "necessarili": [451, 454, 455, 462, 467], "need": [26, 31, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 333, 362, 363, 404, 405, 406, 409, 414, 417, 419, 421, 423, 426, 429, 431, 442, 443, 445, 446, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 469], "neg": [15, 432, 448, 455], "negat": [6, 45, 443, 448, 467], "neglig": 451, "neither": [8, 250, 355], "neq": 34, "nest": [347, 351, 454, 468], "neural": 467, "neurip": 467, "neutral": 8, "never": [416, 453], "nevertheless": [337, 447], "new": [31, 47, 48, 184, 186, 213, 246, 261, 307, 308, 309, 317, 347, 360, 361, 364, 408, 420, 421, 438, 446, 448, 449, 454, 455, 465, 467], "new_measur": 458, "new_rec": 454, "newli": [446, 449, 456, 457, 467], "next": [31, 403, 419, 421, 426, 427, 432, 438, 442, 443, 446, 452, 453, 454, 461, 463], "nextelements": 423, "ngboost": [284, 409, 448], "ngboostmodel": 424, "ngboostsurrog": [409, 424, 448, 465], "nice": [421, 447], "nicknam": 342, "nintern": 431, "no_duplicates_constraint": 426, "no_tl": 442, "nois": [244, 354, 355, 443, 448, 468], "noise_level": 355, "noise_perc": [244, 248, 464], "noise_ratio": 354, "noise_std": [442, 443], "noise_typ": 355, "noisi": [13, 14, 16, 17, 357, 442, 446, 448, 467], "non": [64, 65, 96, 122, 125, 130, 132, 181, 183, 184, 185, 186, 188, 215, 244, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 331, 333, 337, 347, 354, 388, 389, 396, 397, 398, 400, 401, 426, 442, 446, 448, 451, 453, 455, 457, 458, 462, 463], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 42, 47, 48, 57, 63, 64, 65, 75, 83, 88, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 119, 125, 130, 132, 134, 138, 141, 142, 144, 151, 152, 155, 158, 162, 163, 164, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 218, 221, 224, 227, 228, 231, 232, 234, 236, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 294, 299, 305, 313, 314, 321, 322, 333, 343, 347, 353, 358, 359, 360, 366, 371, 372, 391, 396, 397, 398, 399, 400, 401, 409, 414, 415, 416, 417, 419, 420, 421, 423, 424, 431, 438, 453, 462, 466, 468], "nonetheless": 467, "nonlinear": [37, 213], "nonpredict": [201, 203, 204, 205, 206, 208, 209, 210], "nonpredictiverecommend": [206, 209, 210, 448], "nonzero": [34, 44, 221, 448], "noqa": [414, 449], "nor": [8, 355, 445], "norecommenderslefterror": [184, 185], "noreturn": [188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 263], "normal": [172, 173, 174, 414, 416, 417, 431, 447, 448, 451, 459, 462], "normaliz": 459, "normalize_input_dtyp": 448, "normalprior": 448, "not_a_param": 424, "notabl": [448, 457, 465], "note": [34, 44, 57, 215, 244, 248, 250, 261, 262, 347, 353, 354, 355, 404, 405, 406, 409, 415, 419, 423, 424, 426, 431, 435, 436, 438, 439, 440, 445, 446, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 467], "notebook": 423, "noteworthi": 454, "noth": [15, 31, 34, 42, 44, 45, 51, 86, 125, 155, 186, 188, 194, 196, 203, 204, 205, 206, 213, 215, 221, 253, 266, 280, 284, 286, 305, 451, 460], "notic": [419, 449, 451, 463, 465], "notimplementederror": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 126, 157, 228, 231, 232, 250, 253, 255, 257, 261, 262, 266, 280, 282, 284, 286], "notwithstand": 451, "now": [403, 404, 405, 406, 408, 409, 414, 416, 419, 420, 421, 426, 427, 429, 431, 432, 434, 438, 439, 442, 443, 445, 446, 448, 467, 469], "np": [126, 347, 411, 412, 414, 415, 416, 417, 421, 423, 424, 426, 427, 429, 432, 434, 435, 436, 438, 442, 443, 453, 455, 460, 464, 469], "nrecommend": [408, 409, 431, 435, 436], "nu": 109, "num": [361, 375], "num_disc_1": [431, 454], "num_disc_2": 431, "num_experi": [244, 403, 404, 405, 406, 420, 442, 443], "num_fantasi": 10, "num_parameter_1": 417, "num_parameter_2": 417, "num_parameter_3": 417, "num_parameter_4": 417, "num_parameter_5": 417, "num_parameter_6": 417, "num_sampl": 114, "num_valu": 462, "number": [10, 15, 21, 31, 44, 114, 122, 125, 130, 132, 155, 178, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 244, 248, 250, 253, 347, 357, 366, 371, 375, 383, 388, 389, 404, 405, 406, 411, 412, 414, 415, 416, 417, 421, 426, 429, 435, 442, 443, 446, 447, 448, 452, 454, 455, 456, 459, 460, 462, 463, 464, 469], "numer": [13, 16, 31, 34, 35, 36, 37, 38, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 87, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 213, 221, 246, 305, 354, 355, 362, 389, 400, 401, 403, 408, 411, 426, 427, 446, 448, 455, 456, 458, 459, 460, 462, 464, 466], "numerical_measurements_must_be_within_toler": [31, 400, 448, 454], "numerical_onli": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59], "numericalcontinuousparamet": [45, 63, 157, 213, 403, 411, 412, 427, 432, 434, 436, 443, 462, 464, 468], "numericaldiscreteparamet": [221, 404, 405, 406, 408, 409, 411, 414, 415, 416, 417, 419, 420, 421, 423, 424, 426, 431, 435, 436, 438, 439, 440, 442, 443, 446, 462, 463, 464, 468, 469], "numericaltarget": [246, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 420, 421, 423, 424, 431, 432, 435, 436, 438, 439, 440, 442, 443, 446, 448, 459, 463, 464, 468], "numericcontinu": 436, "numparam1": 417, "numparam2": 417, "numparam3": 417, "numparam4": 417, "numparam5": 417, "numparam6": 417, "numpi": [159, 347, 356, 367, 371, 377, 379, 411, 412, 414, 415, 416, 417, 421, 423, 424, 426, 427, 429, 432, 434, 435, 436, 438, 442, 443, 448, 453, 455, 464, 469], "nuniqu": 426, "nyou": [435, 436], "o": [347, 403, 404, 405, 406, 408, 409, 412, 414, 415, 416, 417, 420, 421, 424, 426, 429, 432, 442, 443, 446, 455, 456, 460], "o2": [404, 405, 406], "obj": [162, 163, 164, 232], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 222, 223, 232, 233, 236, 238, 253, 255, 257, 258, 260, 262, 266, 269, 280, 282, 284, 286, 293, 297, 299, 305, 320, 323, 331, 333, 347, 355, 362, 363, 365, 368, 371, 391, 403, 408, 419, 420, 421, 423, 424, 429, 432, 434, 436, 439, 440, 447, 448, 449, 451, 455, 457, 458, 461, 462, 464, 465, 466, 468, 469], "objective_json": 463, "oblig": 451, "observ": [242, 253, 255, 257, 262, 266, 280, 282, 284, 286, 429, 464, 466], "obsolet": 448, "obtain": [244, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 405, 421, 429, 432, 443, 446, 448, 454, 458, 459, 463, 467], "oc": [404, 405, 406, 408, 409], "oc1": [404, 405, 406], "occur": [56, 449], "occurr": [453, 455], "octanol": [455, 460], "off": [8, 250, 338, 415, 446, 448, 453, 455, 456, 459, 466], "offer": [333, 421, 426, 429, 435, 445, 446, 447, 451, 452, 457, 460, 461, 463, 464, 465, 467, 469], "offset": [45, 112], "offset_initial_valu": 112, "offset_prior": 112, "often": [347, 427, 429, 447, 452, 455, 456, 457, 458, 460, 463, 469], "oftentim": [463, 464], "oh": [141, 146, 405, 415, 424, 429, 431, 438, 439, 440, 446, 462, 463], "ok": 431, "old": 467, "omit": [13, 16, 194, 196, 248, 333, 419, 446, 462, 463], "onc": [248, 420, 460, 464], "onclick": 423, "one": [13, 16, 21, 31, 63, 65, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 169, 178, 179, 184, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 215, 228, 246, 266, 290, 317, 318, 351, 357, 404, 405, 406, 409, 411, 426, 429, 431, 440, 442, 443, 445, 446, 447, 448, 449, 451, 453, 454, 455, 457, 459, 460, 462, 463, 464, 465, 466, 467], "onehot": 405, "ones": [215, 313, 362, 405, 436, 448, 453, 467], "ongo": [420, 467], "onli": [10, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 97, 109, 122, 125, 130, 132, 155, 215, 221, 246, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 313, 314, 333, 334, 337, 347, 351, 353, 362, 364, 371, 388, 389, 404, 409, 414, 415, 420, 421, 423, 424, 426, 435, 436, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 469], "onlin": 429, "onnx": [261, 262, 378, 422, 446, 448, 465], "onnx_input_nam": [262, 423], "onnx_str": [262, 423, 448], "onto": [13, 16, 449], "open": [31, 44, 157, 159, 253, 255, 257, 262, 266, 280, 282, 284, 286, 446, 449], "opentelemetri": [446, 448, 456], "oper": [42, 45, 54, 234, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 356, 376, 411, 412, 416, 417, 426, 427, 447, 448, 453, 455, 456, 457, 458, 461, 463], "operator_convert": 423, "opposit": 455, "opt": [446, 456], "optim": [12, 21, 31, 44, 45, 76, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 242, 244, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 353, 405, 407, 408, 411, 412, 420, 421, 426, 429, 431, 436, 448, 450, 452, 455, 456, 458, 459, 460, 461, 462, 464, 465, 466, 467], "optimize_acqf": [45, 196], "optimize_acqf_": 45, "optimize_acqf_discret": 196, "optimize_acqf_mix": 196, "option": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 88, 93, 97, 108, 109, 110, 111, 112, 113, 114, 115, 119, 125, 130, 132, 138, 141, 142, 144, 152, 155, 158, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 234, 236, 244, 248, 250, 280, 284, 286, 299, 305, 333, 343, 347, 353, 358, 359, 360, 406, 409, 423, 424, 429, 447, 448, 449, 452, 454, 455, 457, 458, 459, 462, 463, 464, 465, 466, 469], "oracl": 464, "orchestr": [449, 454], "order": [215, 221, 420, 429, 445, 446, 448, 449, 454, 455, 460, 463, 467], "ordin": 466, "org": [278, 323, 360, 423, 446, 451], "organ": 449, "origin": [26, 31, 157, 317, 318, 328, 347, 356, 365, 438, 445, 448, 449, 451, 461, 463, 465], "originalhtml": 423, "originalstyl": 423, "originalwidth": 423, "orthogon": 449, "oserror": 447, "other": [53, 116, 157, 213, 318, 347, 404, 406, 408, 409, 411, 412, 420, 427, 429, 436, 442, 443, 445, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 467, 469], "otherwis": [45, 61, 137, 138, 139, 141, 142, 144, 151, 152, 155, 365, 388, 451, 452, 457, 459, 467], "our": [403, 414, 416, 419, 420, 421, 424, 426, 427, 429, 432, 434, 435, 436, 439, 440, 442, 443, 446, 449, 452, 454, 455, 457, 463, 464], "out": [221, 431, 443, 446, 451, 456, 459, 464, 467], "out_par": 432, "out_y0": 432, "out_y1": 432, "outcom": [178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 405, 446, 453, 460, 466], "outlier": 347, "output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 97, 119, 122, 125, 130, 132, 253, 255, 257, 262, 266, 280, 282, 284, 286, 347, 355, 356, 357, 403, 432, 442, 443, 447, 448, 450, 453, 464, 468], "output_label": 356, "outputscal": 119, "outputscale_initial_valu": 119, "outputscale_prior": 119, "outsid": [31, 157, 185, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 308, 309, 353, 431, 448, 463], "outstand": 451, "over": [31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 213, 248, 426, 445, 448, 452, 454, 456, 457, 467], "overal": [215, 423, 424, 426, 427, 429, 448, 449, 454, 459, 467], "overhead": 456, "overlap": [64, 65, 157, 411, 412, 455], "overrid": [234, 236, 419, 448], "overridden": [419, 449], "overview": [446, 463], "overwritten": 436, "own": [188, 403, 427, 446, 447, 448, 449, 451, 455, 460], "owner": 451, "ownership": 451, "p": [403, 404, 405, 406, 408, 409, 411, 412, 419, 421, 435, 442, 443, 449, 457, 458, 465, 469], "p1": [462, 463, 464], "p1_json": 463, "p1_via_json": 463, "p2": [462, 463, 464], "p2_json": 463, "p2_via_json": 463, "p3c4": [404, 405, 406], "p_cont": 462, "p_disc": 462, "p_g1_amount": 427, "p_g2_amount": 427, "p_g3_amount": 427, "p_i": 34, "pack": 463, "packag": [97, 149, 311, 447, 448, 449, 460, 464, 465, 469], "page": [423, 446, 448, 449, 457], "pair": [317, 432, 446, 460], "pairwis": 347, "pairwise_dist": 347, "pam": [205, 347], "pamclusteringrecommend": 461, "panda": [52, 222, 240, 241, 246, 342, 347, 367, 403, 404, 405, 406, 411, 412, 414, 420, 421, 426, 427, 431, 432, 435, 436, 442, 443, 448, 453, 455, 456, 460, 462, 463, 464], "panic": 445, "paper": 467, "paper_fil": 467, "parallel": [248, 448, 449, 468], "parallel_run": [248, 456], "param": [347, 422, 423, 444], "param1": [462, 464], "param2": [462, 464], "param_1": 453, "param_2": 453, "param_bounds_comp": 448, "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 68, 85, 89, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 130, 132, 137, 138, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 217, 220, 221, 222, 223, 226, 227, 228, 234, 236, 238, 242, 244, 246, 248, 250, 253, 255, 257, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 288, 290, 292, 294, 297, 299, 305, 307, 308, 309, 313, 314, 317, 318, 326, 327, 328, 331, 333, 336, 337, 338, 341, 342, 343, 347, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 375, 380, 381, 382, 384, 385, 388, 389, 391, 400, 401, 403, 408, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 423, 429, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 446, 448, 449, 455, 456, 457, 459, 463, 464, 465, 467, 468], "parameter": [169, 170, 171, 172, 173, 174, 175], "parameter_json": 463, "parameter_nam": [213, 215, 221, 436], "parameter_names_in_cardinality_constraint": 213, "parameterencod": [138, 146, 147, 149, 152], "parametr": 455, "paramnam": 423, "paramprefix": 423, "parent": 449, "parentel": 423, "pareto": [12, 130, 430, 444, 446, 448, 459], "paretoobject": [432, 446, 448, 453, 458, 468], "park": 347, "pars": [373, 448], "parser": 448, "part": [15, 26, 31, 40, 73, 189, 213, 215, 221, 353, 401, 424, 436, 439, 440, 442, 443, 448, 449, 451, 452, 453, 454, 455, 460, 461, 462, 463, 469], "parti": [345, 451, 464], "partial": [26, 420, 446, 448, 468], "particl": 467, "particular": [31, 221, 242, 419, 432, 436, 445, 446, 447, 449, 451, 454, 459, 460, 462, 463, 464], "particularli": [333, 454], "partit": [205, 248, 250, 448, 461, 464], "partitionexplain": [95, 98], "pass": [31, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 97, 155, 203, 204, 205, 206, 215, 221, 232, 266, 280, 284, 286, 347, 357, 363, 426, 438, 443, 448, 449, 453, 457, 458, 459, 460, 463], "passthrough": [28, 123, 217, 270], "past": 423, "patch": [420, 448], "patent": 451, "path": [88, 405, 426, 448, 449, 456, 469], "pattern": [149, 449, 467], "patternfingerprint": 149, "pd": [31, 194, 196, 246, 260, 317, 318, 361, 403, 404, 405, 406, 411, 412, 414, 420, 421, 426, 427, 431, 432, 435, 436, 442, 443, 448, 453, 455, 457, 460, 462, 463, 464], "pdf": 467, "peek": 463, "pend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 446, 448, 468], "pending_experi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 448, 453, 454], "per": [244, 260, 404, 405, 406, 409, 426, 431, 435, 442, 443, 448, 460, 462, 464], "percent": [244, 451], "percentag": [196, 313, 355, 409, 414, 415, 416, 417, 426, 431, 438, 443, 461], "perf_count": 419, "perfectli": 463, "perform": [196, 244, 313, 347, 362, 405, 414, 415, 416, 417, 421, 426, 439, 442, 443, 445, 446, 448, 449, 451, 452, 453, 454, 456, 458, 460, 461, 464, 465, 467], "period": 110, "period_length_initial_valu": 110, "period_length_prior": 110, "periodickernel": 448, "perm_inv_constraint": 426, "perman": 468, "permiss": [446, 451], "permut": [53, 56, 57, 318, 448, 455], "permutation_invari": 53, "permutationexplain": [95, 98], "perpetu": 451, "persist": [448, 450, 454, 456, 463, 465], "perspect": 463, "pertain": 451, "pharmacophor": 149, "pharmacophorefingerprint": 149, "phase": [186, 427], "phaseagent1": 427, "phaseagent2": 427, "phcpho": [404, 405, 406, 408, 409], "phenomenon": 454, "philosophi": 463, "physic": [458, 464], "physiochemicalproperti": 149, "physiochemicalpropertiesfingerprint": 149, "pi": [7, 409, 420, 421], "pi_max": 421, "pi_per_iter": 421, "pi_required_fract": 420, "pi_threshold": 420, "pick": 347, "pickl": 448, "pictur": 446, "piec": [429, 446, 454, 455], "piecewis": 111, "piecewisepolynomialkernel": 448, "pin": [26, 448], "pin_discret": 26, "pinned_part": 26, "pip": [446, 448, 449, 458, 469], "pipelin": [347, 442, 443, 448, 449], "pival": [404, 405, 406, 408, 409], "pl": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59], "place": [13, 16, 34, 246, 353, 354, 355, 423, 424, 426, 429, 447, 448, 449, 451, 454, 457, 460, 463, 467], "placehold": 320, "plai": [454, 458, 466], "plain": 270, "plainkernelfactori": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 266], "plan": [261, 457, 460], "platt": 467, "pleas": [347, 423, 424, 446, 452, 458, 461], "plenti": 458, "plot": [97, 99, 244, 404, 406, 432, 443, 448, 465, 467, 468], "plot_abegin_convert_pipelin": 378, "plot_ebegin_float_doubl": 378, "plot_kmedoids_digit": 347, "plot_typ": 97, "plt": [404, 406, 421, 432], "plu": [246, 446], "plugin": 448, "pm": [5, 409], "png": [404, 406], "po16": 460, "poetri": 448, "point": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 30, 31, 97, 152, 157, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 347, 362, 377, 378, 386, 387, 388, 389, 393, 404, 408, 409, 420, 427, 432, 435, 436, 442, 443, 445, 446, 448, 450, 452, 453, 454, 457, 458, 459, 461, 462, 468, 469], "points_per_dim": [421, 435, 436, 442, 443], "polar": [38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 223, 347, 446, 448, 450, 468, 469], "poli": 421, "polici": 429, "polycollect": 421, "polym": 460, "polynomi": [111, 112], "polynomialkernel": 448, "polytop": 448, "popul": 426, "popular": [458, 460, 465], "posit": [13, 16, 97, 333, 388, 448, 455, 458, 459], "possibl": [31, 44, 158, 213, 221, 222, 223, 242, 333, 347, 353, 406, 420, 421, 426, 431, 446, 448, 451, 453, 454, 455, 456, 457, 460, 461, 462, 463, 464, 466, 467, 469], "possibli": [448, 453, 454], "post": [459, 460], "post_hook": [333, 419, 420, 421], "posterior": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 194, 196, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 289, 409, 448, 452, 465], "posterior_mean": [253, 429], "posterior_mod": 253, "posterior_stat": [31, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 448, 454], "posteriorlist": 260, "posteriorstandarddevi": [429, 448, 452], "postprocess": 342, "potassium": [404, 405, 406, 408, 409], "potenti": [215, 446, 447, 448, 449, 454, 455, 458, 459, 462, 469], "power": [112, 451, 455, 461], "pp": 347, "pph3": [404, 405, 406], "pr": [448, 449], "practic": [452, 458, 461], "pre": [158, 184, 269, 422, 447, 448, 449], "pre_hook": [333, 419], "preced": 456, "precis": [57, 184, 213, 313, 366, 378, 379, 394, 448, 468], "precomput": [144, 347], "predefin": [454, 461], "predict": [31, 81, 206, 253, 255, 257, 262, 266, 280, 282, 284, 286, 347, 446, 448, 452, 453, 459, 464, 465, 467, 468], "predictor": 288, "prefer": [31, 451, 457, 459, 463], "prefix": [343, 423], "preliminari": 467, "prepar": [421, 449, 451, 469], "preprocess": 448, "presenc": [196, 447, 448], "present": [31, 72, 97, 122, 125, 130, 132, 215, 317, 318, 333, 347, 408, 429, 448, 455, 464, 469], "preset": [266, 273, 276, 278, 448], "pressur": [416, 423, 424, 438, 439, 440, 446, 455], "pretrain": [262, 422, 444], "pretti": 366, "pretty_print_df": [426, 448], "prevent": [157, 231, 232, 333, 447, 448, 449], "previou": [184, 420, 421, 448, 454, 456, 467], "previous": [31, 313, 404, 405, 406, 408, 416, 453, 454], "price": 460, "primari": 454, "primarili": 452, "principl": [426, 429, 465], "print": [246, 351, 366, 404, 405, 406, 408, 409, 411, 412, 416, 419, 420, 423, 424, 426, 427, 429, 434, 435, 436, 438, 439, 440, 446, 448, 462, 469], "print_parameter_names_hook": 419, "printer_inst": 419, "prior": [108, 109, 110, 111, 112, 113, 114, 115, 119, 169, 170, 171, 172, 173, 174, 175, 253, 276, 417, 446, 447, 448], "priori": [455, 463, 467], "privat": [448, 450], "probabilist": 452, "probability_of_improv": 421, "probabilityofimprov": [420, 421], "probabl": [7, 19, 21, 409, 418, 420, 444, 448], "problem": [76, 426, 427, 429, 442, 443, 448, 449, 454, 459, 463], "problemat": [337, 447, 460], "proce": [244, 408, 453, 456], "procedur": [452, 467], "proceed": 467, "process": [31, 102, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 361, 388, 409, 419, 426, 429, 442, 443, 448, 449, 452, 453, 454, 455, 456, 457, 459, 460, 463, 467], "prod": 417, "prod_constraint": 417, "prod_i": 459, "produc": [122, 125, 126, 130, 132, 246, 446, 448, 449, 456, 464], "product": [58, 118, 215, 221, 222, 223, 329, 413, 444, 446, 448, 451, 455, 457, 468, 469], "product_paramet": [221, 426, 462], "productkernel": 448, "programmat": 426, "progress": [31, 182, 421, 448, 457], "prohibit": 452, "project": [421, 446, 448, 456], "promin": 451, "promis": [420, 453], "proper": 448, "properli": [26, 431, 447, 448, 462], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 215, 216, 220, 221, 253, 255, 257, 260, 262, 266, 269, 273, 276, 278, 280, 282, 284, 286, 297, 299, 302, 303, 305, 322, 323, 371, 387, 391, 448, 449, 455, 457, 460], "proport": 443, "propos": 454, "protobuf": 448, "protocol": [177, 178, 258, 268, 337, 448], "prototyp": 450, "provid": [13, 15, 16, 31, 45, 97, 101, 126, 144, 155, 158, 178, 184, 185, 188, 189, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 234, 238, 242, 244, 246, 248, 250, 253, 255, 257, 262, 266, 276, 278, 280, 282, 284, 286, 317, 329, 333, 347, 349, 354, 355, 360, 363, 367, 388, 389, 403, 404, 405, 406, 419, 424, 426, 432, 434, 435, 436, 439, 442, 443, 446, 448, 449, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "prune": [12, 13, 14, 16, 17], "prune_baselin": [12, 13, 14, 16, 17], "pstd": [6, 448, 452], "pubchem": 149, "pubchemfingerprint": 149, "public": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 128, 130, 132, 137, 138, 139, 141, 142, 144, 146, 147, 149, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 215, 216, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 297, 299, 302, 303, 305, 320, 322, 323, 347, 371, 387, 391, 448, 449], "publicli": 451, "publish": 448, "pull": [429, 448], "punish": 8, "pure": [8, 10, 15, 179, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 215, 250, 261, 389, 435, 448, 468], "purerecommend": [181, 183, 184, 185, 186, 188, 194, 201, 448], "purpl": 432, "purpos": [15, 419, 420, 423, 429, 446, 447, 449, 451, 454, 457, 463, 469], "push": [44, 449], "put": [426, 429, 456, 460], "puzzl": 446, "py": [278, 347, 414, 416, 417, 448, 456], "py313": 449, "pyarrow": 448, "pydant": 448, "pydoclint": [448, 449], "pydocstyl": 449, "pylint": 448, "pymatgen": 447, "pypi": [446, 448], "pyplot": [404, 406, 421, 432], "pyproject": 448, "pytest": [448, 449], "python": [30, 323, 334, 405, 424, 439, 440, 446, 447, 448, 449, 454, 456, 463], "python310": 447, "pytorch": 448, "pyupgrad": 448, "q": [111, 288, 289, 409, 453], "qei": [9, 409, 439, 440, 448], "qkg": [10, 448], "qlogei": [11, 409, 448], "qlogexpectedimprov": 409, "qlognehvi": [13, 16], "qlognei": [14, 448], "qlognoisyexpectedhypervolumeimprov": [448, 459], "qlognparego": 448, "qnegintegratedposteriorvari": 452, "qnehvi": 16, "qnei": [17, 448], "qnipv": [15, 448, 452], "qnoisyexpectedhypervolumeimprov": 448, "qpi": [19, 409], "qposteriorstandarddevi": 452, "qpstd": [18, 448, 452, 454], "qsimpleregret": 21, "qsr": [20, 448], "qt": 21, "qthompsonsampl": [429, 448], "quadrat": [115, 403, 432], "qualiti": 449, "quantif": 467, "quantifi": [429, 452, 467], "quantil": [31, 253, 255, 256, 257, 262, 266, 280, 282, 284, 286, 454], "quantiti": [31, 55, 454, 456, 458, 459, 465, 469], "quantum": 144, "qucb": [22, 409, 448, 452], "queri": [179, 189, 242, 244, 246, 432, 446, 454, 456, 457, 464], "queryselectoral": 423, "question": [449, 454, 467], "quick": 453, "quickli": 455, "qupperconfidencebound": 452, "qvarucb": 448, "r": [44, 404, 405, 406, 408, 409], "radial": 113, "radiu": [149, 448, 460], "rais": [13, 15, 16, 31, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 97, 101, 126, 134, 157, 158, 163, 164, 184, 185, 213, 215, 221, 227, 228, 231, 232, 244, 246, 250, 253, 255, 257, 261, 262, 263, 266, 280, 282, 284, 286, 294, 318, 331, 333, 336, 338, 341, 349, 350, 351, 353, 354, 355, 357, 362, 363, 364, 388, 389, 400, 401, 419, 420, 421, 436, 447, 448, 449, 453, 461], "rand": 423, "random": [15, 114, 208, 213, 215, 244, 246, 248, 285, 286, 347, 353, 387, 388, 389, 403, 404, 405, 406, 409, 420, 421, 423, 427, 429, 432, 443, 446, 448, 452, 460, 461, 464, 469], "random_campaign": 403, "random_forest": [286, 409], "random_se": [244, 248, 420, 464], "random_st": 347, "random_tie_break": [209, 388, 448], "randomforestmodel": 424, "randomforestregressor": 286, "randomforestsurrog": [409, 448, 465], "randomli": [196, 210, 388, 403, 405, 432, 452, 458, 461], "randomrecommend": [403, 404, 405, 406, 409, 414, 415, 416, 417, 419, 420, 421, 427, 429, 431, 448, 453, 461], "randomst": 347, "rang": [44, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 297, 353, 354, 403, 411, 412, 414, 415, 416, 417, 421, 426, 429, 431, 434, 435, 436, 443, 446, 448, 455, 462, 463, 464, 466, 469], "rank": 466, "rare": 448, "rastrigin": [411, 412, 435, 436], "rate": [170, 253, 429], "rather": [438, 447, 452, 463], "ration": 115, "ravel": [432, 442, 443], "raw": [196, 463], "rbf": 113, "rbfkernel": 448, "rdf": 149, "rdffingerprint": 149, "rdkit": [149, 414, 416, 417, 448, 455, 460], "rdkit2ddescriptor": [149, 405, 414, 416, 417, 448], "rdkit2ddescriptorsfingerprint": 149, "rdkitfingerprint": 149, "re": [420, 435, 436, 449, 461], "reach": [307, 309, 431], "reachabl": 456, "reactant": [458, 460], "reaction": [405, 408, 446, 455, 458, 460, 467], "reactor": [453, 467], "reactora": 467, "reactorb": 467, "reactorc": 467, "read": [144, 215, 347, 405, 408, 446, 448, 449], "read_csv": [404, 405, 420], "read_excel": 406, "readabl": [220, 366, 375, 438, 448, 450, 451, 463], "readi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 244, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 449, 453], "readm": [448, 449], "reagent": [455, 460], "real": [371, 446, 454, 466], "realist": 464, "realiz": [242, 464], "reason": [42, 203, 204, 205, 206, 405, 435, 448, 451, 452, 453, 455, 456, 460, 464], "reassembl": 463, "rebas": 449, "rec": [414, 415, 416, 417, 431, 453, 454], "rec_finish": 453, "rec_next": 453, "rec_par": 432, "rec_pend": 453, "rec_y0": 432, "rec_y1": 432, "receiv": [451, 456, 463], "recip": 449, "recipi": 451, "recommend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 73, 84, 85, 97, 138, 141, 142, 144, 152, 155, 157, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 208, 209, 210, 242, 244, 258, 260, 261, 313, 353, 355, 357, 403, 404, 405, 406, 407, 411, 412, 414, 415, 416, 417, 419, 420, 421, 427, 429, 431, 432, 439, 440, 442, 443, 444, 445, 446, 448, 449, 452, 456, 458, 460, 464, 465, 467, 468, 469], "recommendation_orig": 438, "recommendation_recr": 438, "recommended_arm_idx": 429, "recommender_with_hook": 420, "recommenderprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 97, 181, 183, 184, 185, 186, 191, 194, 196, 258, 260, 419, 421, 445, 448, 453], "reconstruct": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 371, 446, 454, 456, 463], "record": [31, 313, 314, 446, 456, 467], "recreat": [273, 438, 463], "recreate_model": 424, "recurs": [181, 183, 184, 185, 186, 326, 327], "red": [423, 432], "redesign": 448, "redistribut": 451, "reduc": [155, 421, 429, 442, 443, 457, 460], "reduct": 468, "ref": 446, "refactor": 448, "refer": [13, 16, 242, 278, 332, 347, 353, 362, 378, 404, 405, 406, 409, 411, 412, 414, 415, 416, 417, 419, 421, 423, 424, 426, 431, 435, 436, 438, 447, 448, 454, 458, 459, 460, 461, 462, 463, 464, 465, 467], "referenc": 449, "reference_point": [13, 16], "refin": [420, 446, 448, 454, 457], "reflect": [188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 421, 448, 449, 452, 455, 460], "regard": [34, 40, 411, 412, 449, 451], "regardless": 465, "regim": [448, 458], "region": 159, "regist": [333, 418, 420], "register_custom_architectur": 448, "register_hook": [418, 419, 420, 421, 448], "registr": 448, "regress": 280, "regressor": 423, "regret": [20, 21], "regroup": 448, "regular": [21, 157, 290, 423, 434, 447, 448, 453, 467], "reinstal": 446, "rel": [13, 16, 44, 244, 354, 455, 459], "relat": [55, 122, 125, 127, 130, 132, 145, 215, 233, 301, 316, 436, 442, 443, 445, 446, 448, 454, 455, 456, 467], "relationship": [442, 443, 446, 449, 459, 467], "relative_perc": 355, "relative_threshold": [44, 448, 455], "releas": [446, 448], "relev": [53, 97, 246, 362, 363, 364, 415, 426, 448, 449, 454, 455, 457, 467, 469], "reli": [447, 448, 459], "reliabl": 460, "reloc": 448, "remain": [56, 157, 186, 250, 308, 403, 409, 414, 415, 416, 417, 426, 429, 431, 436, 438, 442, 443, 451, 460, 463, 464], "remain_switch": [186, 448], "remaind": 389, "remind": 448, "remot": 449, "remov": [52, 55, 56, 215, 221, 426, 449, 455, 462], "renam": [405, 442, 443, 448, 449], "render": [97, 423], "reoccur": 467, "reorder": 448, "reorgan": 448, "repeat": [429, 448, 449, 453, 454], "repetit": [248, 409, 420], "rephras": 455, "replac": [423, 435, 436, 448, 449], "replic": [253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 448, 459, 463, 468], "repo": 448, "report": [178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 429, 447], "repositori": [405, 446, 449], "repr": 423, "repres": [13, 16, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 117, 118, 144, 215, 250, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 349, 367, 371, 375, 388, 403, 426, 427, 429, 432, 439, 440, 446, 448, 451, 454, 459, 460, 462, 464, 469], "represent": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 238, 253, 255, 257, 258, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 338, 340, 349, 351, 353, 366, 371, 414, 415, 416, 417, 423, 425, 431, 438, 448, 453, 454, 460, 463, 464, 468, 469], "reproduc": [420, 429, 432, 448, 451, 468], "reproduct": 451, "request": [31, 84, 85, 126, 184, 185, 186, 228, 253, 255, 256, 257, 262, 266, 269, 280, 282, 284, 286, 311, 357, 388, 389, 432, 445, 448, 453, 454, 457, 458], "requir": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 45, 51, 82, 97, 186, 221, 294, 333, 408, 419, 420, 423, 427, 429, 431, 435, 439, 445, 446, 447, 448, 449, 451, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469], "rerun": 423, "reserv": [446, 449], "reset": [31, 453], "reset_index": [442, 453], "reshap": 432, "resolut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 415, 417, 426, 463], "resolv": 342, "resort": [290, 449, 463, 469], "resource_track": 447, "resp": [216, 406, 436], "respect": [31, 196, 216, 244, 248, 312, 317, 353, 426, 427, 449, 454, 455, 457, 458, 459, 463, 464, 465, 466, 469], "respond": 445, "respons": [181, 183, 184, 185, 186, 451, 454, 461], "restart": [184, 196], "restor": 463, "restr": 21, "restrain": 460, "restrict": [215, 221, 242, 248, 250, 414, 427, 448, 457, 464, 467, 468], "result": [10, 13, 16, 31, 155, 157, 221, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 353, 361, 404, 405, 406, 408, 423, 424, 426, 427, 429, 431, 432, 434, 442, 443, 446, 448, 450, 451, 452, 454, 455, 456, 458, 460, 461, 463, 464, 467, 468, 469], "result_baselin": [442, 443], "result_fract": 443, "results_interrupt": 420, "results_uninterrupt": 420, "retain": [451, 455], "retrain": [261, 262, 465], "retriev": [215, 242, 325, 326, 327, 341, 448, 449, 464], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 97, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 126, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 198, 201, 203, 204, 205, 206, 209, 210, 213, 215, 217, 218, 221, 222, 223, 224, 226, 227, 228, 231, 232, 234, 235, 236, 238, 240, 241, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 263, 266, 269, 270, 274, 280, 282, 284, 286, 288, 289, 290, 292, 294, 297, 299, 305, 307, 308, 309, 311, 312, 313, 314, 317, 318, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 340, 341, 342, 343, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 375, 380, 381, 382, 388, 389, 391, 396, 397, 398, 399, 400, 401, 403, 414, 420, 421, 423, 426, 429, 432, 442, 448, 454, 455, 464, 465, 469], "return_std": 423, "reus": [186, 448], "reuse_last": 184, "reveal": [421, 427, 443], "review": 449, "revis": [448, 451], "reward": [8, 429], "rework": 448, "rewrit": 448, "rff": 114, "rffkernel": 448, "rh": [45, 47, 48, 411, 412, 427, 455], "right": [45, 175, 362, 371, 404, 406, 415, 429, 446, 447, 449, 451, 455, 457, 459, 460, 466], "right_df": 362, "rihana": 450, "rim": 450, "risk": [8, 447, 451, 454], "roam": 447, "robust": [347, 446, 448, 467], "robustli": 290, "role": [448, 449, 454, 458, 459, 464, 466, 468], "room": [421, 454], "root": [405, 446, 449, 455], "round": [366, 411, 423, 424, 455], "roundtrip": [448, 463], "rout": [347, 463], "routin": 44, "row": [13, 16, 38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 126, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 246, 313, 317, 318, 347, 354, 357, 361, 362, 364, 366, 382, 404, 406, 414, 415, 416, 417, 426, 427, 431, 438, 448, 453, 454, 457, 462, 464], "rowei": 467, "roya": 450, "royalti": 451, "rq": 115, "rqkernel": 448, "ruff": [448, 449], "rule": [419, 448], "run": [244, 248, 404, 405, 406, 420, 421, 442, 443, 446, 447, 448, 449, 454, 457, 460, 463, 464, 468, 469], "run_full_initial_data": 404, "run_impute_mod": 406, "runner": [248, 414, 416, 417, 456], "runtim": [378, 447, 453], "runtimeerror": [184, 419], "rv": 429, "s3": 448, "s41586": [278, 360], "safe": [448, 449, 454], "safeti": 333, "sai": 455, "said": 449, "sake": 426, "same": [55, 134, 186, 221, 227, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 328, 409, 420, 423, 424, 426, 429, 432, 438, 447, 448, 455, 456, 457, 463, 464, 465, 467], "sampl": [10, 15, 21, 44, 196, 208, 209, 210, 213, 314, 347, 386, 387, 388, 389, 404, 409, 414, 415, 416, 417, 429, 431, 432, 434, 438, 443, 446, 448, 450, 458, 468], "sample_from_full_factori": [213, 448], "sample_inactive_paramet": 44, "sample_uniform": [213, 432, 434, 448, 464], "sampler": [409, 414, 415, 416, 417, 431, 438], "samples_full_factori": [213, 448], "samples_random": [213, 448], "sampling_algorithm": [209, 387, 452], "sampling_fract": [15, 452], "sampling_method": [15, 452], "sampling_n_point": [15, 452], "sampling_percentag": [196, 461], "satisfi": [40, 41, 42, 221, 411, 412, 426], "save": [404, 406, 423, 448, 464], "savefig": [404, 406, 432], "sca": 432, "scalar": [12, 125, 431, 446, 448, 454, 459, 463], "scale": [119, 171, 172, 173, 174, 175, 213, 215, 221, 347, 391, 431, 432, 442, 448, 452, 459], "scalekernel": 448, "scaler": 448, "scaling_bound": [213, 215, 221], "scatter": [97, 99], "scenario": [250, 403, 404, 405, 406, 420, 426, 442, 443, 453, 455, 459, 467, 468, 469], "scene": [459, 464, 465], "schema": 454, "schembl15068049": [404, 405, 406], "scheme": [448, 455], "scienc": [446, 450], "scientif": [448, 467], "scikit": [149, 347, 446, 448, 450, 460], "scipi": [382, 421, 429, 448], "scm": 448, "scope": 403, "screen": [328, 467], "script": [342, 423, 447, 448, 456, 469], "seaborn": [403, 404, 405, 406, 420, 442, 443], "seamlessli": 463, "search": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 38, 52, 55, 68, 73, 85, 89, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 221, 225, 244, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 313, 362, 363, 403, 406, 408, 410, 413, 414, 415, 416, 417, 419, 420, 421, 429, 431, 433, 438, 443, 448, 450, 453, 454, 455, 456, 457, 458, 461, 463, 464, 468], "searchspac": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 97, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 216, 220, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 403, 405, 408, 419, 420, 421, 423, 424, 426, 427, 429, 432, 434, 438, 439, 440, 442, 444, 446, 448, 454, 455, 456, 457, 458, 460, 462, 463, 464, 469], "searchspace1": 434, "searchspace2": 434, "searchspace3": 434, "searchspace_ful": 457, "searchspace_json": 463, "searchspace_reduc": 457, "searchspacetyp": [188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 215, 409, 414, 415, 416, 417, 420, 421, 431, 438, 462], "secfp": 149, "secfpfingerprint": 149, "second": [361, 380, 382, 423, 424, 431, 432, 440, 442, 455, 456, 458], "secondari": [446, 456], "section": [446, 448, 449, 451, 463], "see": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 35, 36, 37, 38, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 89, 97, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 165, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 220, 221, 244, 248, 250, 253, 255, 257, 258, 260, 262, 266, 269, 276, 278, 280, 282, 284, 286, 297, 299, 305, 310, 331, 337, 347, 355, 361, 368, 371, 391, 404, 405, 406, 411, 412, 419, 420, 424, 427, 436, 445, 446, 449, 453, 454, 456, 457, 458, 459, 460, 463, 464, 468], "seed": [244, 248, 384, 385, 420, 421, 429, 432, 446, 448, 469], "seek": [431, 459], "seem": [378, 440, 447], "seen": 452, "select": [6, 40, 41, 42, 70, 74, 82, 181, 183, 184, 185, 186, 189, 196, 206, 208, 209, 253, 255, 257, 262, 266, 280, 282, 284, 286, 308, 347, 361, 388, 409, 415, 416, 426, 427, 429, 436, 446, 448, 452, 454, 455, 458, 460, 461, 463, 465], "select_recommend": [181, 183, 184, 185, 186, 448], "selectivity_mean": 454, "selectivity_mod": 454, "selectivity_q_0": 454, "selectivity_std": 454, "self": [333, 347, 350, 396, 397, 398, 399, 419, 420, 421, 429, 449], "sell": 451, "semant": [448, 463], "sens": [57, 130, 333, 337, 361, 455, 460, 465], "sent": 451, "sentinel": [321, 322], "separ": [248, 250, 290, 331, 347, 391, 392, 421, 445, 448, 449, 451, 453, 458, 463], "sequenc": [31, 41, 45, 117, 118, 125, 130, 141, 142, 144, 155, 163, 184, 185, 213, 215, 221, 222, 223, 226, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 313, 317, 318, 333, 334, 343, 350, 356, 362, 363, 368, 454, 459, 461], "sequenti": [183, 184, 185, 186, 196, 409, 414, 415, 416, 417, 431, 438, 448, 461], "sequential_continu": [196, 448, 461], "sequential_greedy_x": 448, "sequentialgreedyrecommend": 448, "sequentialmetarecommend": [185, 461], "sequentialstrategi": 448, "seri": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 40, 41, 42, 52, 138, 141, 142, 144, 152, 155, 194, 196, 297, 299, 305, 414, 426, 448, 455, 457], "serial": [185, 221, 238, 314, 423, 444, 447, 448, 449, 455, 461, 468], "serializ": [446, 455, 461], "serialize_datafram": 463, "serialized_df": 240, "serializetostr": 423, "serialmixin": [24, 31, 35, 40, 106, 122, 139, 167, 181, 213, 215, 221, 257, 260, 269, 297, 299, 305, 371, 448], "serv": [250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 362, 442, 443, 454, 455, 460], "servic": 451, "session": [456, 463], "set": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 42, 44, 55, 57, 64, 65, 97, 101, 155, 178, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 244, 248, 273, 312, 347, 353, 360, 361, 384, 385, 404, 405, 406, 407, 409, 414, 416, 419, 424, 425, 426, 427, 429, 431, 436, 445, 446, 448, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469], "set_box_aspect": 421, "set_dash": 420, "set_output": 347, "set_param": 347, "set_random_se": [421, 429, 432, 469], "set_size_inch": [404, 406], "set_x_pend": 26, "set_xlabel": 421, "set_xtick": 421, "set_xticklabel": 421, "set_ylabel": 421, "set_ylim": 421, "set_zlabel": 421, "setattribut": 423, "setpoint": 152, "settimeout": 423, "setup": [244, 420, 455, 464, 469], "setuptool": 448, "sever": [63, 158, 179, 403, 405, 409, 420, 423, 429, 431, 434, 443, 446, 448, 449, 453, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 469], "sh": 458, "shall": [184, 355, 451, 459], "shap": [97, 446, 448, 450, 465, 468], "shap_valu": 465, "shape": [21, 213, 220, 303, 307, 309, 347, 388, 432, 448, 462, 469], "shapinsight": [95, 96, 98, 99, 448, 458], "shaplei": 97, "share": [253, 255, 257, 262, 266, 280, 282, 284, 286, 448, 451, 467], "shield": [278, 360, 405, 446, 460], "shift": 442, "shifted_hartmann": 442, "ship": [392, 456, 463], "shm": 447, "short": 449, "shortcut": [221, 462, 463], "shorten": [448, 449], "shot": 467, "should": [31, 44, 53, 97, 155, 186, 236, 248, 302, 317, 318, 347, 353, 355, 359, 360, 366, 370, 371, 372, 380, 414, 416, 420, 423, 426, 427, 436, 440, 446, 448, 449, 453, 454, 455, 458, 462, 464, 465, 467, 469], "show": [97, 404, 405, 406, 408, 409, 414, 415, 416, 423, 424, 426, 429, 436, 438, 439, 440, 442, 443, 455, 458], "showcas": 461, "shown": [420, 429, 443, 448, 454], "shrink": 421, "shutdown": 447, "side": [45, 157, 308, 448], "sigma": [172, 173, 174, 175, 307, 431, 450], "signal": [67, 459], "signatur": [91, 294, 331, 333, 421, 448, 449, 455, 463], "significantli": [221, 429, 442, 443, 455, 456], "silenc": 449, "silent": [448, 455], "similar": [185, 447, 448, 455, 456, 458, 460, 461, 462, 463, 467, 469], "similarli": [432, 460], "simpl": [20, 21, 323, 347, 405, 419, 420, 427, 446, 448, 453, 454, 461, 464, 466, 467], "simpler": [449, 463], "simplest": [462, 465], "simplex": [221, 468], "simplex_paramet": [221, 426, 462], "simpli": [337, 419, 420, 449, 455, 457, 459, 460, 461, 462, 463, 466, 467], "simplic": 333, "simplifi": 449, "simul": [86, 355, 416, 421, 446, 448, 467, 468], "simulate_experi": [248, 250, 464], "simulate_scenario": [250, 403, 404, 405, 406, 420, 442, 443, 448, 456, 464], "simulate_transfer_learn": [442, 464], "simulationresult": 429, "simultan": [459, 465], "sinc": [57, 157, 215, 261, 333, 347, 404, 411, 412, 424, 435, 438, 439, 440, 442, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 463, 464, 465, 467], "singer": 467, "singl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 40, 53, 97, 132, 157, 213, 215, 221, 244, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 297, 299, 305, 351, 371, 379, 388, 394, 404, 405, 406, 415, 420, 426, 431, 442, 443, 446, 448, 454, 455, 456, 457, 458, 459, 460, 462, 465, 467, 468], "single_lin": 351, "single_y0": 432, "single_y1": 432, "singledispatch": 373, "singletargetobject": [31, 297, 299, 305, 404, 405, 406, 408, 409, 414, 415, 416, 417, 420, 423, 424, 438, 439, 440, 446, 448, 465, 468], "site": 447, "situat": [97, 157, 388, 414, 416, 426, 447, 449, 453, 455, 459, 460, 463, 464, 467], "six": [426, 427], "size": [21, 104, 105, 106, 109, 111, 113, 114, 115, 184, 186, 215, 220, 221, 314, 375, 421, 423, 429, 435, 436, 442, 443, 454, 463, 464, 467, 469], "sk": 423, "skeleton": 448, "skfp": 149, "skicit": 448, "skin": 464, "skip": [218, 224, 448, 454], "skl2onnx": 423, "sklearn": [206, 378, 423], "sklearnclusteringrecommend": [203, 204, 205, 448, 453], "slightli": [242, 405, 426, 464], "slot": [425, 429, 444, 448, 455], "slot1_amount": 426, "slot1_label": 426, "slot2_amount": 426, "slot2_label": 426, "slot3_amount": 426, "slot3_label": 426, "slow": [414, 416, 417, 453, 462], "slower": [347, 453], "slowest": 448, "small": [315, 319, 411, 426, 442, 443, 448, 452, 460], "smaller": [31, 429, 454, 467], "smallest": [213, 347, 362, 462], "smart": 446, "smartli": 426, "smile": [155, 340, 342, 343, 446, 460], "smoke": 448, "smoke_test": [403, 404, 405, 406, 412, 414, 415, 417, 420, 421, 429, 432, 442, 443], "smooth": [109, 111, 175], "smoothedboxprior": 448, "smoother": 109, "sn": [403, 404, 405, 406, 420, 442, 443], "snippet": 456, "so": [31, 244, 261, 347, 361, 406, 420, 426, 429, 435, 436, 446, 447, 454, 455, 456, 457, 459, 460, 461, 463, 466], "softwar": [446, 451], "sola": 450, "sole": 451, "solut": [76, 454, 455, 459, 462, 463, 467], "solv": [261, 415, 416, 426, 429, 448], "solv_rdkit2ddesc": 416, "solvent": [404, 405, 406, 408, 409, 414, 415, 416, 417, 420, 424, 426, 427, 439, 440, 446, 455, 460], "solvent1": [426, 427], "solvent2": [426, 427], "solvent3": 426, "solvent4": 426, "solvent5": 426, "solvent8": 426, "solvent9": 426, "solvent_1": 455, "solvent_2": 455, "solvent_3": 455, "solvent_data": 420, "solvent_encoding1": 455, "solvent_encoding2": 455, "solvent_mordred_enc": 455, "solvent_rdkit2dd": [414, 417], "solvent_rdkit_enc": 455, "solvent_smil": 420, "solver": 464, "some": [53, 378, 404, 405, 406, 409, 414, 415, 416, 417, 420, 421, 423, 424, 426, 427, 432, 434, 435, 436, 438, 443, 448, 453, 454, 455, 456, 460, 461, 463, 464, 465, 469], "someth": [89, 440], "sometim": [455, 464], "somewhat": 456, "somewher": 454, "soon": [446, 454, 461], "sophist": [448, 457, 463], "sort": 160, "sourabh": 450, "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 126, 128, 130, 132, 134, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 151, 152, 155, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 198, 201, 203, 204, 205, 206, 208, 209, 210, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 234, 235, 236, 238, 240, 241, 244, 246, 248, 250, 253, 255, 257, 258, 260, 262, 263, 266, 268, 269, 270, 273, 274, 276, 278, 280, 282, 284, 286, 288, 289, 290, 292, 294, 297, 299, 302, 303, 305, 307, 308, 309, 311, 312, 313, 314, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 375, 380, 381, 382, 384, 385, 387, 388, 389, 391, 399, 400, 401, 446, 447, 448, 449, 451], "space": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 31, 38, 45, 52, 55, 68, 73, 79, 85, 89, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 187, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 221, 224, 225, 244, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 313, 347, 362, 388, 403, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 429, 431, 432, 433, 435, 438, 443, 444, 448, 450, 453, 455, 456, 457, 458, 460, 461, 463, 464, 468], "span": [61, 137, 138, 139, 141, 142, 144, 151, 152, 155, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 313, 419, 429, 434, 458], "spars": 347, "speak": 467, "spec": [218, 224, 235], "special": [186, 446, 447, 451, 452, 457, 467, 469], "specif": [102, 158, 165, 206, 215, 218, 231, 248, 290, 292, 325, 400, 419, 420, 435, 446, 448, 449, 454, 455, 457, 460, 461, 462, 463, 464, 465, 466, 467], "specifi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 44, 53, 90, 97, 101, 144, 155, 157, 158, 159, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 234, 235, 244, 246, 248, 258, 307, 308, 309, 317, 332, 341, 347, 353, 356, 362, 363, 388, 389, 405, 409, 411, 423, 424, 429, 431, 442, 446, 447, 448, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467], "speed": [221, 414, 416, 417, 442, 443, 456, 462], "speed_fast": 462, "speed_norm": 462, "speed_slow": 462, "speedup": [448, 467], "spell": 449, "spellcheck": 448, "sphinx": [448, 449], "split": [188, 453], "sporad": 448, "spread": 466, "sqrt": 455, "squar": [347, 429, 432, 455], "squash": 449, "stabil": [448, 456], "stabl": [102, 165, 310], "stage": [454, 455, 463], "stand": 448, "standard": [6, 18, 290, 423, 448, 454, 460], "star": 426, "start": [244, 403, 419, 420, 421, 427, 429, 432, 447, 448, 453, 460, 461, 463, 464, 467], "startup": 448, "stat": [31, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 311, 421, 427, 429, 454], "state": [181, 183, 184, 185, 186, 347, 420, 426, 445, 448, 451, 454, 457], "stateless": [429, 445, 448, 457], "statement": [366, 435, 446, 451], "static": [13, 16, 215, 221, 266, 446, 449, 467], "statist": [31, 253, 255, 256, 257, 262, 266, 280, 282, 284, 286, 314, 443, 446, 448, 456, 468], "statu": 454, "std": [31, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286], "std_threshold": 290, "stem": [447, 467], "step": [218, 224, 244, 426, 429, 445, 446, 449, 454, 459, 463, 465], "sterl": 450, "steven": 405, "still": [158, 353, 420, 429, 453, 455, 456, 458, 460, 465, 467, 469], "stop": [418, 444, 448, 449], "stop_on_pi": 420, "stoppag": 451, "storag": [454, 456, 463], "store": [26, 139, 290, 297, 347, 421, 426, 429, 446, 448, 454, 469], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 88, 89, 97, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 159, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 194, 196, 203, 204, 205, 206, 213, 215, 220, 221, 234, 238, 248, 250, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 300, 305, 307, 308, 309, 311, 314, 317, 318, 325, 331, 332, 338, 340, 342, 343, 349, 351, 353, 356, 359, 360, 364, 366, 371, 375, 381, 382, 424, 429, 439, 440, 442, 443], "straightforward": [454, 466, 467], "strategi": [15, 196, 215, 242, 403, 429, 448], "stream": [329, 448, 456], "streamingsequentialmetarecommend": [184, 461], "streamingsequentialstrategi": 448, "streamlin": 449, "streamlit": [446, 448], "streibel": 450, "strict": [293, 331], "strictli": [424, 439, 440], "stride": 411, "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 154, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 338, 342, 343, 347, 349, 350, 351, 359, 371, 423, 438, 448, 454, 455, 460, 466, 468], "strip": [244, 406], "strong": 448, "strongli": 454, "strtobool": [448, 456], "structur": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 49, 234, 446, 447, 448, 449, 450, 454, 460, 463], "studi": [179, 446, 458, 461, 468], "style": [423, 442, 448, 449], "sub": [206, 448, 458, 463], "subclass": [90, 234, 325, 327, 337, 409, 448, 449, 461, 463], "subfold": 456, "subgraph": 460, "subgroup": 427, "subject": 451, "sublicens": 451, "submiss": [448, 451], "submit": [26, 311, 313, 446, 449, 451], "subobject": 347, "subpackag": [448, 449, 464], "subplot": 432, "subselectioncondit": [415, 416, 448, 457, 468], "subsequ": [186, 215, 221, 248, 342, 445, 451, 454, 463, 465], "subset": [31, 122, 125, 130, 132, 155, 215, 328, 363, 388, 454, 455, 457, 460], "subspac": [26, 61, 188, 196, 212, 213, 215, 217, 219, 221, 411, 414, 415, 416, 417, 431, 434, 436, 438, 448, 455, 461, 463, 468, 469], "subspace_continu": 61, "subspace_json": 463, "subspacecontinu": [31, 61, 137, 151, 215, 217, 434, 448, 462], "subspacediscret": [31, 138, 141, 142, 144, 152, 155, 215, 217, 220, 414, 415, 416, 417, 426, 431, 438, 448, 462, 463, 469], "substanc": [149, 155, 341, 405, 408, 414, 416, 417, 427, 448, 455, 458, 460, 467], "substance_12": 455, "substance_3": 455, "substance_43": 455, "substance_data": 448, "substance_encod": 405, "substanceencod": [155, 341, 343, 414, 415, 416, 417, 448, 460], "substanceparamet": [404, 405, 406, 408, 409, 414, 415, 416, 417, 420, 424, 426, 439, 440, 446, 448, 455, 456, 458, 462, 468], "substanti": [155, 469], "substrat": 467, "subtyp": 463, "success": [299, 388, 429, 463], "success_valu": 299, "suffic": 449, "suffici": [347, 420, 462, 463], "suggest": [458, 464], "suit": 449, "suitabl": [206, 221, 244, 338, 347, 449, 452, 454, 460, 464, 465, 467], "sum": [59, 117, 221, 347, 403, 413, 414, 415, 416, 420, 426, 427, 429, 432, 444, 455, 459, 462], "sum_": [455, 459], "sum_constraint": 426, "sum_constraint_1": 417, "sum_constraint_2": 417, "sum_toler": 426, "summar": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155, 297, 299, 305], "summari": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155, 297, 299, 305, 448, 449], "superior": 452, "supersed": 451, "suppli": 347, "support": [10, 31, 95, 96, 97, 98, 99, 185, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 378, 409, 414, 415, 416, 417, 420, 421, 423, 426, 431, 438, 446, 448, 449, 450, 451, 455, 458, 460, 461, 462, 464, 465], "supports_batch": 448, "supports_multi_output": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 253, 255, 257, 262, 266, 280, 282, 284, 286, 448, 465], "supports_pending_experi": 448, "supports_transfer_learn": [253, 255, 257, 262, 266, 280, 282, 284, 286, 465], "suppos": [313, 455], "sure": [426, 434, 446, 449], "surrog": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 74, 78, 97, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 194, 196, 203, 204, 205, 206, 213, 215, 221, 253, 255, 258, 260, 262, 266, 268, 269, 273, 276, 278, 280, 282, 284, 286, 414, 415, 416, 417, 421, 429, 431, 438, 444, 446, 448, 450, 453, 454, 455, 459, 460, 461, 467, 468], "surrogate_model": [194, 196, 409, 421, 423, 424, 429, 439, 440, 448], "surrogateprotocol": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 97, 194, 196, 257, 260, 448], "svg": 432, "sw": 415, "swiss": 450, "switch": [53, 182, 185, 186, 290, 409, 414, 415, 416, 417, 429, 431, 438, 446, 448, 455, 461], "switch1": 415, "switch2": 415, "switch2_left": 415, "switch2_right": 415, "switch_1": 455, "switch_2": 455, "switch_aft": [186, 439, 440, 461], "switzerland": 450, "sy": 447, "symmetri": 455, "sync": 448, "syntax": [446, 448], "synthet": [411, 412, 421, 432, 442, 443, 448], "system": [347, 405, 429, 446, 447, 451, 456, 464, 467], "t": [288, 289, 330, 338, 404, 405, 406, 408, 409, 416, 421, 432, 442, 443, 445, 457, 460, 463, 464], "t1": [463, 464], "t2": 463, "t3": 463, "t_1": 459, "t_2": 459, "t_3": 459, "t_i": 459, "tab": 432, "tabl": [366, 423, 448, 454, 455, 458], "tabular": 464, "tag": [446, 448, 463], "tailor": 454, "take": [8, 49, 109, 138, 152, 157, 158, 253, 255, 257, 262, 266, 276, 280, 282, 284, 286, 300, 419, 426, 448, 453, 454, 455, 456, 459, 460, 461, 467], "taken": [184, 420, 448, 454, 457, 459], "tantamount": 452, "target": [12, 13, 16, 31, 79, 97, 122, 123, 125, 129, 130, 131, 132, 134, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 242, 244, 245, 246, 253, 255, 257, 260, 262, 266, 280, 282, 284, 286, 290, 299, 302, 303, 305, 333, 347, 353, 356, 357, 363, 364, 365, 368, 380, 381, 383, 401, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 420, 421, 423, 424, 429, 435, 436, 438, 439, 440, 442, 443, 444, 446, 448, 453, 454, 456, 458, 463, 464, 465, 468], "target_1": [415, 416, 417, 431, 453, 459, 466], "target_2": [431, 453, 459, 466], "target_3": [431, 453, 459], "target_3a": 466, "target_3b": 466, "target_a": 465, "target_b": 465, "target_cumbest": [403, 442, 443], "target_index": [97, 448, 458], "target_max": 454, "target_transform": 431, "targetmod": [305, 463, 466], "targetnam": 244, "targettransform": [305, 448, 466], "task": [142, 215, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 297, 299, 305, 429, 448, 454, 461, 463, 464, 467], "task_idx": [215, 448], "task_param": [442, 443, 464], "task_paramet": 463, "task_parameter_json": 463, "task_parameter_reconstruct": 463, "taskparamet": [228, 442, 443, 448, 457, 463, 464, 468], "tb": 469, "tbodi": 423, "td": 423, "technic": [221, 453, 464, 467], "techniqu": [206, 461], "technologi": 450, "telemetri": [448, 450, 468], "tell": 312, "temp": [414, 416, 450], "temp_c": [404, 405, 406, 420], "temperatur": [404, 406, 408, 409, 414, 416, 419, 423, 424, 438, 455, 460, 462, 467], "temperature_resolut": 414, "temperature_valu": 420, "temporari": [197, 215, 385, 420, 448, 456, 463], "temporarili": [448, 469], "temporary_se": 469, "tempt": 467, "tenac": 448, "tend": 421, "tensor": [26, 45, 253, 288, 289, 356, 367, 371, 391, 393, 442, 448], "term": [112, 242, 420, 429, 449, 451, 454, 458, 462, 463, 464, 467], "termin": [420, 421, 447, 451], "terminologi": 468, "tert": [404, 405, 406, 408, 409], "test": [221, 244, 262, 353, 429, 442, 443, 446, 447, 448, 449, 454, 458, 464, 469], "test_funct": [411, 412, 421, 435, 436, 442, 443], "test_scenario": [404, 406], "testabl": [86, 244], "testfunct": [411, 412, 435, 436], "testfunctionclass": [411, 412, 435, 436], "text": [34, 423, 432, 451, 455, 456, 459], "textcont": 423, "th": [318, 455], "than": [31, 65, 85, 152, 184, 185, 186, 196, 213, 215, 228, 318, 337, 347, 351, 357, 389, 405, 416, 420, 427, 452, 455, 456, 458, 460, 463, 465], "thei": [158, 179, 189, 308, 359, 363, 409, 417, 420, 426, 429, 434, 448, 449, 453, 454, 455, 458, 460, 461, 462, 463, 466, 467, 469], "them": [38, 276, 354, 409, 446, 447, 448, 449, 453, 455, 456, 457, 458, 460, 461, 463, 467], "theme": 448, "theori": 451, "therebi": 221, "therefor": [44, 186, 253, 255, 257, 262, 266, 280, 282, 284, 286, 409, 447, 454, 463, 465, 467], "therein": 448, "thereof": 451, "thf": 455, "thi": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 158, 181, 183, 184, 185, 186, 188, 196, 203, 204, 205, 206, 213, 215, 221, 242, 246, 248, 250, 253, 255, 257, 258, 260, 261, 262, 266, 276, 280, 282, 284, 286, 290, 314, 317, 333, 334, 337, 342, 347, 353, 355, 357, 358, 360, 362, 366, 403, 419, 420, 421, 423, 424, 426, 427, 429, 432, 434, 438, 439, 440, 442, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469], "think": [429, 460], "third": [345, 431, 451, 458, 464], "third_parti": 347, "thompson": [21, 450], "thomson": 21, "those": [63, 158, 186, 188, 242, 347, 388, 409, 447, 451, 453, 455, 464], "though": 467, "three": [405, 426, 427, 431, 432, 446, 454, 455, 458, 459, 461, 462, 467], "threshold": [42, 44, 144, 155, 157, 159, 186, 196, 290, 360, 411, 416, 417, 420, 426, 448, 455, 460], "thresholdcondit": [58, 59, 411, 416, 417, 426, 468], "through": [31, 215, 307, 317, 353, 363, 424, 426, 429, 431, 446, 448, 449, 451, 455, 459, 463, 464, 468], "throughout": 186, "throw": [342, 455], "thrown": [246, 406, 420, 439, 447, 453, 459], "thu": [196, 333, 363, 404, 405, 411, 412, 414, 415, 416, 417, 423, 424, 426, 429, 431, 435, 436, 438, 447, 449, 454, 456, 457, 460, 461, 463, 464, 467, 469], "tick": 421, "tight_layout": 432, "time": [10, 196, 314, 389, 412, 419, 426, 429, 446, 448, 453, 454, 455, 456, 457, 460, 463, 464, 465, 469], "timeout": [448, 456], "timer": 419, "titl": [423, 432, 451], "tl": 442, "to_botorch": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 45, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 448], "to_dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 371], "to_factori": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119], "to_fram": 403, "to_gpytorch": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 167, 169, 170, 171, 172, 173, 174, 175, 448], "to_json": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 297, 299, 305, 371, 423, 424, 438, 454, 463], "to_keep": 361, "to_ndarrai": 371, "to_numpi": [421, 432], "to_object": [297, 299, 305, 403, 411, 412, 421, 429, 432, 435, 436, 442, 443, 459, 464], "to_polar": [40, 41, 42], "to_searchspac": [137, 138, 139, 141, 142, 144, 151, 152, 155, 213, 221, 429, 434, 448, 457], "to_str": 448, "to_subspac": [137, 138, 141, 142, 144, 151, 152, 155, 448], "to_tensor": [371, 423, 448], "to_tupl": [371, 432], "togeth": [38, 69, 318, 409, 429, 436, 446, 448, 455], "toggl": [31, 448], "toggle_discrete_candid": [31, 448, 457], "toggleabl": 423, "toggleable__cont": 423, "toggleablecont": 423, "tol": 423, "toler": [31, 42, 152, 221, 400, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 420, 423, 424, 426, 431, 435, 436, 438, 439, 440, 446, 448, 455], "tolist": 411, "toluen": 460, "toml": 448, "too": [411, 464, 467], "tool": [339, 446, 448, 455, 463], "toolbox": 446, "top": [448, 449], "topic": 454, "topolog": 460, "topologicaltors": 149, "topologicaltorsionfingerprint": 149, "torch": [356, 371, 423, 442, 448], "toronto": 450, "tort": 451, "total": [185, 186, 388, 426, 427, 429, 462], "total_bas": 427, "total_phase_ag": 427, "toward": [169, 353, 455], "towel": 445, "tox": [448, 449], "tr": 423, "tracebackexcept": 447, "track": [178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 221, 420, 451, 457], "trade": [8, 451, 459], "trademark": 451, "tradit": [405, 425, 426, 444, 446, 448], "train": [81, 97, 178, 184, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 250, 253, 255, 257, 258, 260, 261, 262, 266, 280, 282, 284, 286, 290, 422, 432, 442, 443, 448, 464], "train_i": 423, "train_x": 423, "training_funct": 443, "trajectori": [242, 403, 420, 429, 454, 464], "transfer": [249, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 409, 414, 415, 416, 417, 431, 438, 442, 444, 446, 448, 451, 460, 465, 468], "transform": [31, 81, 122, 125, 130, 132, 138, 139, 141, 142, 144, 152, 155, 213, 215, 221, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 297, 299, 303, 305, 343, 347, 356, 363, 368, 371, 372, 391, 414, 415, 416, 417, 438, 448, 451, 456, 460, 465, 466], "transform_rep_exp2comp": 448, "transformermixin": 347, "transit": 448, "translat": [38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 448, 451, 457, 460], "transmiss": 463, "transmit": 314, "transport": 347, "travers": 448, "treasur": 468, "treat": [155, 159, 253, 255, 257, 262, 266, 280, 282, 284, 286, 405, 446, 455, 460, 466, 469], "tree": 448, "tremend": 405, "trend": 467, "tri": 462, "triangl": 309, "triangular": [303, 309, 431, 466], "tricki": 458, "tricyclohexylphosphin": [404, 405, 406], "trigger": [184, 317, 420, 424, 429, 448, 449, 453, 459, 463], "trim": 423, "trivial": [269, 282, 459, 460, 465], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 97, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 159, 196, 209, 215, 248, 266, 299, 308, 326, 327, 331, 337, 338, 347, 351, 361, 388, 400, 405, 409, 411, 412, 414, 415, 416, 417, 421, 423, 424, 426, 429, 431, 435, 436, 438, 439, 440, 442, 443, 448, 453, 454, 455, 456, 457, 458, 460, 463], "truncat": [446, 456], "trust": [423, 456], "truth": 338, "truthi": 456, "try": [89, 353, 404, 405, 406, 420, 423, 424, 440, 447, 448, 469], "tune": 446, "tupl": [13, 16, 31, 41, 45, 97, 104, 105, 106, 109, 111, 113, 114, 115, 117, 118, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 160, 213, 215, 220, 221, 289, 317, 324, 331, 334, 350, 353, 367, 371, 375, 391, 448], "turn": [44, 213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 375, 434, 446, 447, 448, 455, 456, 459], "turnaround": 464, "twice": [457, 459], "two": [13, 16, 34, 55, 64, 65, 126, 186, 196, 208, 242, 318, 323, 356, 380, 388, 403, 404, 406, 419, 426, 429, 431, 432, 436, 442, 443, 445, 446, 448, 449, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "twofold": 429, "twophasemetarecommend": [404, 406, 409, 414, 415, 416, 417, 420, 421, 423, 424, 429, 431, 436, 438, 439, 440, 446, 448, 461], "twophasestrategi": 448, "type": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 77, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 126, 130, 132, 134, 137, 138, 139, 141, 142, 144, 151, 152, 154, 155, 157, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 198, 201, 203, 204, 205, 206, 209, 210, 213, 215, 216, 217, 218, 221, 222, 223, 224, 226, 227, 228, 231, 232, 234, 235, 236, 238, 240, 241, 244, 246, 248, 250, 253, 255, 256, 257, 258, 260, 262, 263, 266, 269, 270, 274, 280, 282, 284, 286, 288, 289, 290, 292, 293, 294, 297, 299, 300, 305, 307, 308, 309, 311, 312, 313, 314, 317, 318, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 340, 341, 342, 343, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 375, 377, 378, 380, 381, 382, 388, 389, 391, 393, 396, 397, 398, 399, 400, 401, 405, 414, 415, 416, 417, 419, 420, 421, 423, 424, 426, 427, 429, 431, 438, 439, 440, 446, 448, 449, 451, 452, 455, 458, 459, 460, 461, 462, 465, 467, 468], "typealia": 300, "typeddict": [292, 448], "typeerror": [31, 97, 101, 244, 253, 255, 257, 262, 266, 280, 282, 284, 286, 333, 353, 354, 389, 400, 401, 420, 421, 424], "typeguard": 330, "typevar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 158, 167, 169, 170, 171, 172, 173, 174, 175, 181, 183, 184, 185, 186, 213, 215, 221, 226, 234, 235, 238, 253, 255, 257, 260, 262, 266, 269, 280, 282, 284, 286, 289, 290, 297, 299, 305, 327, 328, 329, 330, 350, 356, 363, 365, 371], "typic": [15, 333, 351, 405, 446, 453, 454, 458, 460, 463, 469], "typing_extens": 449, "typo": [448, 449], "u": [21, 403, 404, 405, 406, 419, 421, 426, 427, 429, 434, 443, 446, 452, 453, 455, 459], "ucb": [8, 409, 448, 452, 454, 463], "ultim": 449, "ultra": [439, 440], "un": 448, "unabl": 423, "unavail": 448, "unawar": 453, "unbound": [371, 419], "uncaught": 448, "uncertainti": [8, 15, 409, 468], "unchang": [157, 347], "uncharacter": 467, "uncorrel": [360, 467], "undefin": [253, 457], "under": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 314, 363, 417, 421, 429, 432, 446, 447, 451, 460], "underflow": 87, "underli": [31, 55, 420, 429, 446, 448, 454, 458, 461, 463], "underscor": 448, "understand": [446, 467], "undesir": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 92, 455, 457, 460, 469], "undo": 447, "unequ": 417, "unevenli": 460, "unexpect": [77, 89, 448], "unfinish": 453, "unfortun": 467, "unhandl": 448, "uniform": [213, 253, 354, 355, 448], "uniformli": [208, 388], "uniniti": 337, "uninstal": [88, 446], "unintend": [92, 333, 448, 449], "unintention": 469, "union": [13, 16, 31, 126, 159, 244, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 307, 308, 309, 381, 382, 436, 451, 462], "uniqu": [56, 134, 158, 426, 448, 460], "unit": [220, 375], "unknown": [185, 388, 403, 429, 448, 465, 467], "unlabel": 356, "unless": [446, 449, 451, 456, 460, 463], "unlik": [12, 13, 14, 16, 17, 426, 459, 469], "unlock": 468, "unmaintain": 448, "unmatch": 331, "unmatchedattributeerror": 331, "unmeasur": [244, 406], "unnecessari": [448, 454], "unpromis": [420, 453], "unreach": 448, "unrealist": 464, "unrecogn": 353, "unrestrict": 333, "unsaf": 448, "unspecifi": [322, 448, 463], "unspecifiedtyp": 31, "unstructur": [236, 463], "unstructure_bas": 234, "unsupervis": 347, "unsupport": [213, 246, 453], "until": [181, 183, 184, 185, 186, 244, 429, 446, 453, 464], "untouch": 354, "untransform": [31, 465], "unusedobjectwarn": [420, 448, 453], "unveil": 443, "unwant": 38, "up": [31, 221, 244, 246, 403, 404, 405, 406, 407, 414, 416, 419, 421, 425, 426, 427, 432, 436, 442, 443, 446, 447, 448, 452, 455, 456, 459, 469], "updat": [31, 347, 405, 408, 448, 449, 453], "update_measur": [31, 448], "upgrad": 448, "upon": [188, 269, 447, 448, 449, 455, 462, 465, 467], "upper": [8, 22, 159, 175, 215, 221, 307, 308, 309, 371, 409, 421, 431, 432, 442, 443, 448, 455, 466, 469], "upper_bound": [414, 415, 416, 417, 438, 462], "upper_threshold": 159, "upperconfidencebound": [22, 452, 463], "upstream": 449, "urg": 458, "url": [456, 467], "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 69, 73, 97, 109, 125, 126, 144, 149, 152, 155, 158, 178, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 213, 215, 221, 222, 223, 235, 244, 246, 248, 253, 255, 257, 262, 263, 266, 280, 282, 284, 286, 293, 303, 313, 314, 320, 333, 334, 342, 343, 347, 353, 355, 356, 362, 373, 377, 378, 388, 393, 403, 411, 412, 418, 419, 420, 421, 422, 425, 426, 427, 434, 438, 439, 440, 442, 443, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 466, 467, 468, 469], "usa": 450, "usabl": [337, 447, 448, 460, 463], "usag": [374, 446, 448, 455, 456, 461, 468], "use_comp_rep": [97, 101, 458], "use_torch": [356, 411, 412, 421, 435, 436, 442, 443], "user": [52, 53, 67, 82, 92, 144, 147, 253, 255, 257, 262, 266, 280, 282, 284, 286, 294, 311, 347, 355, 408, 409, 414, 431, 440, 446, 447, 448, 449, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467], "userguid": 310, "usernam": [311, 448, 456], "userwarn": 447, "uses_shap_explain": 448, "usort": 448, "usr": 149, "usrcat": 149, "usrcatfingerprint": 149, "usrfingerprint": 149, "usual": [244, 404, 405, 406, 439, 447, 456, 458, 460], "util": [31, 196, 209, 213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 313, 320, 322, 323, 347, 371, 387, 391, 403, 405, 408, 409, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 429, 431, 432, 435, 436, 442, 443, 446, 448, 452, 453, 454, 458, 459, 460, 461, 463, 464, 465, 467, 468], "uv": 448, "v": 467, "val": [49, 338, 442], "val_from_param1": 57, "val_from_param2": 57, "valid": [31, 34, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 157, 158, 215, 218, 221, 224, 262, 357, 362, 414, 437, 439, 444, 447, 448, 449, 454, 455, 464], "validate_compat": 262, "validate_config": [31, 440, 448, 454], "validate_parameter_input": 31, "validate_target_input": 31, "valu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 31, 34, 40, 41, 42, 44, 45, 53, 55, 79, 97, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 125, 126, 130, 132, 138, 141, 142, 144, 146, 147, 149, 152, 155, 157, 158, 159, 162, 163, 164, 186, 194, 196, 203, 204, 205, 206, 213, 215, 221, 222, 223, 242, 244, 246, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 292, 299, 300, 302, 307, 308, 309, 314, 317, 321, 322, 328, 331, 338, 347, 349, 353, 354, 355, 357, 359, 362, 363, 366, 371, 373, 380, 381, 382, 396, 397, 398, 399, 400, 401, 404, 405, 406, 408, 409, 411, 414, 415, 416, 417, 419, 420, 421, 423, 424, 426, 429, 431, 432, 435, 436, 438, 439, 440, 442, 443, 446, 448, 449, 452, 453, 455, 456, 457, 458, 459, 466, 467, 468, 469], "valuabl": [461, 464], "valueerror": [13, 15, 16, 31, 44, 63, 64, 65, 97, 101, 126, 134, 157, 158, 163, 164, 213, 215, 221, 227, 244, 246, 253, 255, 257, 262, 266, 280, 282, 284, 286, 294, 318, 331, 336, 338, 341, 349, 351, 353, 355, 357, 362, 363, 364, 388, 389, 400, 401, 436, 447], "var": [31, 253, 255, 256, 257, 260, 262, 266, 280, 282, 284, 286, 429, 468], "vari": [31, 221, 405, 456, 459], "variabl": [34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 122, 125, 130, 132, 137, 138, 139, 141, 142, 144, 151, 152, 155, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 248, 253, 255, 257, 262, 266, 280, 282, 284, 286, 297, 312, 314, 379, 394, 435, 446, 448, 449, 455, 460, 461, 463, 465], "varianc": [8, 15, 108, 282, 358, 448, 452], "variance_initial_valu": 108, "variance_prior": 108, "variant": [409, 442, 458, 467], "variat": 432, "varieti": [435, 449, 463, 464], "variou": [347, 371, 426, 433, 448, 453, 458, 461, 464], "varucb": 448, "vector": [34, 423, 448, 450, 459], "vendor": 460, "verbal": 451, "verbos": [423, 424, 448], "veri": [347, 414, 416, 431, 453, 456, 458, 460, 465, 469], "verifi": [337, 411, 414, 415, 416, 417, 426, 427, 434, 436, 438, 446, 449], "versa": [442, 467], "versatil": 461, "version": [215, 311, 347, 378, 414, 416, 417, 426, 429, 434, 442, 443, 446, 447, 448, 449, 451, 463], "vert": 421, "via": [12, 15, 21, 30, 31, 44, 97, 186, 196, 209, 253, 255, 257, 258, 260, 262, 266, 280, 282, 284, 286, 313, 325, 333, 353, 361, 406, 412, 419, 420, 423, 434, 446, 448, 449, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 466, 467, 468], "via_init": 463, "via_json": 463, "viabl": [85, 431], "vice": [442, 467], "view": [213, 221, 421, 462], "view_init": 421, "violat": [38, 51, 52, 53, 54, 55, 56, 57, 58, 59, 80, 448], "viridi": 421, "virtual": 449, "visibl": 448, "visual": [405, 442, 443, 458, 466], "vitro": 453, "vivo": 453, "volum": 467, "vpn": [446, 456], "vsa": 149, "vsafingerprint": 149, "vulner": [448, 449], "w_i": 459, "wa": [15, 70, 71, 74, 78, 79, 88, 92, 158, 186, 253, 255, 257, 262, 266, 280, 282, 284, 286, 347, 349, 353, 357, 389, 405, 447, 448, 449, 451, 456, 458, 460, 463, 467], "wai": [215, 419, 426, 427, 433, 434, 442, 445, 446, 453, 456, 457, 458, 460, 462, 463, 464, 465, 466, 467, 469], "wait": 453, "wall": 10, "want": [52, 409, 414, 426, 429, 436, 443, 446, 448, 449, 454, 455, 456, 457, 458, 460, 461, 463, 465, 466], "warn": [66, 334, 414, 416, 417, 420, 435, 436, 448, 449], "warranti": [446, 451], "watch": 419, "water": [414, 415, 416, 417, 426, 455, 460], "waterfal": [97, 99, 448], "we": [26, 242, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 419, 420, 421, 423, 424, 426, 427, 429, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 446, 447, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 465, 466, 467, 468, 469], "web": 449, "weber": 450, "weight": [125, 126, 382, 431, 459, 463], "weight_kdalton": 460, "welcom": 449, "well": [311, 347, 409, 420, 425, 445, 449, 454, 455, 458, 460, 464], "were": [31, 75, 83, 353, 406, 443, 447, 448, 453, 455, 456, 460, 462], "what": [158, 184, 215, 242, 347, 353, 391, 403, 423, 431, 440, 445, 449, 452, 454, 458, 460, 467, 468], "whatsnew": 323, "when": [13, 16, 31, 44, 53, 89, 152, 157, 159, 184, 185, 186, 194, 196, 215, 248, 253, 255, 257, 262, 263, 266, 280, 282, 284, 286, 294, 321, 322, 331, 333, 337, 347, 351, 353, 356, 389, 414, 415, 417, 419, 424, 426, 427, 429, 431, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469], "whenev": [26, 184, 353, 463], "where": [13, 16, 21, 26, 34, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 178, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 242, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 317, 353, 388, 404, 405, 406, 409, 414, 416, 426, 429, 446, 447, 448, 449, 451, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467], "wherea": 463, "wherev": [451, 453], "whether": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 34, 35, 36, 37, 38, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101, 137, 138, 139, 141, 142, 144, 151, 152, 155, 196, 213, 221, 253, 255, 257, 262, 266, 280, 282, 284, 286, 312, 355, 364, 371, 426, 448, 451, 454, 456, 457, 466], "which": [13, 15, 16, 31, 40, 41, 42, 44, 92, 97, 122, 125, 130, 132, 158, 159, 178, 179, 181, 183, 184, 185, 186, 188, 191, 194, 196, 201, 203, 204, 205, 206, 209, 210, 215, 221, 248, 250, 253, 255, 257, 262, 266, 280, 282, 284, 286, 290, 313, 314, 333, 337, 347, 353, 355, 360, 362, 365, 366, 380, 381, 391, 403, 405, 409, 412, 419, 420, 426, 427, 429, 434, 435, 436, 440, 442, 443, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 469], "while": [215, 218, 224, 347, 420, 429, 431, 443, 447, 448, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467], "whilst": 353, "whim": 149, "whimfingerprint": 149, "whole": 451, "whom": 451, "whose": [126, 157, 158, 215, 246, 328, 331, 356, 403, 419, 426, 453, 464], "wide": 464, "wider": 466, "width": [366, 423], "wieczorek": 450, "william": 467, "willing": 454, "win": [253, 429], "win_rat": 429, "window": [423, 448, 456], "winerror": 447, "wise": 382, "wish": 463, "within": [31, 137, 138, 139, 141, 142, 144, 151, 152, 155, 157, 347, 400, 434, 448, 451, 455, 456, 460, 465, 467, 468, 469], "without": [185, 442, 443, 446, 448, 451, 453, 454, 455, 456, 460, 464, 467, 469], "won": 460, "work": [26, 287, 317, 347, 356, 414, 416, 417, 420, 431, 438, 440, 446, 448, 449, 450, 451, 453, 455, 456, 461, 463, 464], "workaround": [447, 448], "workflow": [423, 446, 454, 463, 468], "world": [446, 454], "worldwid": 451, "worst": [13, 16, 244, 246, 248, 406], "would": [56, 87, 157, 158, 242, 244, 250, 261, 419, 426, 429, 446, 449, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 469], "wrap": [104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 266, 270, 288, 289, 333, 446, 448, 459], "wrapper": [1, 25, 248, 250, 262, 334, 442, 443, 446, 461], "write": [446, 447, 451, 463], "writetext": 423, "written": [435, 436, 449, 451], "wrong": [440, 448], "wrongli": 447, "www": [446, 451], "x": [26, 123, 159, 217, 244, 246, 270, 324, 330, 334, 347, 350, 367, 380, 391, 403, 404, 405, 406, 414, 415, 416, 417, 420, 421, 426, 431, 438, 442, 443, 446, 448, 462, 465], "x0": [432, 462], "x0_mesh": 432, "x1": [432, 462], "x1_mesh": 432, "x2": 462, "x_": [403, 411, 412, 434, 435, 436], "x_1": [411, 412, 434, 435, 436, 455], "x_2": [411, 412, 434, 435, 436, 455], "x_3": [411, 412, 434, 435, 436, 455], "x_4": [411, 412, 434, 435, 436], "x_5": 436, "x_6": 436, "x_i": 455, "x_new": 347, "x_pend": 26, "xlabel": 432, "xlsx": [404, 405, 406], "xpho": [404, 405, 406], "xxxx": 447, "xylen": [404, 405, 406, 408, 409], "y": [278, 338, 347, 360, 380, 403, 404, 405, 406, 420, 421, 423, 426, 442, 443, 446, 467], "y0": 432, "y0_mesh": 432, "y1": 432, "y1_mesh": 432, "ye": 338, "year": 467, "yet": [26, 448, 453, 461], "yield": [6, 109, 256, 404, 405, 406, 408, 409, 414, 420, 423, 424, 426, 436, 438, 439, 440, 446, 448, 452, 458, 459, 463], "yield_cumbest": [404, 405, 406, 420], "yield_mean": 454, "yield_mod": 454, "yield_q_0": 454, "yield_std": 454, "ylabel": 432, "yml": 448, "you": [31, 52, 405, 409, 411, 419, 424, 426, 429, 435, 436, 439, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469], "your": [405, 419, 426, 429, 436, 445, 446, 447, 448, 449, 451, 454, 455, 456, 457, 458, 460, 463, 464, 465, 466, 467, 469], "your_branch_nam": 449, "yourself": 429, "z": [421, 446], "zdir": 421, "zero": [44, 63, 65, 157, 159, 169, 347, 358, 426, 429, 455, 467], "zip": [420, 421], "\u00b5fmt": 448, "\u0161o\u0161i\u0107": [446, 450]}, "titles": ["baybe", "baybe.acquisition", "baybe.acquisition.acqfs", "ExpectedImprovement", "LogExpectedImprovement", "PosteriorMean", "PosteriorStandardDeviation", "ProbabilityOfImprovement", "UpperConfidenceBound", "qExpectedImprovement", "qKnowledgeGradient", "qLogExpectedImprovement", "qLogNParEGO", "qLogNoisyExpectedHypervolumeImprovement", "qLogNoisyExpectedImprovement", "qNegIntegratedPosteriorVariance", "qNoisyExpectedHypervolumeImprovement", "qNoisyExpectedImprovement", "qPosteriorStandardDeviation", "qProbabilityOfImprovement", "qSimpleRegret", "qThompsonSampling", "qUpperConfidenceBound", "baybe.acquisition.base", "AcquisitionFunction", "baybe.acquisition.partial", "PartialAcquisitionFunction", "baybe.acquisition.utils", "baybe.acquisition.utils.convert_acqf", "baybe.acquisition.utils.str_to_acqf", "baybe.campaign", "Campaign", "baybe.constraints", "baybe.constraints.base", "CardinalityConstraint", "Constraint", "ContinuousConstraint", "ContinuousNonlinearConstraint", "DiscreteConstraint", "baybe.constraints.conditions", "Condition", "SubSelectionCondition", "ThresholdCondition", "baybe.constraints.continuous", "ContinuousCardinalityConstraint", "ContinuousLinearConstraint", "baybe.constraints.deprecation", "baybe.constraints.deprecation.ContinuousLinearEqualityConstraint", "baybe.constraints.deprecation.ContinuousLinearInequalityConstraint", "baybe.constraints.deprecation.structure_constraints", "baybe.constraints.discrete", "DiscreteCardinalityConstraint", "DiscreteCustomConstraint", "DiscreteDependenciesConstraint", "DiscreteExcludeConstraint", "DiscreteLinkedParametersConstraint", "DiscreteNoLabelDuplicatesConstraint", "DiscretePermutationInvarianceConstraint", "DiscreteProductConstraint", "DiscreteSumConstraint", "baybe.constraints.utils", "baybe.constraints.utils.is_cardinality_fulfilled", "baybe.constraints.validation", "baybe.constraints.validation.validate_cardinality_constraint_parameter_bounds", "baybe.constraints.validation.validate_cardinality_constraints_are_nonoverlapping", "baybe.constraints.validation.validate_constraints", "baybe.exceptions", "baybe.exceptions.DeprecationError", "baybe.exceptions.EmptySearchSpaceError", "baybe.exceptions.IncompatibilityError", "baybe.exceptions.IncompatibleAcquisitionFunctionError", "baybe.exceptions.IncompatibleArgumentError", "baybe.exceptions.IncompatibleExplainerError", "baybe.exceptions.IncompatibleSearchSpaceError", "baybe.exceptions.IncompatibleSurrogateError", "baybe.exceptions.IncompleteMeasurementsError", "baybe.exceptions.InfeasibilityError", "baybe.exceptions.InputDataTypeWarning", "baybe.exceptions.InvalidSurrogateModelError", "baybe.exceptions.InvalidTargetValueError", "baybe.exceptions.MinimumCardinalityViolatedWarning", "baybe.exceptions.ModelNotTrainedError", "baybe.exceptions.NoMCAcquisitionFunctionError", "baybe.exceptions.NoMeasurementsError", "baybe.exceptions.NoRecommendersLeftError", "baybe.exceptions.NotEnoughPointsLeftError", "baybe.exceptions.NothingToSimulateError", "baybe.exceptions.NumericalUnderflowError", "baybe.exceptions.OptionalImportError", "baybe.exceptions.SearchSpaceMatchWarning", "baybe.exceptions.UnidentifiedSubclassError", "baybe.exceptions.UnmatchedAttributeError", "baybe.exceptions.UnusedObjectWarning", "baybe.insights", "baybe.insights.shap", "baybe.insights.shap.EXPLAINERS", "baybe.insights.shap.NON_SHAP_EXPLAINERS", "SHAPInsight", "baybe.insights.shap.SHAP_EXPLAINERS", "baybe.insights.shap.SHAP_PLOTS", "baybe.insights.shap.is_shap_explainer", "baybe.insights.shap.make_explainer_for_surrogate", "baybe.kernels", "baybe.kernels.base", "BasicKernel", "CompositeKernel", "Kernel", "baybe.kernels.basic", "LinearKernel", "MaternKernel", "PeriodicKernel", "PiecewisePolynomialKernel", "PolynomialKernel", "RBFKernel", "RFFKernel", "RQKernel", "baybe.kernels.composite", "AdditiveKernel", "ProductKernel", "ScaleKernel", "baybe.objectives", "baybe.objectives.base", "Objective", "baybe.objectives.base.to_objective", "baybe.objectives.desirability", "DesirabilityObjective", "baybe.objectives.desirability.scalarize", "baybe.objectives.enum", "Scalarizer", "baybe.objectives.pareto", "ParetoObjective", "baybe.objectives.single", "SingleTargetObjective", "baybe.objectives.validation", "baybe.objectives.validation.validate_target_names", "baybe.parameters", "baybe.parameters.base", "ContinuousParameter", "DiscreteParameter", "Parameter", "baybe.parameters.categorical", "CategoricalParameter", "TaskParameter", "baybe.parameters.custom", "CustomDiscreteParameter", "baybe.parameters.enum", "CategoricalEncoding", "CustomEncoding", "ParameterEncoding", "SubstanceEncoding", "baybe.parameters.numerical", "NumericalContinuousParameter", "NumericalDiscreteParameter", "baybe.parameters.substance", "baybe.parameters.substance.Smiles", "SubstanceParameter", "baybe.parameters.utils", "baybe.parameters.utils.activate_parameter", "baybe.parameters.utils.get_parameters_from_dataframe", "baybe.parameters.utils.is_inactive", "baybe.parameters.utils.sort_parameters", "baybe.parameters.validation", "baybe.parameters.validation.validate_decorrelation", "baybe.parameters.validation.validate_is_finite", "baybe.parameters.validation.validate_unique_values", "baybe.priors", "baybe.priors.base", "Prior", "baybe.priors.basic", "BetaPrior", "GammaPrior", "HalfCauchyPrior", "HalfNormalPrior", "LogNormalPrior", "NormalPrior", "SmoothedBoxPrior", "baybe.recommenders", "baybe.recommenders.base", "RecommenderProtocol", "baybe.recommenders.meta", "baybe.recommenders.meta.base", "MetaRecommender", "baybe.recommenders.meta.sequential", "BaseSequentialMetaRecommender", "SequentialMetaRecommender", "StreamingSequentialMetaRecommender", "TwoPhaseMetaRecommender", "baybe.recommenders.naive", "NaiveHybridSpaceRecommender", "baybe.recommenders.pure", "baybe.recommenders.pure.base", "PureRecommender", "baybe.recommenders.pure.bayesian", "baybe.recommenders.pure.bayesian.base", "BayesianRecommender", "baybe.recommenders.pure.bayesian.botorch", "BotorchRecommender", "baybe.recommenders.pure.bayesian.sequential_greedy", "baybe.recommenders.pure.bayesian.sequential_greedy.SequentialGreedyRecommender", "baybe.recommenders.pure.nonpredictive", "baybe.recommenders.pure.nonpredictive.base", "NonPredictiveRecommender", "baybe.recommenders.pure.nonpredictive.clustering", "GaussianMixtureClusteringRecommender", "KMeansClusteringRecommender", "PAMClusteringRecommender", "SKLearnClusteringRecommender", "baybe.recommenders.pure.nonpredictive.sampling", "FPSInitialization", "FPSRecommender", "RandomRecommender", "baybe.searchspace", "baybe.searchspace.continuous", "SubspaceContinuous", "baybe.searchspace.core", "SearchSpace", "SearchSpaceType", "baybe.searchspace.core.to_searchspace", "baybe.searchspace.core.validate_searchspace_from_config", "baybe.searchspace.discrete", "MemorySize", "SubspaceDiscrete", "baybe.searchspace.discrete.parameter_cartesian_prod_pandas", "baybe.searchspace.discrete.parameter_cartesian_prod_polars", "baybe.searchspace.discrete.validate_simplex_subspace_from_config", "baybe.searchspace.validation", "baybe.searchspace.validation.get_transform_parameters", "baybe.searchspace.validation.validate_parameter_names", "baybe.searchspace.validation.validate_parameters", "baybe.serialization", "baybe.serialization.core", "baybe.serialization.core.block_deserialization_hook", "baybe.serialization.core.block_serialization_hook", "baybe.serialization.core.converter", "baybe.serialization.core.get_base_structure_hook", "baybe.serialization.core.select_constructor_hook", "baybe.serialization.core.unstructure_base", "baybe.serialization.mixin", "SerialMixin", "baybe.serialization.utils", "baybe.serialization.utils.deserialize_dataframe", "baybe.serialization.utils.serialize_dataframe", "baybe.simulation", "baybe.simulation.core", "baybe.simulation.core.simulate_experiment", "baybe.simulation.lookup", "baybe.simulation.lookup.look_up_targets", "baybe.simulation.scenarios", "baybe.simulation.scenarios.simulate_scenarios", "baybe.simulation.transfer_learning", "baybe.simulation.transfer_learning.simulate_transfer_learning", "baybe.surrogates", "baybe.surrogates.bandit", "BetaBernoulliMultiArmedBanditSurrogate", "baybe.surrogates.base", "IndependentGaussianSurrogate", "baybe.surrogates.base.PosteriorStatistic", "Surrogate", "SurrogateProtocol", "baybe.surrogates.composite", "CompositeSurrogate", "baybe.surrogates.custom", "CustomONNXSurrogate", "baybe.surrogates.custom.register_custom_architecture", "baybe.surrogates.gaussian_process", "baybe.surrogates.gaussian_process.core", "GaussianProcessSurrogate", "baybe.surrogates.gaussian_process.kernel_factory", "KernelFactory", "PlainKernelFactory", "baybe.surrogates.gaussian_process.kernel_factory.to_kernel_factory", "baybe.surrogates.gaussian_process.presets", "baybe.surrogates.gaussian_process.presets.core", "GaussianProcessPreset", "baybe.surrogates.gaussian_process.presets.core.make_gp_from_preset", "baybe.surrogates.gaussian_process.presets.default", "DefaultKernelFactory", "baybe.surrogates.gaussian_process.presets.edbo", "EDBOKernelFactory", "baybe.surrogates.linear", "BayesianLinearSurrogate", "baybe.surrogates.naive", "MeanPredictionSurrogate", "baybe.surrogates.ngboost", "NGBoostSurrogate", "baybe.surrogates.random_forest", "RandomForestSurrogate", "baybe.surrogates.utils", "baybe.surrogates.utils.batchify_ensemble_predictor", "baybe.surrogates.utils.batchify_mean_var_prediction", "baybe.surrogates.utils.catch_constant_targets", "baybe.surrogates.validation", "baybe.surrogates.validation.make_dict_validator", "baybe.surrogates.validation.type_validation_converter", "baybe.surrogates.validation.validate_custom_architecture_cls", "baybe.targets", "baybe.targets.base", "Target", "baybe.targets.binary", "BinaryTarget", "baybe.targets.binary.ChoiceValue", "baybe.targets.enum", "TargetMode", "TargetTransformation", "baybe.targets.numerical", "NumericalTarget", "baybe.targets.transforms", "baybe.targets.transforms.bell_transform", "baybe.targets.transforms.linear_transform", "baybe.targets.transforms.triangular_transform", "baybe.telemetry", "baybe.telemetry.get_user_details", "baybe.telemetry.is_enabled", "baybe.telemetry.telemetry_record_recommended_measurement_percentage", "baybe.telemetry.telemetry_record_value", "baybe.utils", "baybe.utils.augmentation", "baybe.utils.augmentation.df_apply_dependency_augmentation", "baybe.utils.augmentation.df_apply_permutation_augmentation", "baybe.utils.basic", "Dummy", "baybe.utils.basic.UNSPECIFIED", "UnspecifiedType", "classproperty", "baybe.utils.basic.convert_to_float", "baybe.utils.basic.find_subclass", "baybe.utils.basic.get_baseclasses", "baybe.utils.basic.get_subclasses", "baybe.utils.basic.group_duplicate_values", "baybe.utils.basic.hilberts_factory", "baybe.utils.basic.is_all_instance", "baybe.utils.basic.match_attributes", "baybe.utils.basic.refers_to", "baybe.utils.basic.register_hooks", "baybe.utils.basic.to_tuple", "baybe.utils.boolean", "baybe.utils.boolean.check_if_in", "baybe.utils.boolean.is_abstract", "baybe.utils.boolean.strtobool", "baybe.utils.chemistry", "baybe.utils.chemistry.get_canonical_smiles", "baybe.utils.chemistry.get_fingerprint_class", "baybe.utils.chemistry.name_to_smiles", "baybe.utils.chemistry.smiles_to_fingerprint_features", "baybe.utils.clustering_algorithms", "baybe.utils.clustering_algorithms.third_party", "baybe.utils.clustering_algorithms.third_party.kmedoids", "KMedoids", "baybe.utils.conversion", "baybe.utils.conversion.fraction_to_float", "baybe.utils.conversion.nonstring_to_tuple", "baybe.utils.conversion.to_string", "baybe.utils.dataframe", "baybe.utils.dataframe.add_fake_measurements", "baybe.utils.dataframe.add_noise_to_perturb_degenerate_rows", "baybe.utils.dataframe.add_parameter_noise", "baybe.utils.dataframe.arrays_to_dataframes", "baybe.utils.dataframe.create_fake_input", "baybe.utils.dataframe.df_drop_single_value_columns", "baybe.utils.dataframe.df_drop_string_columns", "baybe.utils.dataframe.df_uncorrelated_features", "baybe.utils.dataframe.filter_df", "baybe.utils.dataframe.fuzzy_row_match", "baybe.utils.dataframe.get_transform_objects", "baybe.utils.dataframe.handle_missing_values", "baybe.utils.dataframe.normalize_input_dtypes", "baybe.utils.dataframe.pretty_print_df", "baybe.utils.dataframe.to_tensor", "baybe.utils.dataframe.transform_target_columns", "baybe.utils.interval", "baybe.utils.interval.InfiniteIntervalError", "Interval", "baybe.utils.interval.convert_bounds", "baybe.utils.interval.use_fallback_constructor_hook", "baybe.utils.memory", "baybe.utils.memory.bytes_to_human_readable", "baybe.utils.numerical", "baybe.utils.numerical.DTypeFloatNumpy", "baybe.utils.numerical.DTypeFloatONNX", "baybe.utils.numerical.VARNAME_NUMPY_USE_SINGLE_PRECISION", "baybe.utils.numerical.closer_element", "baybe.utils.numerical.closest_element", "baybe.utils.numerical.geom_mean", "baybe.utils.random", "baybe.utils.random.set_random_seed", "baybe.utils.random.temporary_seed", "baybe.utils.sampling_algorithms", "DiscreteSamplingMethod", "baybe.utils.sampling_algorithms.farthest_point_sampling", "baybe.utils.sampling_algorithms.sample_numerical_df", "baybe.utils.scaling", "ColumnTransformer", "baybe.utils.torch", "baybe.utils.torch.DTypeFloatTorch", "baybe.utils.torch.VARNAME_TORCH_USE_SINGLE_PRECISION", "baybe.utils.validation", "baybe.utils.validation.finite_float", "baybe.utils.validation.non_inf_float", "baybe.utils.validation.non_nan_float", "baybe.utils.validation.validate_not_nan", "baybe.utils.validation.validate_parameter_input", "baybe.utils.validation.validate_target_input", "Backtesting", "Optimizing a Custom Black-Box Function", "Example for full simulation loop using a table-based lookup mechanism with initial", "Example for full simulation loop using a table-based lookup mechanism", "Example for full simulation loop using a table-based lookup mechanism with incomplete", "Basics", "Basic example for using BayBE", "Example for using different strategies", "Constraints Continuous", "Example for constraints in a hybrid searchspace", "Example for linear constraints in a continuous searchspace", "Constraints Discrete", "Example for using custom constraints in discrete searchspaces", "Example for using dependency constraints in discrete searchspaces", "Example for using exclusion constraints in discrete searchspaces", "Example for using exclusion constraints incorporating sums and products", "Custom Hooks", "Registering Custom Hooks", "Campaign Stopping", "Monitoring the Probability of Improvement", "Custom Surrogates", "Example for surrogate model with a custom pretrained model", "Example for custom parameter passing in surrogate models", "Mixtures", "Modeling a Mixture in Slot-Based Representation", "Modeling a Mixture in Traditional Representation", "Multi-Armed Bandit", "Bernoulli Multi Armed Bandit", "Multi Target", "Example for using the multi target mode for the objective", "Single-Target vs. Pareto Optimization", "Searchspaces", "Creating Continuous Search Spaces", "Example for using a synthetic BoTorch test function in a discrete searchspace", "Example for using synthetic test functions in hybrid spaces", "Serialization", "Example for the serialization of a campaign", "Example for creating campaigns from configs", "Example for validation of a config file", "Transfer Learning", "Backtesting", "Transfer Learning", "Examples", "FAQ", "BayBE \u2014 A Bayesian Back End for Design of Experiments", "Known Issues", "Changelog", "Contributing to BayBE", "Contributors", "License", "Active Learning", "Asynchronous Workflows", "Campaigns", "Constraints", "Environment Variables", "Getting Recommendations", "Insights", "Objective", "Parameters", "Recommenders", "Search Spaces", "Serialization", "Simulation", "Surrogates", "Targets", "Transfer Learning", "User Guide", "Utilities"], "titleterms": {"": 449, "0": 448, "01": 448, "02": 448, "03": 448, "04": 448, "05": 448, "06": 448, "07": 448, "08": 448, "09": 448, "1": 448, "10": 448, "11": 448, "12": 448, "13": 448, "14": 448, "15": 448, "16": 448, "17": 448, "19": 448, "2": 448, "2022": 448, "2023": 448, "2024": 448, "2025": 448, "21": 448, "23": 448, "24": 448, "27": 448, "28": 448, "29": 448, "3": 448, "31": 448, "4": 448, "5": 448, "6": 448, "7": 448, "8": 448, "9": 448, "A": 446, "For": 460, "On": 458, "The": [429, 439, 446, 457, 463, 464, 467], "abbrevi": 463, "acqf": 2, "acquisit": [1, 2, 23, 25, 27, 28, 29, 409, 453, 454], "acquisitionfunct": 24, "action": 467, "activ": [452, 460], "activate_paramet": 157, "ad": [408, 448, 453, 454, 467, 469], "add_fake_measur": 353, "add_noise_to_perturb_degenerate_row": 354, "add_parameter_nois": 355, "addendum": 431, "addit": 426, "additivekernel": 117, "advanc": [446, 465], "altern": 463, "amount": 426, "an": 429, "appli": 457, "arm": [428, 429], "arm64": 447, "arrai": 464, "arrays_to_datafram": 356, "assembli": 463, "asynchron": 453, "attr": 449, "augment": [316, 317, 318], "auto": 465, "automat": 463, "avail": [409, 465], "avx": 447, "back": 446, "backtest": [402, 442], "bandit": [252, 428, 429], "base": [23, 33, 103, 121, 123, 136, 166, 177, 180, 190, 193, 200, 254, 256, 296, 404, 405, 406, 411, 412, 426, 427, 436, 457, 464], "basesequentialmetarecommend": 183, "basic": [107, 168, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 407, 408, 454, 456, 458, 463], "basickernel": 104, "batch": 454, "batchify_ensemble_predictor": 288, "batchify_mean_var_predict": 289, "batteri": 446, "bayb": [0, 1, 2, 23, 25, 27, 28, 29, 30, 32, 33, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 107, 116, 120, 121, 123, 124, 126, 127, 129, 131, 133, 134, 135, 136, 140, 143, 145, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 176, 177, 179, 180, 182, 187, 189, 190, 192, 193, 195, 197, 198, 199, 200, 202, 207, 211, 212, 214, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 259, 261, 263, 264, 265, 267, 270, 271, 272, 274, 275, 277, 279, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 408, 446, 449], "bayesian": [192, 193, 195, 197, 198, 446, 461], "bayesianlinearsurrog": 280, "bayesianrecommend": 194, "bell_transform": 307, "bernoulli": 429, "betabernoullimultiarmedbanditsurrog": 253, "betaprior": 169, "binari": [298, 300], "binarytarget": 299, "black": [403, 429], "block_deserialization_hook": 231, "block_serialization_hook": 232, "bo": 458, "boolean": [335, 336, 337, 338], "both": 438, "botorch": [195, 435], "botorchrecommend": 196, "bound": [419, 459, 462], "box": [403, 429], "break": 448, "build": [429, 462], "bytes_to_human_read": 375, "cach": [454, 456], "call": 457, "callabl": [411, 412, 436, 464], "campaign": [30, 31, 403, 404, 405, 406, 409, 411, 412, 414, 415, 417, 420, 423, 424, 431, 432, 435, 436, 438, 439, 454], "candid": [454, 457], "cardinalityconstraint": 34, "case": 429, "cast": 459, "catch_constant_target": 290, "categor": 140, "categoricalencod": 146, "categoricalparamet": [141, 460], "caution": 457, "challeng": 455, "chang": 448, "changelog": 448, "check_if_in": 336, "chemic": 446, "chemistri": [339, 340, 341, 342, 343], "choicevalu": 300, "class": 449, "classproperti": 323, "clone": 446, "closer_el": 380, "closest_el": 381, "cluster": [202, 461], "clustering_algorithm": [344, 345, 346], "code": 449, "columntransform": 391, "compar": 438, "compon": 419, "composit": [116, 259, 465], "compositekernel": 105, "compositesurrog": 260, "comput": [455, 458], "condit": [39, 40, 455], "config": [439, 440, 454], "configur": [423, 424, 439, 457, 459, 463], "constraint": [32, 33, 35, 39, 43, 46, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 410, 411, 412, 413, 414, 415, 416, 417, 426, 427, 455, 457, 462, 469], "construct": [404, 405, 406, 411, 412, 426, 435, 436, 459, 462], "constructor": [462, 463], "continu": [43, 212, 410, 412, 426, 434, 452, 455, 460, 462, 467, 469], "continuouscardinalityconstraint": [44, 455], "continuousconstraint": 36, "continuouslinearconstraint": [45, 455], "continuouslinearequalityconstraint": 47, "continuouslinearinequalityconstraint": 48, "continuousnonlinearconstraint": 37, "continuousparamet": 137, "contribut": 449, "contributor": 450, "control": [454, 457], "conveni": 459, "convent": 449, "convers": [348, 349, 350, 351, 459, 463], "convert": [233, 423], "convert_acqf": 28, "convert_bound": 372, "convert_to_float": 324, "copi": 463, "core": [214, 217, 218, 230, 231, 232, 233, 234, 235, 236, 243, 244, 265, 272, 274], "cpu": 447, "creat": [403, 404, 405, 406, 409, 411, 412, 414, 415, 416, 417, 423, 424, 431, 434, 435, 438, 439, 442, 443, 454, 462], "create_fake_input": 357, "creation": [404, 405, 406, 426, 427, 454, 469], "current": 465, "custom": [143, 261, 263, 403, 414, 418, 419, 422, 423, 424, 465], "customdiscreteparamet": [144, 460], "customencod": 147, "customonnxsurrog": 262, "data": [404, 405, 406, 462, 467], "datafram": [352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 411, 412, 436, 462, 463, 464], "de": [438, 463], "default": [275, 462, 463], "defaultkernelfactori": 276, "defin": [403, 411, 412, 419, 420, 421, 431, 432, 435, 436, 440, 442, 443, 446], "definit": 420, "depend": [415, 446, 460], "deprec": [46, 47, 48, 49, 448], "deprecationerror": 67, "descript": 431, "deseri": 463, "deserialize_datafram": 240, "design": [446, 449], "desir": [124, 126, 454], "desirabilityobject": [125, 459], "develop": 449, "df_apply_dependency_augment": 317, "df_apply_permutation_augment": 318, "df_drop_single_value_column": 358, "df_drop_string_column": 359, "df_uncorrelated_featur": 360, "dictionari": [439, 440], "differ": 409, "dimens": 436, "discret": [50, 219, 222, 223, 224, 413, 414, 415, 416, 426, 435, 454, 455, 460, 462], "discretecardinalityconstraint": [51, 455], "discreteconstraint": 38, "discretecustomconstraint": [52, 455], "discretedependenciesconstraint": [53, 455], "discreteexcludeconstraint": [54, 455], "discretelinkedparametersconstraint": [55, 455], "discretenolabelduplicatesconstraint": [56, 455], "discreteparamet": 138, "discretepermutationinvarianceconstraint": [57, 455], "discreteproductconstraint": [58, 455], "discretesamplingmethod": 387, "discretesumconstraint": [59, 455], "discuss": 429, "disk": 456, "do": 464, "docstr": 449, "document": 424, "domin": 459, "dtypefloatnumpi": 377, "dtypefloatonnx": 378, "dtypefloattorch": 393, "dummi": 320, "duplic": 426, "dure": 469, "dynam": 457, "edbo": 277, "edbokernelfactori": 278, "effici": 469, "emptysearchspaceerror": 68, "encod": 460, "end": 446, "enum": [127, 145, 301], "environ": 456, "equival": 463, "estim": 469, "exampl": [404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 423, 424, 431, 435, 436, 438, 439, 440, 444, 446, 458], "except": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "exceptiongroup": 447, "exclud": 457, "exclus": [416, 417, 457], "expect": 467, "expectedimprov": 3, "experi": [414, 415, 416, 417, 423, 424, 431, 438, 446, 453, 464], "experiment": [454, 456, 458], "expir": 448, "explain": [95, 458], "explicit": 462, "extend": 449, "extract": 465, "fake": 469, "faq": 445, "farthest_point_sampl": 388, "featur": 456, "field": 463, "file": [439, 440], "filter_df": 361, "find_subclass": 325, "finite_float": 396, "fix": [447, 448], "float": 456, "fpsiniti": 208, "fpsrecommend": 209, "fraction_to_float": 349, "from": [439, 446, 448, 454, 462, 463], "full": [404, 405, 406, 462], "function": [403, 404, 405, 406, 409, 411, 412, 420, 431, 435, 436, 449, 453, 454], "further": 454, "fuzzy_row_match": 362, "gammaprior": 170, "gaussian_process": [264, 265, 267, 270, 271, 272, 274, 275, 277], "gaussianmixtureclusteringrecommend": 203, "gaussianprocesspreset": 273, "gaussianprocesssurrog": 266, "gener": [442, 443, 449, 461], "geom_mean": 382, "get": [408, 454, 457], "get_base_structure_hook": 234, "get_baseclass": 326, "get_canonical_smil": 340, "get_fingerprint_class": 341, "get_parameters_from_datafram": 158, "get_subclass": 327, "get_transform_object": 363, "get_transform_paramet": 226, "get_user_detail": 311, "github": 446, "global": 452, "group_duplicate_valu": 328, "guid": 468, "halfcauchyprior": 171, "halfnormalprior": 172, "handle_missing_valu": 364, "hilberts_factori": 329, "hook": [418, 419, 420, 421], "hybrid": [411, 436, 455], "imaginari": 429, "implicit": 459, "import": [403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 419, 421, 423, 424, 426, 427, 429, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 458], "improv": 421, "includ": 446, "inclus": 404, "incompatibilityerror": 69, "incompatibleacquisitionfunctionerror": 70, "incompatibleargumenterror": 71, "incompatibleexplainererror": 72, "incompatiblesearchspaceerror": 73, "incompatiblesurrogateerror": 74, "incomplet": 406, "incompletemeasurementserror": 75, "incorpor": 417, "independentgaussiansurrog": 255, "index": 446, "indic": 446, "infeasibilityerror": 76, "infiniteintervalerror": 370, "influenc": 469, "inform": [454, 461], "initi": [404, 409], "inputdatatypewarn": 77, "insight": [93, 94, 95, 96, 98, 99, 100, 101, 458], "instal": [446, 447], "instanc": 419, "instead": [423, 424], "instruct": 456, "internet": 456, "interpret": 458, "interrupt": 420, "interv": [369, 370, 371, 372, 373], "invalidsurrogatemodelerror": 78, "invalidtargetvalueerror": 79, "invari": 426, "invok": 463, "irrelev": 467, "is_abstract": 337, "is_all_inst": 330, "is_cardinality_fulfil": 61, "is_en": 312, "is_inact": 159, "is_shap_explain": 100, "issu": [446, 447], "iter": [411, 412, 423, 424, 431], "json": [454, 463], "kernel": [102, 103, 106, 107, 116], "kernel_factori": [267, 270], "kernelfactori": 268, "kmeansclusteringrecommend": 204, "kmedoid": [346, 347], "known": [446, 447], "label": 460, "leak": 447, "learn": [441, 443, 452, 464, 467], "licens": [446, 451], "like": 460, "limit": [453, 458, 465, 466], "linear": [279, 412], "linear_transform": 308, "linearkernel": 108, "link": 424, "local": [446, 452], "logexpectedimprov": 4, "lognormalprior": 173, "look_up_target": 246, "lookup": [245, 246, 404, 405, 406, 411, 412, 420, 436, 442, 443, 464], "loop": [403, 404, 405, 406, 442, 443, 446], "maco": 447, "maintain": [446, 450], "make_dict_valid": 292, "make_explainer_for_surrog": 101, "make_gp_from_preset": 274, "mandatori": 459, "manual": [414, 415, 416, 417], "mark": 453, "match": 466, "match_attribut": 331, "maternkernel": 109, "max": 466, "mean": 464, "meanpredictionsurrog": 282, "measur": [408, 423, 424, 454, 469], "mechan": [404, 405, 406, 464], "memori": [374, 375, 469], "memorys": 220, "meta": [179, 180, 182, 457, 461], "metarecommend": 181, "method": [419, 449, 452], "min": 466, "minimumcardinalityviolatedwarn": 80, "miss": 464, "mixin": 237, "mixtur": [425, 426, 427], "mode": [431, 466], "model": [409, 423, 424, 426, 427, 429, 458, 465], "modelnottrainederror": 81, "monitor": 421, "monkeypatch": [419, 420, 421], "multi": [428, 429, 430, 431, 458, 459, 465], "multipl": 464, "naiv": [187, 281], "naivehybridspacerecommend": 188, "name": 460, "name_to_smil": 342, "necessari": [404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 423, 424, 431, 435, 436, 438, 439, 440], "nest": 463, "ngboost": 283, "ngboostsurrog": 284, "nois": 469, "nomcacquisitionfunctionerror": 82, "nomeasurementserror": 83, "non": 459, "non_inf_float": 397, "non_nan_float": 398, "non_shap_explain": 96, "none": 464, "nonpredict": [199, 200, 202, 207], "nonpredictiverecommend": 201, "nonstring_to_tupl": 350, "norecommenderslefterror": 84, "normalize_input_dtyp": 365, "normalprior": 174, "notenoughpointslefterror": 85, "nothingtosimulateerror": 86, "numer": [150, 304, 376, 377, 378, 379, 380, 381, 382], "numericalcontinuousparamet": [151, 460], "numericaldiscreteparamet": [152, 460], "numericaltarget": [305, 466], "numericalunderflowerror": 87, "object": [120, 121, 122, 123, 124, 126, 127, 129, 131, 133, 134, 404, 405, 406, 409, 411, 412, 414, 415, 416, 417, 431, 435, 438, 442, 443, 446, 454, 459, 463], "onnx": 423, "optim": [403, 432, 442, 443, 446, 454, 469], "option": [446, 460], "optionalimporterror": 88, "order": [426, 456], "output": [423, 424, 458, 459, 465], "overrid": 449, "packag": [446, 456], "page": 458, "pamclusteringrecommend": 205, "parallel": [454, 456], "paramet": [135, 136, 139, 140, 143, 145, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 404, 405, 406, 409, 424, 426, 427, 454, 458, 460, 462, 469], "parameter_cartesian_prod_panda": 222, "parameter_cartesian_prod_polar": 223, "parameterencod": 148, "pareto": [129, 432], "paretoobject": [130, 459], "partial": [25, 453], "partialacquisitionfunct": 26, "pass": 424, "pend": 453, "perform": [404, 431, 435, 436], "periodickernel": 110, "perman": 457, "permut": 426, "piecewisepolynomialkernel": 111, "plainkernelfactori": 269, "plot": [403, 420, 421, 458], "point": 456, "polar": [447, 456], "polynomialkernel": 112, "posterior": 454, "posteriormean": 5, "posteriorstandarddevi": 6, "posteriorstatist": 256, "pre": 423, "precis": 456, "predict": 454, "preset": [271, 272, 274, 275, 277], "pretrain": 423, "pretty_print_df": 366, "print": [414, 415, 417, 431], "prior": [165, 166, 167, 168], "probabilityofimprov": 7, "probabl": 421, "problem": [403, 420, 432, 447], "product": [417, 462], "productkernel": 118, "pull": 449, "pure": [189, 190, 192, 193, 195, 197, 198, 199, 200, 202, 207, 452, 461], "purerecommend": 191, "pycharm": 447, "qexpectedimprov": 9, "qknowledgegradi": 10, "qlogexpectedimprov": 11, "qlognoisyexpectedhypervolumeimprov": 13, "qlognoisyexpectedimprov": 14, "qlognparego": 12, "qnegintegratedposteriorvari": 15, "qnoisyexpectedhypervolumeimprov": 16, "qnoisyexpectedimprov": 17, "qposteriorstandarddevi": 18, "qprobabilityofimprov": 19, "qsimpleregret": 20, "qthompsonsampl": 21, "quick": 446, "qupperconfidencebound": 22, "random": [383, 384, 385], "random_forest": 285, "randomforestsurrog": 286, "randomrecommend": 210, "rbfkernel": 113, "recommend": [176, 177, 179, 180, 182, 187, 189, 190, 192, 193, 195, 197, 198, 199, 200, 202, 207, 408, 409, 423, 424, 435, 436, 438, 453, 454, 457, 461], "recommenderprotocol": 178, "reduct": 452, "refers_to": 332, "regist": 419, "register_custom_architectur": 263, "register_hook": 333, "relat": 447, "remov": 448, "replic": 465, "represent": [426, 427, 458, 462], "reproduc": 469, "request": 449, "restrict": 462, "result": [403, 420, 421, 453], "rffkernel": 114, "role": 467, "row": 456, "rqkernel": 115, "run": [403, 411, 412, 429, 456], "sampl": [207, 452, 461], "sample_numerical_df": 389, "sampling_algorithm": [386, 388, 389], "scalar": [126, 128, 465], "scale": 390, "scalekernel": 119, "scenario": [247, 248, 456, 464], "scope": 456, "search": [426, 427, 434, 442, 446, 452, 462, 469], "searchspac": [211, 212, 214, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 404, 406, 409, 411, 412, 414, 415, 416, 417, 431, 433, 435, 436, 443], "searchspacematchwarn": 89, "searchspacetyp": 216, "see": 467, "select_constructor_hook": 235, "semaphor": 447, "sequenti": [182, 454], "sequential_greedi": [197, 198], "sequentialgreedyrecommend": 198, "sequentialmetarecommend": 184, "serial": [229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 437, 438, 454, 463], "serialize_datafram": 241, "serialmixin": 238, "set": [403, 420, 421, 432, 434, 442, 443], "set_random_se": 384, "setup": [408, 414, 415, 416, 417, 423, 424, 426, 427, 429, 431, 432, 438], "shap": [94, 95, 96, 98, 99, 100, 101, 458], "shap_explain": 98, "shap_plot": 99, "shapinsight": 97, "signatur": 419, "simplex": [426, 462], "simul": [242, 243, 244, 245, 246, 247, 248, 249, 250, 403, 404, 405, 406, 420, 429, 442, 443, 456, 464], "simulate_experi": 244, "simulate_scenario": 248, "simulate_transfer_learn": 250, "singl": [131, 432, 464], "singletargetobject": [132, 459], "sklearnclusteringrecommend": 206, "slot": [426, 427], "smile": 154, "smiles_to_fingerprint_featur": 343, "smoothedboxprior": 175, "some": [411, 412, 431], "sort_paramet": 160, "space": [426, 427, 434, 436, 442, 446, 452, 454, 462, 469], "span": 426, "stage": 423, "start": 446, "statist": 454, "stop": 420, "str_to_acqf": 29, "strategi": [409, 446], "streamingsequentialmetarecommend": 185, "string": [439, 463], "strtobool": 338, "structure_constraint": 49, "studi": 465, "sub": 452, "subselectioncondit": [41, 455], "subspac": 462, "subspacecontinu": 213, "subspacediscret": 221, "substanc": [153, 154, 426, 446], "substanceencod": 149, "substanceparamet": [155, 460], "suggest": 447, "suitabl": 409, "sum": 417, "support": [447, 453], "surrog": [251, 252, 254, 256, 257, 259, 261, 263, 264, 265, 267, 270, 271, 272, 274, 275, 277, 279, 281, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 409, 422, 423, 424, 458, 465], "surrogateprotocol": 258, "synchron": 449, "synthet": [435, 436], "tabl": [404, 405, 406, 442, 443, 446], "target": [295, 296, 297, 298, 300, 301, 304, 306, 307, 308, 309, 419, 430, 431, 432, 459, 466, 469], "targetmod": 302, "targettransform": 303, "task": [442, 443], "taskparamet": [142, 460, 467], "technologi": 467, "telemetri": [310, 311, 312, 313, 314, 446, 456], "telemetry_record_recommended_measurement_percentag": 313, "telemetry_record_valu": 314, "temporary_se": 385, "terminologi": [426, 463, 464, 467], "test": [411, 412, 435, 436], "theoret": 426, "thi": [404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 417, 431, 435, 436, 458], "third_parti": [345, 346], "thresholdcondit": [42, 455], "through": 467, "to_kernel_factori": 270, "to_object": 123, "to_searchspac": 217, "to_str": 351, "to_tensor": 367, "to_tupl": 334, "toggl": 457, "toler": 454, "tool": 449, "torch": [392, 393, 394, 447], "tradit": 427, "train": 423, "trajectori": 457, "transfer": [441, 443, 464, 467], "transfer_learn": [249, 250], "transform": [306, 307, 308, 309, 431], "transform_target_column": 368, "treasur": 467, "triangular_transform": 309, "trigger": [419, 421], "two": 440, "twophasemetarecommend": 186, "type": 463, "type_validation_convert": 293, "uncertainti": 452, "unidentifiedsubclasserror": 90, "uninstal": 456, "uninterrupt": 420, "unlock": 467, "unmatchedattributeerror": 91, "unspecifi": 321, "unspecifiedtyp": 322, "unstructure_bas": 236, "unusedobjectwarn": 92, "upperconfidencebound": 8, "us": [404, 405, 406, 408, 409, 414, 415, 416, 417, 423, 424, 429, 431, 435, 436, 462, 463, 464, 465], "usag": 458, "use_fallback_constructor_hook": 373, "user": 468, "util": [27, 28, 29, 60, 61, 156, 157, 158, 159, 160, 239, 240, 241, 287, 288, 289, 290, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 469], "v": [419, 426, 432, 447, 454, 457], "valid": [62, 63, 64, 65, 133, 134, 161, 162, 163, 164, 225, 226, 227, 228, 291, 292, 293, 294, 395, 396, 397, 398, 399, 400, 401, 424, 440], "validate_cardinality_constraint_parameter_bound": 63, "validate_cardinality_constraints_are_nonoverlap": 64, "validate_constraint": 65, "validate_custom_architecture_cl": 294, "validate_decorrel": 162, "validate_is_finit": 163, "validate_not_nan": 399, "validate_paramet": 228, "validate_parameter_input": 400, "validate_parameter_nam": 227, "validate_searchspace_from_config": 218, "validate_simplex_subspace_from_config": 224, "validate_target_input": 401, "validate_target_nam": 134, "validate_unique_valu": 164, "valu": [454, 460, 462, 463, 464], "variabl": 456, "varname_numpy_use_single_precis": 379, "varname_torch_use_single_precis": 394, "verif": [414, 415, 416, 417, 426, 427, 440], "verifi": 412, "via": 458, "visual": 432, "we": 464, "what": 464, "window": 447, "within": 462, "without": 447, "workflow": [449, 453], "wrap": [411, 412, 436], "write": 449}})